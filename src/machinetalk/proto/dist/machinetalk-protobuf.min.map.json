{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","build/js/protoexport.js","build/js/machinetalk/protobuf/emcclass.js","build/js/machinetalk/protobuf/config.js","build/js/machinetalk/protobuf/firmware.js","build/js/machinetalk/protobuf/nanopb.js","build/js/machinetalk/protobuf/preview.js","build/js/machinetalk/protobuf/motcmds.js","build/js/machinetalk/protobuf/test.js","build/js/machinetalk/protobuf/rtapicommand.js","build/js/machinetalk/protobuf/canon.js","build/js/machinetalk/protobuf/log.js","build/js/machinetalk/protobuf/object.js","build/js/machinetalk/protobuf/task.js","build/js/machinetalk/protobuf/types.js","build/js/machinetalk/protobuf/value.js","build/js/machinetalk/protobuf/rtapi_message.js","build/js/machinetalk/protobuf/status.js","build/js/machinetalk/protobuf/message.js","node_modules/protobufjs/dist/protobuf.js","node_modules/browserify/node_modules/process/browser.js","node_modules/protobufjs/node_modules/bytebuffer/dist/bytebuffer.js","node_modules/protobufjs/node_modules/bytebuffer/node_modules/long/dist/long.js"],"names":["module","exports","require","pb","newBuilder","package","options","java_package","messages","name","fields","rule","type","id","default","(nanopb_msgopt).msgid","enums","values","build","(nanopb).max_size","(nanopb).max_count","(nanopb).type","global","factory","define","this","ByteBuffer","isCommonJS","ProtoBuf","Long","VERSION","WIRE_TYPES","VARINT","BITS64","LDELIM","STARTGROUP","ENDGROUP","BITS32","PACKABLE_WIRE_TYPES","TYPES","int32","wireType","defaultValue","uint32","sint32","int64","ZERO","undefined","uint64","UZERO","sint64","bool","double","string","bytes","fixed32","sfixed32","fixed64","sfixed64","float","enum","message","group","MAP_KEY_TYPES","ID_MIN","ID_MAX","convertFieldsToCamelCase","populateAccessors","populateDefaults","Util","IS_NODE","process","XHR","XMLHttpFactories","XMLHttpRequest","ActiveXObject","xhr","i","length","e","Error","fetch","path","callback","fs","readFile","err","data","readFileSync","open","setRequestHeader","overrideMimeType","send","status","responseText","onreadystatechange","readyState","toCamelCase","str","replace","$0","$1","toUpperCase","Lang","DELIM","RULE","TYPE","NAME","TYPEDEF","TYPEREF","FQTYPEREF","NUMBER","NUMBER_DEC","NUMBER_HEX","NUMBER_OCT","NUMBER_FLT","BOOL","ID","NEGID","WHITESPACE","STRING","STRING_DQ","STRING_SQ","DotProto","mkId","value","mayBeNegative","sign","charAt","substring","test","parseInt","mkNumber","val","Infinity","NaN","parseFloat","setOption","Array","isArray","push","Tokenizer","proto","source","index","line","stack","_stringOpen","TokenizerPrototype","prototype","_readString","re","lastIndex","match","exec","next","shift","repeat","prev","end","delim","token","peek","skip","expected","actual","omit","toString","Parser","tn","proto3","ParserPrototype","parse","topLevel","imports","services","head","_parseMessage","_parseEnum","_parseOption","_parseService","_parseExtend","_readValue","mayBeTypeRef","toLowerCase","parent","isList","custom","_parseOptionValue","svc","rpc","_parseServiceRPC","method","request","response","request_stream","response_stream","fld","isGroup","msg","oneofs","_parseFieldOptions","_parseMessageField","_parseMessageOneOf","_parseExtensions","_parseMessageReserved","grp","first","enm","range","ext","ref","Reflect","mkDefault","mkLong","unsigned","low","high","fromString","fromNumber","skipTillGroupEnd","expectedId","buf","tag","readVarint32","readUint8","offset","T","builder","className","TPrototype","fqn","ptr","includeClass","Namespace","syntax","call","children","NamespacePrototype","Object","create","getChildren","slice","k","addChild","child","other","getChild","Message","Field","originalName","nameOrId","key","resolve","qn","excludeNonNamespace","part","split","t","unshift","len","join","ns","defineProperty","buildOpt","opt","keys","getOption","Element","resolvedType","isMapKey","indexOf","ElementPrototype","defaultFieldValue","verifyValue","fail","bind","String","isByteBuffer","wrap","Enum","Value","clazz","Builder","obj","hasOwnProperty","calculateLength","n","calculateVarint64","calculateVarint32","zigZagEncode32","zigZagEncode64","calculateUTF8Bytes","remaining","calculate","encodeValue","buffer","writeVarint64","writeVarint32","writeVarint32ZigZag","writeUint32","writeInt32","writeVarint64ZigZag","writeUint64","writeInt64","writeFloat32","writeFloat64","writeVString","prevOffset","append","bb","LE","encode","flip","decode","nBytes","readVarint32ZigZag","readUint32","readInt32","readVarint64","toUnsigned","readVarint64ZigZag","readUint64","readInt64","readFloat","readDouble","readVString","clone","limit","valueFromString","fromBinary","valueToString","extensions","_fields","_fieldsById","_fieldsByName","MessagePrototype","rebuild","cloneRaw","binaryAsBase64","longsAsStrings","getName","object","toBase64","toBuffer","isLong","fromValue","forEach","v","Map","it","entries","done","keyElem","valueElem","$type","field","OneOf","var_args","repeated","map","required","arguments","ArrayBuffer","$set","add","noAssert","$add","set","keyOrObj","ikey","oneof","currentField","get","$get","ExtensionField","Name","setter","getter","noVerify","isNew","le","littleEndian","encodeDelimited","enc","encodeAB","toArrayBuffer","encodeNB","encode64","encodeHex","toHex","toRaw","encodeJSON","JSON","stringify","decodeDelimited","off","decode64","decodeHex","decodeJSON","Service","Extension","fieldMissing","expectedGroupEndId","start","keyval","keytype","keyType","element","keyElement","FieldPrototype","skipRepeated","res","hasWirePresence","ensureCapacity","varintLen","contents","m","ni","wireTypeOK","msgbuf","extension","EnumPrototype","enumerable","root","ServicePrototype","rpcImpl","setTimeout","RPCMethod","req","resolvedRequestType","TypeError","resolvedResponseType","notABuffer","Method","MethodPrototype","requestName","responseName","requestStream","responseStream","propagateSyntax","resolved","result","files","importRoot","BuilderPrototype","isMessage","def","isMessageField","isEnum","isService","isExtend","reset","namespace","defs","pop","subObj","mtd","json","filename","file","fname","resetRoot","importFilename","$2","base","resolveAll","lookup","arrayIterator","arr","idx","MapPrototype","clear","keyValue","hadKey","entry","strKeys","cb","thisArg","valValue","has","loadProto","loadJson","protoFromString","loadProtoFile","protoFromFile","loadJsonFile","cleanUpNextTick","draining","currentQueue","queue","concat","queueIndex","drainQueue","timeout","run","clearTimeout","Item","fun","array","noop","nextTick","args","apply","title","browser","env","argv","version","versions","on","addListener","once","removeListener","removeAllListeners","emit","binding","cwd","chdir","dir","umask","stringSource","s","charCodeAt","stringDestination","cs","ps","stringFromCharCode","ieee754_read","isLE","mLen","eLen","eMax","eBias","nBits","d","Math","pow","ieee754_write","c","rt","abs","isNaN","floor","log","LN2","capacity","DEFAULT_CAPACITY","DEFAULT_ENDIAN","DEFAULT_NOASSERT","RangeError","EMPTY_BUFFER","view","Uint8Array","markedOffset","LITTLE_ENDIAN","BIG_ENDIAN","ByteBufferPrototype","__isByteBuffer__","configurable","fromCharCode","accessor","allocate","buffers","encoding","bi","subarray","fromBase64","fromHex","fromUTF8","fromDebug","byteOffset","byteLength","readBytes","relative","writeBytes","writeInt8","capacity0","resize","writeByte","readInt8","readByte","writeUint8","capacity1","writeUInt8","readUInt8","writeInt16","capacity2","writeShort","readInt16","readShort","writeUint16","capacity3","writeUInt16","readUint16","readUInt16","capacity4","writeInt","readInt","capacity5","writeUInt32","readUInt32","capacity6","lo","hi","writeLong","readLong","capacity7","writeUInt64","readUInt64","capacity8","writeFloat","readFloat32","capacity9","writeDouble","readFloat64","MAX_VARINT32_BYTES","zigZagDecode32","b","size","capacity10","MAX_VARINT64_BYTES","part0","toInt","part1","shiftRightUnsigned","part2","toSigned","shiftLeft","xor","shiftRight","zigZagDecode64","and","ONE","negate","capacity11","fromBits","writeCString","utfx","calculateUTF16asUTF8","capacity12","encodeUTF16toUTF8","readCString","sd","decodeUTF8toUTF16","writeIString","capacity13","readIString","readUTF8String","METRICS_BYTES","METRICS_CHARS","writeUTF8String","capacity14","writeString","calculateUTF8Chars","calculateString","metrics","decodeUTF8","cp","UTF8toUTF16","readString","l","capacity15","capacity16","appendTo","target","assert","copy","compact","begin","copyTo","targetOffset","sourceOffset","sourceLimit","targetRelative","current","fill","mark","order","BE","bigEndian","prepend","diff","prependTo","printDebug","out","console","toDebug","reverse","forceCopy","toUTF8","toBinary","toColumns","lxiv","aout","ain","src","dst","t1","t2","btoa","atob","b64","chars","parts","charCode","columns","hex","asc","ch","j","rs","ho","hm","hl","isFinite","MAX_CODEPOINT","encodeUTF8","a","UTF16toUTF8","c1","c2","calculateCodePoint","calculateUTF8","fromInt","cachedObj","cache","UINT_CACHE","INT_CACHE","TWO_PWR_64_DBL","MAX_UNSIGNED_VALUE","TWO_PWR_63_DBL","MIN_VALUE","MAX_VALUE","neg","TWO_PWR_32_DBL","lowBits","highBits","radix","p","radixToPower","pow_dbl","min","power","mul","__isLong__","TWO_PWR_16_DBL","TWO_PWR_24_DBL","TWO_PWR_24","UONE","NEG_ONE","LongPrototype","toNumber","isZero","isNegative","eq","radixLong","div","rem1","sub","rem","remDiv","intval","digits","getHighBits","getHighBitsUnsigned","getLowBits","getLowBitsUnsigned","getNumBitsAbs","bit","isPositive","isOdd","isEven","equals","notEquals","neq","lessThan","comp","lt","lessThanOrEqual","lte","greaterThan","gt","greaterThanOrEqual","gte","compare","thisNeg","otherNeg","not","addend","a48","a32","a16","a00","b48","b32","b16","b00","c48","c32","c16","c00","subtract","subtrahend","multiply","multiplier","divide","divisor","approx","halfThis","shr","shl","max","log2","ceil","delta","approxRes","approxRem","modulo","mod","or","numBits","shru"],"mappings":"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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","module.exports['canon'] = require('./machinetalk/protobuf/canon.js').pb;\nmodule.exports['config'] = require('./machinetalk/protobuf/config.js').pb;\nmodule.exports['emcclass'] = require('./machinetalk/protobuf/emcclass.js').pb;\nmodule.exports['firmware'] = require('./machinetalk/protobuf/firmware.js').pb;\nmodule.exports['log'] = require('./machinetalk/protobuf/log.js').pb;\nmodule.exports['message'] = require('./machinetalk/protobuf/message.js').pb;\nmodule.exports['motcmds'] = require('./machinetalk/protobuf/motcmds.js').pb;\nmodule.exports['nanopb'] = require('./machinetalk/protobuf/nanopb.js').pb;\nmodule.exports['object'] = require('./machinetalk/protobuf/object.js').pb;\nmodule.exports['preview'] = require('./machinetalk/protobuf/preview.js').pb;\nmodule.exports['rtapi_message'] = require('./machinetalk/protobuf/rtapi_message.js').pb;\nmodule.exports['rtapicommand'] = require('./machinetalk/protobuf/rtapicommand.js').pb;\nmodule.exports['status'] = require('./machinetalk/protobuf/status.js').pb;\nmodule.exports['task'] = require('./machinetalk/protobuf/task.js').pb;\nmodule.exports['test'] = require('./machinetalk/protobuf/test.js').pb;\nmodule.exports['types'] = require('./machinetalk/protobuf/types.js').pb;\nmodule.exports['value'] = require('./machinetalk/protobuf/value.js').pb;\n","module.exports = require(\"protobufjs\").newBuilder({})['import']({\n    \"package\": null,\n    \"options\": {\n        \"java_package\": \"fi.kapsi.koti.jpa.nanopb\"\n    },\n    \"messages\": [\n        {\n            \"name\": \"NanoPBOptions\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"max_size\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"max_count\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"IntSize\",\n                    \"name\": \"int_size\",\n                    \"id\": 7,\n                    \"options\": {\n                        \"default\": \"IS_DEFAULT\"\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"FieldType\",\n                    \"name\": \"type\",\n                    \"id\": 3,\n                    \"options\": {\n                        \"default\": \"FT_DEFAULT\"\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"long_names\",\n                    \"id\": 4,\n                    \"options\": {\n                        \"default\": true\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"packed_struct\",\n                    \"id\": 5,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"skip_message\",\n                    \"id\": 6,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"no_unions\",\n                    \"id\": 8,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"uint32\",\n                    \"name\": \"msgid\",\n                    \"id\": 9\n                }\n            ]\n        },\n        {\n            \"name\": \"machinetalk\",\n            \"fields\": [],\n            \"messages\": [\n                {\n                    \"name\": \"PmCartesian\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 300\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"x\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"y\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"z\",\n                            \"id\": 30\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcPose\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 301\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"PmCartesian\",\n                            \"name\": \"tran\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"a\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"b\",\n                            \"id\": 30\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"c\",\n                            \"id\": 40\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"u\",\n                            \"id\": 50\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"v\",\n                            \"id\": 60\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"w\",\n                            \"id\": 70\n                        }\n                    ]\n                }\n            ]\n        }\n    ],\n    \"enums\": [\n        {\n            \"name\": \"FieldType\",\n            \"values\": [\n                {\n                    \"name\": \"FT_DEFAULT\",\n                    \"id\": 0\n                },\n                {\n                    \"name\": \"FT_CALLBACK\",\n                    \"id\": 1\n                },\n                {\n                    \"name\": \"FT_POINTER\",\n                    \"id\": 4\n                },\n                {\n                    \"name\": \"FT_STATIC\",\n                    \"id\": 2\n                },\n                {\n                    \"name\": \"FT_IGNORE\",\n                    \"id\": 3\n                }\n            ]\n        },\n        {\n            \"name\": \"IntSize\",\n            \"values\": [\n                {\n                    \"name\": \"IS_DEFAULT\",\n                    \"id\": 0\n                },\n                {\n                    \"name\": \"IS_8\",\n                    \"id\": 8\n                },\n                {\n                    \"name\": \"IS_16\",\n                    \"id\": 16\n                },\n                {\n                    \"name\": \"IS_32\",\n                    \"id\": 32\n                },\n                {\n                    \"name\": \"IS_64\",\n                    \"id\": 64\n                }\n            ]\n        }\n    ]\n}).build();","module.exports = require(\"protobufjs\").newBuilder({})['import']({\n    \"package\": null,\n    \"options\": {\n        \"java_package\": \"fi.kapsi.koti.jpa.nanopb\"\n    },\n    \"messages\": [\n        {\n            \"name\": \"NanoPBOptions\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"max_size\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"max_count\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"IntSize\",\n                    \"name\": \"int_size\",\n                    \"id\": 7,\n                    \"options\": {\n                        \"default\": \"IS_DEFAULT\"\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"FieldType\",\n                    \"name\": \"type\",\n                    \"id\": 3,\n                    \"options\": {\n                        \"default\": \"FT_DEFAULT\"\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"long_names\",\n                    \"id\": 4,\n                    \"options\": {\n                        \"default\": true\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"packed_struct\",\n                    \"id\": 5,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"skip_message\",\n                    \"id\": 6,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"no_unions\",\n                    \"id\": 8,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"uint32\",\n                    \"name\": \"msgid\",\n                    \"id\": 9\n                }\n            ]\n        },\n        {\n            \"name\": \"machinetalk\",\n            \"fields\": [],\n            \"messages\": [\n                {\n                    \"name\": \"File\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 200\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"string\",\n                            \"name\": \"name\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"FileContent\",\n                            \"name\": \"encoding\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bytes\",\n                            \"name\": \"blob\",\n                            \"id\": 3\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Application\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 201\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"string\",\n                            \"name\": \"name\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"description\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"ApplicationType\",\n                            \"name\": \"type\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"weburi\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"File\",\n                            \"name\": \"file\",\n                            \"id\": 5\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"StdoutLine\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 202\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"index\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"line\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"MachineInfo\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 203\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"type\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"manufacturer\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"model\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"variant\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Launcher\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 204\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"index\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"name\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"description\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"File\",\n                            \"name\": \"image\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"MachineInfo\",\n                            \"name\": \"info\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"running\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"terminating\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"command\",\n                            \"id\": 8\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"shell\",\n                            \"id\": 9\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"StdoutLine\",\n                            \"name\": \"output\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"returncode\",\n                            \"id\": 11\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"workdir\",\n                            \"id\": 12\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"uint32\",\n                            \"name\": \"priority\",\n                            \"id\": 13\n                        }\n                    ]\n                }\n            ],\n            \"enums\": [\n                {\n                    \"name\": \"ApplicationType\",\n                    \"values\": [\n                        {\n                            \"name\": \"QT5_QML\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"GLADEVCP\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"JAVASCRIPT\",\n                            \"id\": 3\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"FileContent\",\n                    \"values\": [\n                        {\n                            \"name\": \"CLEARTEXT\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"ZLIB\",\n                            \"id\": 2\n                        }\n                    ]\n                }\n            ]\n        }\n    ],\n    \"enums\": [\n        {\n            \"name\": \"FieldType\",\n            \"values\": [\n                {\n                    \"name\": \"FT_DEFAULT\",\n                    \"id\": 0\n                },\n                {\n                    \"name\": \"FT_CALLBACK\",\n                    \"id\": 1\n                },\n                {\n                    \"name\": \"FT_POINTER\",\n                    \"id\": 4\n                },\n                {\n                    \"name\": \"FT_STATIC\",\n                    \"id\": 2\n                },\n                {\n                    \"name\": \"FT_IGNORE\",\n                    \"id\": 3\n                }\n            ]\n        },\n        {\n            \"name\": \"IntSize\",\n            \"values\": [\n                {\n                    \"name\": \"IS_DEFAULT\",\n                    \"id\": 0\n                },\n                {\n                    \"name\": \"IS_8\",\n                    \"id\": 8\n                },\n                {\n                    \"name\": \"IS_16\",\n                    \"id\": 16\n                },\n                {\n                    \"name\": \"IS_32\",\n                    \"id\": 32\n                },\n                {\n                    \"name\": \"IS_64\",\n                    \"id\": 64\n                }\n            ]\n        }\n    ]\n}).build();","module.exports = require(\"protobufjs\").newBuilder({})['import']({\n    \"package\": null,\n    \"options\": {\n        \"java_package\": \"fi.kapsi.koti.jpa.nanopb\"\n    },\n    \"messages\": [\n        {\n            \"name\": \"NanoPBOptions\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"max_size\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"max_count\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"IntSize\",\n                    \"name\": \"int_size\",\n                    \"id\": 7,\n                    \"options\": {\n                        \"default\": \"IS_DEFAULT\"\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"FieldType\",\n                    \"name\": \"type\",\n                    \"id\": 3,\n                    \"options\": {\n                        \"default\": \"FT_DEFAULT\"\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"long_names\",\n                    \"id\": 4,\n                    \"options\": {\n                        \"default\": true\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"packed_struct\",\n                    \"id\": 5,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"skip_message\",\n                    \"id\": 6,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"no_unions\",\n                    \"id\": 8,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"uint32\",\n                    \"name\": \"msgid\",\n                    \"id\": 9\n                }\n            ]\n        },\n        {\n            \"name\": \"machinetalk\",\n            \"fields\": [],\n            \"messages\": [\n                {\n                    \"name\": \"Connector\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 380\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"name\",\n                            \"id\": 1,\n                            \"options\": {\n                                \"(nanopb).max_size\": 20\n                            }\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"pins\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Firmware\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 385\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"build_sha\",\n                            \"id\": 1,\n                            \"options\": {\n                                \"(nanopb).max_size\": 40\n                            }\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"fpga_part_number\",\n                            \"id\": 2,\n                            \"options\": {\n                                \"(nanopb).max_size\": 20\n                            }\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"Connector\",\n                            \"name\": \"connector\",\n                            \"id\": 3,\n                            \"options\": {\n                                \"(nanopb).max_count\": 16\n                            }\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"num_leds\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"board_name\",\n                            \"id\": 5,\n                            \"options\": {\n                                \"(nanopb).max_size\": 30\n                            }\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"comment\",\n                            \"id\": 6,\n                            \"options\": {\n                                \"(nanopb).max_size\": 80\n                            }\n                        }\n                    ]\n                }\n            ]\n        }\n    ],\n    \"enums\": [\n        {\n            \"name\": \"FieldType\",\n            \"values\": [\n                {\n                    \"name\": \"FT_DEFAULT\",\n                    \"id\": 0\n                },\n                {\n                    \"name\": \"FT_CALLBACK\",\n                    \"id\": 1\n                },\n                {\n                    \"name\": \"FT_POINTER\",\n                    \"id\": 4\n                },\n                {\n                    \"name\": \"FT_STATIC\",\n                    \"id\": 2\n                },\n                {\n                    \"name\": \"FT_IGNORE\",\n                    \"id\": 3\n                }\n            ]\n        },\n        {\n            \"name\": \"IntSize\",\n            \"values\": [\n                {\n                    \"name\": \"IS_DEFAULT\",\n                    \"id\": 0\n                },\n                {\n                    \"name\": \"IS_8\",\n                    \"id\": 8\n                },\n                {\n                    \"name\": \"IS_16\",\n                    \"id\": 16\n                },\n                {\n                    \"name\": \"IS_32\",\n                    \"id\": 32\n                },\n                {\n                    \"name\": \"IS_64\",\n                    \"id\": 64\n                }\n            ]\n        }\n    ]\n}).build();","module.exports = require(\"protobufjs\").newBuilder({})['import']({\n    \"package\": null,\n    \"options\": {\n        \"java_package\": \"fi.kapsi.koti.jpa.nanopb\"\n    },\n    \"messages\": [\n        {\n            \"name\": \"NanoPBOptions\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"max_size\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"max_count\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"IntSize\",\n                    \"name\": \"int_size\",\n                    \"id\": 7,\n                    \"options\": {\n                        \"default\": \"IS_DEFAULT\"\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"FieldType\",\n                    \"name\": \"type\",\n                    \"id\": 3,\n                    \"options\": {\n                        \"default\": \"FT_DEFAULT\"\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"long_names\",\n                    \"id\": 4,\n                    \"options\": {\n                        \"default\": true\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"packed_struct\",\n                    \"id\": 5,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"skip_message\",\n                    \"id\": 6,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"no_unions\",\n                    \"id\": 8,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"uint32\",\n                    \"name\": \"msgid\",\n                    \"id\": 9\n                }\n            ]\n        }\n    ],\n    \"enums\": [\n        {\n            \"name\": \"FieldType\",\n            \"values\": [\n                {\n                    \"name\": \"FT_DEFAULT\",\n                    \"id\": 0\n                },\n                {\n                    \"name\": \"FT_CALLBACK\",\n                    \"id\": 1\n                },\n                {\n                    \"name\": \"FT_POINTER\",\n                    \"id\": 4\n                },\n                {\n                    \"name\": \"FT_STATIC\",\n                    \"id\": 2\n                },\n                {\n                    \"name\": \"FT_IGNORE\",\n                    \"id\": 3\n                }\n            ]\n        },\n        {\n            \"name\": \"IntSize\",\n            \"values\": [\n                {\n                    \"name\": \"IS_DEFAULT\",\n                    \"id\": 0\n                },\n                {\n                    \"name\": \"IS_8\",\n                    \"id\": 8\n                },\n                {\n                    \"name\": \"IS_16\",\n                    \"id\": 16\n                },\n                {\n                    \"name\": \"IS_32\",\n                    \"id\": 32\n                },\n                {\n                    \"name\": \"IS_64\",\n                    \"id\": 64\n                }\n            ]\n        }\n    ]\n}).build();","module.exports = require(\"protobufjs\").newBuilder({})['import']({\n    \"package\": null,\n    \"options\": {\n        \"java_package\": \"fi.kapsi.koti.jpa.nanopb\"\n    },\n    \"messages\": [\n        {\n            \"name\": \"NanoPBOptions\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"max_size\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"max_count\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"IntSize\",\n                    \"name\": \"int_size\",\n                    \"id\": 7,\n                    \"options\": {\n                        \"default\": \"IS_DEFAULT\"\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"FieldType\",\n                    \"name\": \"type\",\n                    \"id\": 3,\n                    \"options\": {\n                        \"default\": \"FT_DEFAULT\"\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"long_names\",\n                    \"id\": 4,\n                    \"options\": {\n                        \"default\": true\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"packed_struct\",\n                    \"id\": 5,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"skip_message\",\n                    \"id\": 6,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"no_unions\",\n                    \"id\": 8,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"uint32\",\n                    \"name\": \"msgid\",\n                    \"id\": 9\n                }\n            ]\n        },\n        {\n            \"name\": \"machinetalk\",\n            \"fields\": [],\n            \"messages\": [\n                {\n                    \"name\": \"Position\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 800\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"x\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"y\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"z\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"a\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"b\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"c\",\n                            \"id\": 8\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"u\",\n                            \"id\": 9\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"v\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"w\",\n                            \"id\": 11\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Preview\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 801\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"PreviewOpType\",\n                            \"name\": \"type\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"line_number\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Position\",\n                            \"name\": \"pos\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"first_end\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"second_end\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"first_axis\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"second_axis\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"rotation\",\n                            \"id\": 8\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"axis_end_point\",\n                            \"id\": 9\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"xy_rotation\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"plane\",\n                            \"id\": 11\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"rate\",\n                            \"id\": 12\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"feed_mode\",\n                            \"id\": 13\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"time\",\n                            \"id\": 14\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"text\",\n                            \"id\": 15\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"angular_units\",\n                            \"id\": 101\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"length_units\",\n                            \"id\": 102\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"probetype\",\n                            \"id\": 103\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"KinematicsType\",\n                            \"name\": \"kins\",\n                            \"id\": 104,\n                            \"options\": {\n                                \"default\": \"KT_JOINT\"\n                            }\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"axismask\",\n                            \"id\": 105\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"g5_index\",\n                            \"id\": 106\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"pocket\",\n                            \"id\": 107\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"SourceType\",\n                            \"name\": \"stype\",\n                            \"id\": 110\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"filename\",\n                            \"id\": 111\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"cmdstring\",\n                            \"id\": 112\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"call_level\",\n                            \"id\": 113\n                        }\n                    ]\n                }\n            ],\n            \"enums\": [\n                {\n                    \"name\": \"KinematicsType\",\n                    \"values\": [\n                        {\n                            \"name\": \"KT_JOINT\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"KT_TRIVKINS\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"KT_DELTA\",\n                            \"id\": 3\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"PreviewOpType\",\n                    \"values\": [\n                        {\n                            \"name\": \"PV_STRAIGHT_PROBE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"PV_RIGID_TAP\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"PV_STRAIGHT_FEED\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"PV_ARC_FEED\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"PV_STRAIGHT_TRAVERSE\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"PV_SET_G5X_OFFSET\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"PV_SET_G92_OFFSET\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"PV_SET_XY_ROTATION\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"PV_SELECT_PLANE\",\n                            \"id\": 9\n                        },\n                        {\n                            \"name\": \"PV_SET_TRAVERSE_RATE\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"PV_SET_FEED_RATE\",\n                            \"id\": 11\n                        },\n                        {\n                            \"name\": \"PV_CHANGE_TOOL\",\n                            \"id\": 12\n                        },\n                        {\n                            \"name\": \"PV_CHANGE_TOOL_NUMBER\",\n                            \"id\": 13\n                        },\n                        {\n                            \"name\": \"PV_DWELL\",\n                            \"id\": 14\n                        },\n                        {\n                            \"name\": \"PV_MESSAGE\",\n                            \"id\": 15\n                        },\n                        {\n                            \"name\": \"PV_COMMENT\",\n                            \"id\": 16\n                        },\n                        {\n                            \"name\": \"PV_USE_TOOL_OFFSET\",\n                            \"id\": 17\n                        },\n                        {\n                            \"name\": \"PV_SET_PARAMS\",\n                            \"id\": 18\n                        },\n                        {\n                            \"name\": \"PV_SET_FEED_MODE\",\n                            \"id\": 19\n                        },\n                        {\n                            \"name\": \"PV_SOURCE_CONTEXT\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"PV_PREVIEW_START\",\n                            \"id\": 21\n                        },\n                        {\n                            \"name\": \"PV_PREVIEW_END\",\n                            \"id\": 22\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"SourceType\",\n                    \"values\": [\n                        {\n                            \"name\": \"ST_NGC_FILE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"ST_NGC_STRING\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"ST_PYTHON_METHOD\",\n                            \"id\": 3\n                        }\n                    ]\n                }\n            ]\n        }\n    ],\n    \"enums\": [\n        {\n            \"name\": \"FieldType\",\n            \"values\": [\n                {\n                    \"name\": \"FT_DEFAULT\",\n                    \"id\": 0\n                },\n                {\n                    \"name\": \"FT_CALLBACK\",\n                    \"id\": 1\n                },\n                {\n                    \"name\": \"FT_POINTER\",\n                    \"id\": 4\n                },\n                {\n                    \"name\": \"FT_STATIC\",\n                    \"id\": 2\n                },\n                {\n                    \"name\": \"FT_IGNORE\",\n                    \"id\": 3\n                }\n            ]\n        },\n        {\n            \"name\": \"IntSize\",\n            \"values\": [\n                {\n                    \"name\": \"IS_DEFAULT\",\n                    \"id\": 0\n                },\n                {\n                    \"name\": \"IS_8\",\n                    \"id\": 8\n                },\n                {\n                    \"name\": \"IS_16\",\n                    \"id\": 16\n                },\n                {\n                    \"name\": \"IS_32\",\n                    \"id\": 32\n                },\n                {\n                    \"name\": \"IS_64\",\n                    \"id\": 64\n                }\n            ]\n        }\n    ]\n}).build();","module.exports = require(\"protobufjs\").newBuilder({})['import']({\n    \"package\": null,\n    \"options\": {\n        \"java_package\": \"fi.kapsi.koti.jpa.nanopb\"\n    },\n    \"messages\": [\n        {\n            \"name\": \"NanoPBOptions\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"max_size\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"max_count\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"IntSize\",\n                    \"name\": \"int_size\",\n                    \"id\": 7,\n                    \"options\": {\n                        \"default\": \"IS_DEFAULT\"\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"FieldType\",\n                    \"name\": \"type\",\n                    \"id\": 3,\n                    \"options\": {\n                        \"default\": \"FT_DEFAULT\"\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"long_names\",\n                    \"id\": 4,\n                    \"options\": {\n                        \"default\": true\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"packed_struct\",\n                    \"id\": 5,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"skip_message\",\n                    \"id\": 6,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"no_unions\",\n                    \"id\": 8,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"uint32\",\n                    \"name\": \"msgid\",\n                    \"id\": 9\n                }\n            ]\n        },\n        {\n            \"name\": \"machinetalk\",\n            \"fields\": [],\n            \"messages\": [\n                {\n                    \"name\": \"PmCartesian\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 300\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"x\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"y\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"z\",\n                            \"id\": 30\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcPose\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 301\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"PmCartesian\",\n                            \"name\": \"tran\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"a\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"b\",\n                            \"id\": 30\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"c\",\n                            \"id\": 40\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"u\",\n                            \"id\": 50\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"v\",\n                            \"id\": 60\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"w\",\n                            \"id\": 70\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"MotionCommand\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 600\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"cmd_code_t\",\n                            \"name\": \"command\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"commandNum\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"motor_offset\",\n                            \"id\": 30\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"maxLimit\",\n                            \"id\": 40\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"minLimit\",\n                            \"id\": 50\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcPose\",\n                            \"name\": \"pos\",\n                            \"id\": 60\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"PmCartesian\",\n                            \"name\": \"center\",\n                            \"id\": 70\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"PmCartesian\",\n                            \"name\": \"normal\",\n                            \"id\": 80\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"turn\",\n                            \"id\": 90\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"vel\",\n                            \"id\": 100\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"ini_maxvel\",\n                            \"id\": 110\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"MotionType\",\n                            \"name\": \"motion_type\",\n                            \"id\": 120\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"spindlesync\",\n                            \"id\": 130\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"acc\",\n                            \"id\": 140\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"backlash\",\n                            \"id\": 150\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"id\",\n                            \"id\": 160\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"termCond\",\n                            \"id\": 170\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"tolerance\",\n                            \"id\": 180\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"axis\",\n                            \"id\": 190\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"scale\",\n                            \"id\": 200\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"offset\",\n                            \"id\": 210\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"home\",\n                            \"id\": 220\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"home_final_vel\",\n                            \"id\": 230\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"search_vel\",\n                            \"id\": 240\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"latch_vel\",\n                            \"id\": 250\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"flags\",\n                            \"id\": 260\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"home_sequence\",\n                            \"id\": 270\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"volatile_home\",\n                            \"id\": 280\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"minFerror\",\n                            \"id\": 290\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"maxFerror\",\n                            \"id\": 300\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"wdWait\",\n                            \"id\": 310\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"debug\",\n                            \"id\": 320\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"now\",\n                            \"id\": 330\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"out\",\n                            \"id\": 340\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"start\",\n                            \"id\": 350\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"end\",\n                            \"id\": 360\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"mode\",\n                            \"id\": 370\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"comp_nominal\",\n                            \"id\": 380\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"comp_forward\",\n                            \"id\": 390\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"comp_reverse\",\n                            \"id\": 400\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"probe_type\",\n                            \"id\": 410\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcPose\",\n                            \"name\": \"tool_offset\",\n                            \"id\": 420\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"MotionStatus\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 601\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"cmd_code_t\",\n                            \"name\": \"commandEcho\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"commandNumEcho\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"cmd_status_t\",\n                            \"name\": \"commandStatus\",\n                            \"id\": 30\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcPose\",\n                            \"name\": \"carte_pos_fb\",\n                            \"id\": 40\n                        }\n                    ]\n                }\n            ],\n            \"enums\": [\n                {\n                    \"name\": \"MotionType\",\n                    \"values\": [\n                        {\n                            \"name\": \"_EMC_MOTION_TYPE_NONE\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"_EMC_MOTION_TYPE_TRAVERSE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"_EMC_MOTION_TYPE_FEED\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"_EMC_MOTION_TYPE_ARC\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"_EMC_MOTION_TYPE_TOOLCHANGE\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"_EMC_MOTION_TYPE_PROBING\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"_EMC_MOTION_TYPE_INDEXROTARY\",\n                            \"id\": 6\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"cmd_code_t\",\n                    \"values\": [\n                        {\n                            \"name\": \"EMCMOT_ABORT\",\n                            \"id\": 4000\n                        },\n                        {\n                            \"name\": \"EMCMOT_AXIS_ABORT\",\n                            \"id\": 4001\n                        },\n                        {\n                            \"name\": \"EMCMOT_ENABLE\",\n                            \"id\": 4002\n                        },\n                        {\n                            \"name\": \"EMCMOT_DISABLE\",\n                            \"id\": 4003\n                        },\n                        {\n                            \"name\": \"EMCMOT_ENABLE_AMPLIFIER\",\n                            \"id\": 4004\n                        },\n                        {\n                            \"name\": \"EMCMOT_DISABLE_AMPLIFIER\",\n                            \"id\": 4005\n                        },\n                        {\n                            \"name\": \"EMCMOT_ENABLE_WATCHDOG\",\n                            \"id\": 4006\n                        },\n                        {\n                            \"name\": \"EMCMOT_DISABLE_WATCHDOG\",\n                            \"id\": 4007\n                        },\n                        {\n                            \"name\": \"EMCMOT_ACTIVATE_JOINT\",\n                            \"id\": 4008\n                        },\n                        {\n                            \"name\": \"EMCMOT_DEACTIVATE_JOINT\",\n                            \"id\": 4009\n                        },\n                        {\n                            \"name\": \"EMCMOT_PAUSE\",\n                            \"id\": 4010\n                        },\n                        {\n                            \"name\": \"EMCMOT_RESUME\",\n                            \"id\": 4011\n                        },\n                        {\n                            \"name\": \"EMCMOT_STEP\",\n                            \"id\": 4012\n                        },\n                        {\n                            \"name\": \"EMCMOT_FREE\",\n                            \"id\": 4013\n                        },\n                        {\n                            \"name\": \"EMCMOT_COORD\",\n                            \"id\": 4014\n                        },\n                        {\n                            \"name\": \"EMCMOT_TELEOP\",\n                            \"id\": 4015\n                        },\n                        {\n                            \"name\": \"EMCMOT_SPINDLE_SCALE\",\n                            \"id\": 4016\n                        },\n                        {\n                            \"name\": \"EMCMOT_SS_ENABLE\",\n                            \"id\": 4017\n                        },\n                        {\n                            \"name\": \"EMCMOT_FEED_SCALE\",\n                            \"id\": 4018\n                        },\n                        {\n                            \"name\": \"EMCMOT_FS_ENABLE\",\n                            \"id\": 4019\n                        },\n                        {\n                            \"name\": \"EMCMOT_FH_ENABLE\",\n                            \"id\": 4020\n                        },\n                        {\n                            \"name\": \"EMCMOT_AF_ENABLE\",\n                            \"id\": 4021\n                        },\n                        {\n                            \"name\": \"EMCMOT_OVERRIDE_LIMITS\",\n                            \"id\": 4022\n                        },\n                        {\n                            \"name\": \"EMCMOT_HOME\",\n                            \"id\": 4023\n                        },\n                        {\n                            \"name\": \"EMCMOT_UNHOME\",\n                            \"id\": 4024\n                        },\n                        {\n                            \"name\": \"EMCMOT_JOG_CONT\",\n                            \"id\": 4025\n                        },\n                        {\n                            \"name\": \"EMCMOT_JOG_INCR\",\n                            \"id\": 4026\n                        },\n                        {\n                            \"name\": \"EMCMOT_JOG_ABS\",\n                            \"id\": 4027\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_LINE\",\n                            \"id\": 4028\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_CIRCLE\",\n                            \"id\": 4029\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_TELEOP_VECTOR\",\n                            \"id\": 4030\n                        },\n                        {\n                            \"name\": \"EMCMOT_CLEAR_PROBE_FLAGS\",\n                            \"id\": 4031\n                        },\n                        {\n                            \"name\": \"EMCMOT_PROBE\",\n                            \"id\": 4032\n                        },\n                        {\n                            \"name\": \"EMCMOT_RIGID_TAP\",\n                            \"id\": 4033\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_POSITION_LIMITS\",\n                            \"id\": 4034\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_BACKLASH\",\n                            \"id\": 4035\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_MIN_FERROR\",\n                            \"id\": 4036\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_MAX_FERROR\",\n                            \"id\": 4037\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_VEL\",\n                            \"id\": 4038\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_VEL_LIMIT\",\n                            \"id\": 4039\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_JOINT_VEL_LIMIT\",\n                            \"id\": 4040\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_JOINT_ACC_LIMIT\",\n                            \"id\": 4041\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_ACC\",\n                            \"id\": 4042\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_TERM_COND\",\n                            \"id\": 4043\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_NUM_AXES\",\n                            \"id\": 4044\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_WORLD_HOME\",\n                            \"id\": 4045\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_HOMING_PARAMS\",\n                            \"id\": 4046\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_DEBUG\",\n                            \"id\": 4047\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_DOUT\",\n                            \"id\": 4048\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_AOUT\",\n                            \"id\": 4049\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_SPINDLESYNC\",\n                            \"id\": 4050\n                        },\n                        {\n                            \"name\": \"EMCMOT_SPINDLE_ON\",\n                            \"id\": 4051\n                        },\n                        {\n                            \"name\": \"EMCMOT_SPINDLE_OFF\",\n                            \"id\": 4052\n                        },\n                        {\n                            \"name\": \"EMCMOT_SPINDLE_INCREASE\",\n                            \"id\": 4053\n                        },\n                        {\n                            \"name\": \"EMCMOT_SPINDLE_DECREASE\",\n                            \"id\": 4054\n                        },\n                        {\n                            \"name\": \"EMCMOT_SPINDLE_BRAKE_ENGAGE\",\n                            \"id\": 4055\n                        },\n                        {\n                            \"name\": \"EMCMOT_SPINDLE_BRAKE_RELEASE\",\n                            \"id\": 4056\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_MOTOR_OFFSET\",\n                            \"id\": 4057\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_JOINT_COMP\",\n                            \"id\": 4058\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_OFFSET\",\n                            \"id\": 4059\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"cmd_status_t\",\n                    \"values\": [\n                        {\n                            \"name\": \"EMCMOT_COMMAND_OK\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"EMCMOT_COMMAND_UNKNOWN_COMMAND\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"EMCMOT_COMMAND_INVALID_COMMAND\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"EMCMOT_COMMAND_INVALID_PARAMS\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"EMCMOT_COMMAND_BAD_EXEC\",\n                            \"id\": 4\n                        }\n                    ]\n                }\n            ]\n        }\n    ],\n    \"enums\": [\n        {\n            \"name\": \"FieldType\",\n            \"values\": [\n                {\n                    \"name\": \"FT_DEFAULT\",\n                    \"id\": 0\n                },\n                {\n                    \"name\": \"FT_CALLBACK\",\n                    \"id\": 1\n                },\n                {\n                    \"name\": \"FT_POINTER\",\n                    \"id\": 4\n                },\n                {\n                    \"name\": \"FT_STATIC\",\n                    \"id\": 2\n                },\n                {\n                    \"name\": \"FT_IGNORE\",\n                    \"id\": 3\n                }\n            ]\n        },\n        {\n            \"name\": \"IntSize\",\n            \"values\": [\n                {\n                    \"name\": \"IS_DEFAULT\",\n                    \"id\": 0\n                },\n                {\n                    \"name\": \"IS_8\",\n                    \"id\": 8\n                },\n                {\n                    \"name\": \"IS_16\",\n                    \"id\": 16\n                },\n                {\n                    \"name\": \"IS_32\",\n                    \"id\": 32\n                },\n                {\n                    \"name\": \"IS_64\",\n                    \"id\": 64\n                }\n            ]\n        }\n    ]\n}).build();","module.exports = require(\"protobufjs\").newBuilder({})['import']({\n    \"package\": null,\n    \"options\": {\n        \"java_package\": \"fi.kapsi.koti.jpa.nanopb\"\n    },\n    \"messages\": [\n        {\n            \"name\": \"NanoPBOptions\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"max_size\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"max_count\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"IntSize\",\n                    \"name\": \"int_size\",\n                    \"id\": 7,\n                    \"options\": {\n                        \"default\": \"IS_DEFAULT\"\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"FieldType\",\n                    \"name\": \"type\",\n                    \"id\": 3,\n                    \"options\": {\n                        \"default\": \"FT_DEFAULT\"\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"long_names\",\n                    \"id\": 4,\n                    \"options\": {\n                        \"default\": true\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"packed_struct\",\n                    \"id\": 5,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"skip_message\",\n                    \"id\": 6,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"no_unions\",\n                    \"id\": 8,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"uint32\",\n                    \"name\": \"msgid\",\n                    \"id\": 9\n                }\n            ]\n        },\n        {\n            \"name\": \"machinetalk\",\n            \"fields\": [],\n            \"messages\": [\n                {\n                    \"name\": \"PmCartesian\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 300\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"x\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"y\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"z\",\n                            \"id\": 30\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcPose\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 301\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"PmCartesian\",\n                            \"name\": \"tran\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"a\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"b\",\n                            \"id\": 30\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"c\",\n                            \"id\": 40\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"u\",\n                            \"id\": 50\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"v\",\n                            \"id\": 60\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"w\",\n                            \"id\": 70\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Test1\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1300\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"TestOpType\",\n                            \"name\": \"op\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"EmcPose\",\n                            \"name\": \"end\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"PmCartesian\",\n                            \"name\": \"center\",\n                            \"id\": 30\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"PmCartesian\",\n                            \"name\": \"normal\",\n                            \"id\": 40\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"turn\",\n                            \"id\": 50\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Test2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1301\n                    },\n                    \"fields\": []\n                },\n                {\n                    \"name\": \"Test3\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1302\n                    },\n                    \"fields\": []\n                }\n            ],\n            \"enums\": [\n                {\n                    \"name\": \"TestOpType\",\n                    \"values\": [\n                        {\n                            \"name\": \"LINE\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"CIRCLE\",\n                            \"id\": 20\n                        }\n                    ]\n                }\n            ]\n        }\n    ],\n    \"enums\": [\n        {\n            \"name\": \"FieldType\",\n            \"values\": [\n                {\n                    \"name\": \"FT_DEFAULT\",\n                    \"id\": 0\n                },\n                {\n                    \"name\": \"FT_CALLBACK\",\n                    \"id\": 1\n                },\n                {\n                    \"name\": \"FT_POINTER\",\n                    \"id\": 4\n                },\n                {\n                    \"name\": \"FT_STATIC\",\n                    \"id\": 2\n                },\n                {\n                    \"name\": \"FT_IGNORE\",\n                    \"id\": 3\n                }\n            ]\n        },\n        {\n            \"name\": \"IntSize\",\n            \"values\": [\n                {\n                    \"name\": \"IS_DEFAULT\",\n                    \"id\": 0\n                },\n                {\n                    \"name\": \"IS_8\",\n                    \"id\": 8\n                },\n                {\n                    \"name\": \"IS_16\",\n                    \"id\": 16\n                },\n                {\n                    \"name\": \"IS_32\",\n                    \"id\": 32\n                },\n                {\n                    \"name\": \"IS_64\",\n                    \"id\": 64\n                }\n            ]\n        }\n    ]\n}).build();","module.exports = require(\"protobufjs\").newBuilder({})['import']({\n    \"package\": null,\n    \"options\": {\n        \"java_package\": \"fi.kapsi.koti.jpa.nanopb\"\n    },\n    \"messages\": [\n        {\n            \"name\": \"NanoPBOptions\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"max_size\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"max_count\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"IntSize\",\n                    \"name\": \"int_size\",\n                    \"id\": 7,\n                    \"options\": {\n                        \"default\": \"IS_DEFAULT\"\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"FieldType\",\n                    \"name\": \"type\",\n                    \"id\": 3,\n                    \"options\": {\n                        \"default\": \"FT_DEFAULT\"\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"long_names\",\n                    \"id\": 4,\n                    \"options\": {\n                        \"default\": true\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"packed_struct\",\n                    \"id\": 5,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"skip_message\",\n                    \"id\": 6,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"no_unions\",\n                    \"id\": 8,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"uint32\",\n                    \"name\": \"msgid\",\n                    \"id\": 9\n                }\n            ]\n        },\n        {\n            \"name\": \"machinetalk\",\n            \"fields\": [],\n            \"messages\": [\n                {\n                    \"name\": \"RTAPICommand\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 900\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"instance\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"modname\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"rt_msglevel\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"user_msglevel\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"string\",\n                            \"name\": \"argv\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"threadname\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"threadperiod\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"use_fp\",\n                            \"id\": 8\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"cpu\",\n                            \"id\": 9\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"comp\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"func\",\n                            \"id\": 11\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"instname\",\n                            \"id\": 12\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"flags\",\n                            \"id\": 13\n                        }\n                    ]\n                }\n            ]\n        }\n    ],\n    \"enums\": [\n        {\n            \"name\": \"FieldType\",\n            \"values\": [\n                {\n                    \"name\": \"FT_DEFAULT\",\n                    \"id\": 0\n                },\n                {\n                    \"name\": \"FT_CALLBACK\",\n                    \"id\": 1\n                },\n                {\n                    \"name\": \"FT_POINTER\",\n                    \"id\": 4\n                },\n                {\n                    \"name\": \"FT_STATIC\",\n                    \"id\": 2\n                },\n                {\n                    \"name\": \"FT_IGNORE\",\n                    \"id\": 3\n                }\n            ]\n        },\n        {\n            \"name\": \"IntSize\",\n            \"values\": [\n                {\n                    \"name\": \"IS_DEFAULT\",\n                    \"id\": 0\n                },\n                {\n                    \"name\": \"IS_8\",\n                    \"id\": 8\n                },\n                {\n                    \"name\": \"IS_16\",\n                    \"id\": 16\n                },\n                {\n                    \"name\": \"IS_32\",\n                    \"id\": 32\n                },\n                {\n                    \"name\": \"IS_64\",\n                    \"id\": 64\n                }\n            ]\n        }\n    ]\n}).build();","module.exports = require(\"protobufjs\").newBuilder({})['import']({\n    \"package\": null,\n    \"options\": {\n        \"java_package\": \"fi.kapsi.koti.jpa.nanopb\"\n    },\n    \"messages\": [\n        {\n            \"name\": \"NanoPBOptions\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"max_size\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"max_count\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"IntSize\",\n                    \"name\": \"int_size\",\n                    \"id\": 7,\n                    \"options\": {\n                        \"default\": \"IS_DEFAULT\"\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"FieldType\",\n                    \"name\": \"type\",\n                    \"id\": 3,\n                    \"options\": {\n                        \"default\": \"FT_DEFAULT\"\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"long_names\",\n                    \"id\": 4,\n                    \"options\": {\n                        \"default\": true\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"packed_struct\",\n                    \"id\": 5,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"skip_message\",\n                    \"id\": 6,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"no_unions\",\n                    \"id\": 8,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"uint32\",\n                    \"name\": \"msgid\",\n                    \"id\": 9\n                }\n            ]\n        },\n        {\n            \"name\": \"machinetalk\",\n            \"fields\": [],\n            \"messages\": [\n                {\n                    \"name\": \"PmCartesian\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 300\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"x\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"y\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"z\",\n                            \"id\": 30\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcPose\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 301\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"PmCartesian\",\n                            \"name\": \"tran\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"a\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"b\",\n                            \"id\": 30\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"c\",\n                            \"id\": 40\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"u\",\n                            \"id\": 50\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"v\",\n                            \"id\": 60\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"w\",\n                            \"id\": 70\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"MotionCommand\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 600\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"cmd_code_t\",\n                            \"name\": \"command\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"commandNum\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"motor_offset\",\n                            \"id\": 30\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"maxLimit\",\n                            \"id\": 40\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"minLimit\",\n                            \"id\": 50\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcPose\",\n                            \"name\": \"pos\",\n                            \"id\": 60\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"PmCartesian\",\n                            \"name\": \"center\",\n                            \"id\": 70\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"PmCartesian\",\n                            \"name\": \"normal\",\n                            \"id\": 80\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"turn\",\n                            \"id\": 90\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"vel\",\n                            \"id\": 100\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"ini_maxvel\",\n                            \"id\": 110\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"MotionType\",\n                            \"name\": \"motion_type\",\n                            \"id\": 120\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"spindlesync\",\n                            \"id\": 130\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"acc\",\n                            \"id\": 140\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"backlash\",\n                            \"id\": 150\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"id\",\n                            \"id\": 160\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"termCond\",\n                            \"id\": 170\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"tolerance\",\n                            \"id\": 180\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"axis\",\n                            \"id\": 190\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"scale\",\n                            \"id\": 200\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"offset\",\n                            \"id\": 210\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"home\",\n                            \"id\": 220\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"home_final_vel\",\n                            \"id\": 230\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"search_vel\",\n                            \"id\": 240\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"latch_vel\",\n                            \"id\": 250\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"flags\",\n                            \"id\": 260\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"home_sequence\",\n                            \"id\": 270\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"volatile_home\",\n                            \"id\": 280\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"minFerror\",\n                            \"id\": 290\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"maxFerror\",\n                            \"id\": 300\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"wdWait\",\n                            \"id\": 310\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"debug\",\n                            \"id\": 320\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"now\",\n                            \"id\": 330\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"out\",\n                            \"id\": 340\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"start\",\n                            \"id\": 350\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"end\",\n                            \"id\": 360\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"mode\",\n                            \"id\": 370\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"comp_nominal\",\n                            \"id\": 380\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"comp_forward\",\n                            \"id\": 390\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"comp_reverse\",\n                            \"id\": 400\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"probe_type\",\n                            \"id\": 410\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcPose\",\n                            \"name\": \"tool_offset\",\n                            \"id\": 420\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"MotionStatus\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 601\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"cmd_code_t\",\n                            \"name\": \"commandEcho\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"commandNumEcho\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"cmd_status_t\",\n                            \"name\": \"commandStatus\",\n                            \"id\": 30\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcPose\",\n                            \"name\": \"carte_pos_fb\",\n                            \"id\": 40\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Traj_Set_G5x\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 100\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"EmcPose\",\n                            \"name\": \"origin\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"OriginIndex\",\n                            \"name\": \"g5x_index\",\n                            \"id\": 20\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Traj_Set_G92\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 101\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"EmcPose\",\n                            \"name\": \"origin\",\n                            \"id\": 10\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Traj_Set_Rotation\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 102\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"rotation\",\n                            \"id\": 10\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Traj_Linear_Move\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 103\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"MotionType\",\n                            \"name\": \"type\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"EmcPose\",\n                            \"name\": \"end\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"vel\",\n                            \"id\": 30\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"ini_maxvel\",\n                            \"id\": 40\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"acc\",\n                            \"id\": 50\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"bool\",\n                            \"name\": \"feed_mode\",\n                            \"id\": 60\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"indexrotary\",\n                            \"id\": 70\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Traj_Probe\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 104\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"MotionType\",\n                            \"name\": \"type\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"EmcPose\",\n                            \"name\": \"pos\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"vel\",\n                            \"id\": 30\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"ini_maxvel\",\n                            \"id\": 40\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"acc\",\n                            \"id\": 50\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"uint32\",\n                            \"name\": \"probe_type\",\n                            \"id\": 60\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Traj_Circular_Move\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 105\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"MotionType\",\n                            \"name\": \"type\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"EmcPose\",\n                            \"name\": \"end\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"PmCartesian\",\n                            \"name\": \"center\",\n                            \"id\": 25\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"PmCartesian\",\n                            \"name\": \"normal\",\n                            \"id\": 27\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"vel\",\n                            \"id\": 30\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"ini_maxvel\",\n                            \"id\": 40\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"acc\",\n                            \"id\": 50\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"bool\",\n                            \"name\": \"feed_mode\",\n                            \"id\": 60\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"turn\",\n                            \"id\": 70\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Traj_Rigid_Tap\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 106\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"EmcPose\",\n                            \"name\": \"pos\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"vel\",\n                            \"id\": 30\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"ini_maxvel\",\n                            \"id\": 40\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"acc\",\n                            \"id\": 50\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Traj_Set_Term_Cond\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 107\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"TermConditionType\",\n                            \"name\": \"cond\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"tolerance\",\n                            \"id\": 20\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Traj_Set_Spindlesync\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 108\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"feed_per_revolution\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"bool\",\n                            \"name\": \"velocity_mode\",\n                            \"id\": 20\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Traj_Delay\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 109\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"delay\",\n                            \"id\": 10\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Spindle_On\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 110\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"speed\",\n                            \"id\": 10,\n                            \"options\": {\n                                \"default\": 0\n                            }\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"factor\",\n                            \"id\": 20,\n                            \"options\": {\n                                \"default\": 0\n                            }\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"xoffset\",\n                            \"id\": 30,\n                            \"options\": {\n                                \"default\": 0\n                            }\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Spindle_Speed\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 111\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"speed\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"factor\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"xoffset\",\n                            \"id\": 30\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Spindle_Orient\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 112\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"orientation\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"CanonDirection\",\n                            \"name\": \"mode\",\n                            \"id\": 20\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Spindle_Wait_Orient_Complete\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 113\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"timeout\",\n                            \"id\": 10\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Tool_Set_Offset\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 114\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"pocket\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"toolno\",\n                            \"id\": 15\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"EmcPose\",\n                            \"name\": \"offset\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"diameter\",\n                            \"id\": 30\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"frontangle\",\n                            \"id\": 40\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"backangle\",\n                            \"id\": 50\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"orientation\",\n                            \"id\": 60\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Traj_Set_Offset\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 115\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"EmcPose\",\n                            \"name\": \"offset\",\n                            \"id\": 10\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Tool_Prepare\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 116\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"pocket\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"tool\",\n                            \"id\": 20\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Tool_Set_Number\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 117\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"tool\",\n                            \"id\": 10\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Traj_Set_Fo_Enable\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 118\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"bool\",\n                            \"name\": \"mode\",\n                            \"id\": 10\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Traj_Set_So_Enable\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 119\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"bool\",\n                            \"name\": \"mode\",\n                            \"id\": 10\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Traj_Set_Fh_Enable\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 120\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"bool\",\n                            \"name\": \"mode\",\n                            \"id\": 10\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Motion_Adaptive\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 121\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"bool\",\n                            \"name\": \"status\",\n                            \"id\": 10\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Operator_Display\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 122\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"id\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"string\",\n                            \"name\": \"display\",\n                            \"id\": 20\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Operator_Text\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 123\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"id\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"string\",\n                            \"name\": \"text\",\n                            \"id\": 20\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Operator_Error\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 124\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"id\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"string\",\n                            \"name\": \"error\",\n                            \"id\": 20\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Motion_Set_Dout\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 125\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"uint32\",\n                            \"name\": \"index\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"bool\",\n                            \"name\": \"start\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"bool\",\n                            \"name\": \"end\",\n                            \"id\": 30\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"bool\",\n                            \"name\": \"now\",\n                            \"id\": 40\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Motion_Set_Aout\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 126\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"uint32\",\n                            \"name\": \"index\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"start\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"end\",\n                            \"id\": 30\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"bool\",\n                            \"name\": \"now\",\n                            \"id\": 40\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Aux_Input_Wait\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 127\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"uint32\",\n                            \"name\": \"index\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"InputType\",\n                            \"name\": \"input_type\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"WaitType\",\n                            \"name\": \"wait_type\",\n                            \"id\": 30\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"timeout\",\n                            \"id\": 40\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Exec_Plugin_Ca1l\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 128\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"bytes\",\n                            \"name\": \"call\",\n                            \"id\": 20\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Io_Plugin_Call\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 129\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"bytes\",\n                            \"name\": \"call\",\n                            \"id\": 20\n                        }\n                    ]\n                }\n            ],\n            \"enums\": [\n                {\n                    \"name\": \"ValueType\",\n                    \"values\": [\n                        {\n                            \"name\": \"HAL_BIT\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"HAL_FLOAT\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"HAL_S32\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"HAL_U32\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"STRING\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"BYTES\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"INT32\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"UINT32\",\n                            \"id\": 30\n                        },\n                        {\n                            \"name\": \"INT64\",\n                            \"id\": 40\n                        },\n                        {\n                            \"name\": \"UINT64\",\n                            \"id\": 50\n                        },\n                        {\n                            \"name\": \"DOUBLE\",\n                            \"id\": 60\n                        },\n                        {\n                            \"name\": \"BOOL\",\n                            \"id\": 80\n                        },\n                        {\n                            \"name\": \"CARTESIAN\",\n                            \"id\": 100\n                        },\n                        {\n                            \"name\": \"LEGACY_CARTESIAN\",\n                            \"id\": 110\n                        },\n                        {\n                            \"name\": \"POSE\",\n                            \"id\": 120\n                        },\n                        {\n                            \"name\": \"LEGACY_POSE\",\n                            \"id\": 130\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"HalPinDirection\",\n                    \"values\": [\n                        {\n                            \"name\": \"HAL_IN\",\n                            \"id\": 16\n                        },\n                        {\n                            \"name\": \"HAL_OUT\",\n                            \"id\": 32\n                        },\n                        {\n                            \"name\": \"HAL_IO\",\n                            \"id\": 48\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"HalParamDirection\",\n                    \"values\": [\n                        {\n                            \"name\": \"HAL_RO\",\n                            \"id\": 64\n                        },\n                        {\n                            \"name\": \"HAL_RW\",\n                            \"id\": 192\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ObjectType\",\n                    \"values\": [\n                        {\n                            \"name\": \"HAL_PIN\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"HAL_SIGNAL\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"HAL_PARAM\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"HAL_THREAD\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"HAL_FUNCT\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"HAL_ALIAS\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"HAL_COMP_RT\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"HAL_COMP_USER\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"HAL_COMP_REMOTE\",\n                            \"id\": 9\n                        },\n                        {\n                            \"name\": \"HAL_RING\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"HAL_GROUP\",\n                            \"id\": 11\n                        },\n                        {\n                            \"name\": \"HAL_MEMBER_SIGNAL\",\n                            \"id\": 12\n                        },\n                        {\n                            \"name\": \"HAL_MEMBER_GROUP\",\n                            \"id\": 13\n                        },\n                        {\n                            \"name\": \"HAL_MEMBER_PIN\",\n                            \"id\": 14\n                        },\n                        {\n                            \"name\": \"HAL_MEMBER_PARAM\",\n                            \"id\": 15\n                        },\n                        {\n                            \"name\": \"RING_RECORD\",\n                            \"id\": 16\n                        },\n                        {\n                            \"name\": \"RING_STREAM\",\n                            \"id\": 17\n                        },\n                        {\n                            \"name\": \"HAL_VTABLE\",\n                            \"id\": 18\n                        },\n                        {\n                            \"name\": \"HAL_INST\",\n                            \"id\": 19\n                        },\n                        {\n                            \"name\": \"RING_MULTIFRAME\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"VALUE\",\n                            \"id\": 120\n                        },\n                        {\n                            \"name\": \"INSTANCE\",\n                            \"id\": 121\n                        },\n                        {\n                            \"name\": \"ORIGINATOR\",\n                            \"id\": 122\n                        },\n                        {\n                            \"name\": \"NAMED_VALUE\",\n                            \"id\": 125\n                        },\n                        {\n                            \"name\": \"OT_ERROR\",\n                            \"id\": 130\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"RCS_STATUS\",\n                    \"values\": [\n                        {\n                            \"name\": \"UNINITIALIZED_STATUS\",\n                            \"id\": -1\n                        },\n                        {\n                            \"name\": \"RCS_DONE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"RCS_EXEC\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"RCS_ERROR\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"RCS_RECEIVED\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"MsgOrigin\",\n                    \"values\": [\n                        {\n                            \"name\": \"MSG_KERNEL\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"MSG_RTUSER\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"MSG_ULAPI\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"MsgLevel\",\n                    \"values\": [\n                        {\n                            \"name\": \"RTAPI_MSG_NONE\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_ERR\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_WARN\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_INFO\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_DBG\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_ALL\",\n                            \"id\": 5\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"OriginDetail\",\n                    \"values\": [\n                        {\n                            \"name\": \"UNIX_SIGNAL\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"INSTANCE_SHUTDOWN\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"ZMQ_SOCKET\",\n                            \"id\": 70\n                        },\n                        {\n                            \"name\": \"NML_LAYER\",\n                            \"id\": 80\n                        },\n                        {\n                            \"name\": \"RCS_LAYER\",\n                            \"id\": 90\n                        },\n                        {\n                            \"name\": \"CMS_LAYER\",\n                            \"id\": 100\n                        },\n                        {\n                            \"name\": \"IP_LAYER\",\n                            \"id\": 110\n                        },\n                        {\n                            \"name\": \"TCP_LAYER\",\n                            \"id\": 120\n                        },\n                        {\n                            \"name\": \"PGM_LAYER\",\n                            \"id\": 130\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"OriginType\",\n                    \"values\": [\n                        {\n                            \"name\": \"PROCESS\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"USER_THREAD\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"RT_THREAD\",\n                            \"id\": 30\n                        },\n                        {\n                            \"name\": \"COMPONENT\",\n                            \"id\": 40\n                        },\n                        {\n                            \"name\": \"THREAD_FUNCTION\",\n                            \"id\": 50\n                        },\n                        {\n                            \"name\": \"COMPONENT_INIT\",\n                            \"id\": 60\n                        },\n                        {\n                            \"name\": \"COMPONENT_EXIT\",\n                            \"id\": 70\n                        },\n                        {\n                            \"name\": \"GROUP\",\n                            \"id\": 80\n                        },\n                        {\n                            \"name\": \"PIN\",\n                            \"id\": 90\n                        },\n                        {\n                            \"name\": \"SIGNAL\",\n                            \"id\": 100\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Severity\",\n                    \"values\": [\n                        {\n                            \"name\": \"S_INFORMATIONAL\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"S_WARNING\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"S_FAIL\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"StatusType\",\n                    \"values\": [\n                        {\n                            \"name\": \"ENQUEUED\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"PROCESSING\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"COMPLETE\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"FAILED\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ReplyType\",\n                    \"values\": [\n                        {\n                            \"name\": \"NONE\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"ON_RECEPTION\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"ON_QUEUED\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"ON_COMPLETION\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"ALL_STEPS\",\n                            \"id\": 255\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ServiceType\",\n                    \"values\": [\n                        {\n                            \"name\": \"ST_LOGGING\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"ST_CONFIG\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"ST_REDIS\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"ST_HTTP\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"ST_HTTPS\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"ST_WEBSOCKET\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"ST_WEBSOCKETS\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"ST_RTAPI_COMMAND\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"ST_STP_HALGROUP\",\n                            \"id\": 9\n                        },\n                        {\n                            \"name\": \"ST_STP_HALRCOMP\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"ST_STP_INTERP\",\n                            \"id\": 11\n                        },\n                        {\n                            \"name\": \"ST_STP_TASK\",\n                            \"id\": 12\n                        },\n                        {\n                            \"name\": \"ST_HAL_RCOMMAND\",\n                            \"id\": 13\n                        },\n                        {\n                            \"name\": \"ST_TASK_COMMAND\",\n                            \"id\": 14\n                        },\n                        {\n                            \"name\": \"ST_INTERP_COMMAND\",\n                            \"id\": 15\n                        },\n                        {\n                            \"name\": \"ST_MESSAGEBUS_COMMAND\",\n                            \"id\": 16\n                        },\n                        {\n                            \"name\": \"ST_MESSAGEBUS_RESPONSE\",\n                            \"id\": 17\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ServiceAPI\",\n                    \"values\": [\n                        {\n                            \"name\": \"SA_ZMQ_PROTOBUF\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"SA_WS_JSON\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ContainerType\",\n                    \"values\": [\n                        {\n                            \"name\": \"MT_RTMESSAGE\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"MT_MOTCMD\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"MT_MOTSTATUS\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"MT_LEGACY_MOTCMD\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"MT_LEGACY_MOTSTATUS\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"MT_WOU\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"MT_HALUPDATE\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_MESSAGE\",\n                            \"id\": 9\n                        },\n                        {\n                            \"name\": \"MT_LOG_MESSAGE\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"MT_PREVIEW\",\n                            \"id\": 11\n                        },\n                        {\n                            \"name\": \"MT_PROGRESS\",\n                            \"id\": 12\n                        },\n                        {\n                            \"name\": \"MT_INTERP_STAT\",\n                            \"id\": 13\n                        },\n                        {\n                            \"name\": \"MT_SYSLOG\",\n                            \"id\": 18\n                        },\n                        {\n                            \"name\": \"MT_LEGACY_NML\",\n                            \"id\": 19\n                        },\n                        {\n                            \"name\": \"MT_LEGACY_MOTCONFIG\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"MT_STP_UPDATE_FULL\",\n                            \"id\": 26\n                        },\n                        {\n                            \"name\": \"MT_STP_UPDATE\",\n                            \"id\": 28\n                        },\n                        {\n                            \"name\": \"MT_STP_NOGROUP\",\n                            \"id\": 27\n                        },\n                        {\n                            \"name\": \"MT_SHUTDOWN\",\n                            \"id\": 45\n                        },\n                        {\n                            \"name\": \"MT_CONFIRM_SHUTDOWN\",\n                            \"id\": 50\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE0\",\n                            \"id\": 30\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE1\",\n                            \"id\": 31\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE2\",\n                            \"id\": 32\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE3\",\n                            \"id\": 33\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE4\",\n                            \"id\": 34\n                        },\n                        {\n                            \"name\": \"MT_ASCII\",\n                            \"id\": 100\n                        },\n                        {\n                            \"name\": \"MT_UNICODE\",\n                            \"id\": 101\n                        },\n                        {\n                            \"name\": \"MT_GCODE\",\n                            \"id\": 102\n                        },\n                        {\n                            \"name\": \"MT_PYTHON\",\n                            \"id\": 103\n                        },\n                        {\n                            \"name\": \"MT_PICKLE\",\n                            \"id\": 104\n                        },\n                        {\n                            \"name\": \"MT_TCL\",\n                            \"id\": 105\n                        },\n                        {\n                            \"name\": \"MT_XML\",\n                            \"id\": 106\n                        },\n                        {\n                            \"name\": \"MT_JSON\",\n                            \"id\": 107\n                        },\n                        {\n                            \"name\": \"MT_JPEG\",\n                            \"id\": 108\n                        },\n                        {\n                            \"name\": \"MT_PNG\",\n                            \"id\": 109\n                        },\n                        {\n                            \"name\": \"MT_TIFF\",\n                            \"id\": 110\n                        },\n                        {\n                            \"name\": \"MT_POSTSCRIPT\",\n                            \"id\": 111\n                        },\n                        {\n                            \"name\": \"MT_SVG\",\n                            \"id\": 112\n                        },\n                        {\n                            \"name\": \"MT_ZMQ_SUBSCRIBE\",\n                            \"id\": 150\n                        },\n                        {\n                            \"name\": \"MT_ZMQ_UNSUBSCRIBE\",\n                            \"id\": 151\n                        },\n                        {\n                            \"name\": \"MT_PING\",\n                            \"id\": 210\n                        },\n                        {\n                            \"name\": \"MT_PING_ACKNOWLEDGE\",\n                            \"id\": 215\n                        },\n                        {\n                            \"name\": \"MT_REJECT\",\n                            \"id\": 220\n                        },\n                        {\n                            \"name\": \"MT_DONE\",\n                            \"id\": 240\n                        },\n                        {\n                            \"name\": \"MT_SERVICE_REQUEST\",\n                            \"id\": 250\n                        },\n                        {\n                            \"name\": \"MT_SERVICE_ANNOUNCEMENT\",\n                            \"id\": 251\n                        },\n                        {\n                            \"name\": \"MT_SERVICE_PROBE\",\n                            \"id\": 252\n                        },\n                        {\n                            \"name\": \"MT_MESSAGEBUS_NO_DESTINATION\",\n                            \"id\": 255\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_BIND\",\n                            \"id\": 256\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_BIND_CONFIRM\",\n                            \"id\": 257\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_BIND_REJECT\",\n                            \"id\": 258\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_SET\",\n                            \"id\": 259\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_SET_REJECT\",\n                            \"id\": 260\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_ACK\",\n                            \"id\": 263\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_SET\",\n                            \"id\": 265\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_SET_REJECT\",\n                            \"id\": 266\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_GET\",\n                            \"id\": 267\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_GET_REJECT\",\n                            \"id\": 268\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_CREATE\",\n                            \"id\": 269\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_CREATE_REJECT\",\n                            \"id\": 270\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_DELETE\",\n                            \"id\": 271\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_DELETE_REJECT\",\n                            \"id\": 272\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_ACK\",\n                            \"id\": 273\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_ERROR\",\n                            \"id\": 274\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_DESCRIBE\",\n                            \"id\": 276\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_DESCRIPTION\",\n                            \"id\": 277\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_FULL_UPDATE\",\n                            \"id\": 288\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_INCREMENTAL_UPDATE\",\n                            \"id\": 289\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_ERROR\",\n                            \"id\": 290\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_BIND\",\n                            \"id\": 294\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_BIND_CONFIRM\",\n                            \"id\": 295\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_BIND_REJECT\",\n                            \"id\": 296\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_FULL_UPDATE\",\n                            \"id\": 297\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_INCREMENTAL_UPDATE\",\n                            \"id\": 298\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_ERROR\",\n                            \"id\": 299\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_EXIT\",\n                            \"id\": 300\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_PING\",\n                            \"id\": 301\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_LOADRT\",\n                            \"id\": 302\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_LOG\",\n                            \"id\": 303\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_UNLOADRT\",\n                            \"id\": 305\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_NEWINST\",\n                            \"id\": 306\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_NEWTHREAD\",\n                            \"id\": 307\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_DELTHREAD\",\n                            \"id\": 308\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_CALLFUNC\",\n                            \"id\": 309\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_REPLY\",\n                            \"id\": 310\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_DELINST\",\n                            \"id\": 311\n                        },\n                        {\n                            \"name\": \"MT_LIST_APPLICATIONS\",\n                            \"id\": 350\n                        },\n                        {\n                            \"name\": \"MT_DESCRIBE_APPLICATION\",\n                            \"id\": 351\n                        },\n                        {\n                            \"name\": \"MT_RETRIEVE_APPLICATION\",\n                            \"id\": 352\n                        },\n                        {\n                            \"name\": \"MT_APPLICATION_DETAIL\",\n                            \"id\": 353\n                        },\n                        {\n                            \"name\": \"MT_ERROR\",\n                            \"id\": 360\n                        },\n                        {\n                            \"name\": \"MT_FULL_UPDATE\",\n                            \"id\": 370\n                        },\n                        {\n                            \"name\": \"MT_INCREMENTAL_UPDATE\",\n                            \"id\": 371\n                        },\n                        {\n                            \"name\": \"MT_TASK_REPLY\",\n                            \"id\": 400\n                        },\n                        {\n                            \"name\": \"MT_TICKET_UPDATE\",\n                            \"id\": 401\n                        },\n                        {\n                            \"name\": \"MT_CREDIT_UPDATE\",\n                            \"id\": 450\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_LOWER\",\n                            \"id\": 1000\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_UPPER\",\n                            \"id\": 1100\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ABORT\",\n                            \"id\": 1001\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_AXIS_ABORT\",\n                            \"id\": 1002\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ENABLE\",\n                            \"id\": 1003\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_DISABLE\",\n                            \"id\": 1004\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ENABLE_AMPLIFIER\",\n                            \"id\": 1005\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_DISABLE_AMPLIFIER\",\n                            \"id\": 1006\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ENABLE_WATCHDOG\",\n                            \"id\": 1007\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_DISABLE_WATCHDOG\",\n                            \"id\": 1008\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ACTIVATE_JOINT\",\n                            \"id\": 1009\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_DEACTIVATE_JOINT\",\n                            \"id\": 1010\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_PAUSE\",\n                            \"id\": 1011\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_RESUME\",\n                            \"id\": 1012\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_STEP\",\n                            \"id\": 1013\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_FREE\",\n                            \"id\": 1014\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COORD\",\n                            \"id\": 1015\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_TELEOP\",\n                            \"id\": 1016\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_SCALE\",\n                            \"id\": 1017\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SS_ENABLE\",\n                            \"id\": 1018\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_FEED_SCALE\",\n                            \"id\": 1019\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_FS_ENABLE\",\n                            \"id\": 1020\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_FH_ENABLE\",\n                            \"id\": 1021\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_AF_ENABLE\",\n                            \"id\": 1022\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_OVERRIDE_LIMITS\",\n                            \"id\": 1023\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_HOME\",\n                            \"id\": 1024\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_UNHOME\",\n                            \"id\": 1025\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_JOG_CONT\",\n                            \"id\": 1026\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_JOG_INCR\",\n                            \"id\": 1027\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_JOG_ABS\",\n                            \"id\": 1028\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_LINE\",\n                            \"id\": 1029\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_CIRCLE\",\n                            \"id\": 1030\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_TELEOP_VECTOR\",\n                            \"id\": 1031\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_CLEAR_PROBE_FLAGS\",\n                            \"id\": 1032\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_PROBE\",\n                            \"id\": 1033\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_RIGID_TAP\",\n                            \"id\": 1034\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_POSITION_LIMITS\",\n                            \"id\": 1035\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_BACKLASH\",\n                            \"id\": 1036\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_MIN_FERROR\",\n                            \"id\": 1037\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_MAX_FERROR\",\n                            \"id\": 1038\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_VEL\",\n                            \"id\": 1039\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_VEL_LIMIT\",\n                            \"id\": 1040\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_JOINT_VEL_LIMIT\",\n                            \"id\": 1041\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_JOINT_ACC_LIMIT\",\n                            \"id\": 1042\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_ACC\",\n                            \"id\": 1043\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_TERM_COND\",\n                            \"id\": 1044\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_NUM_AXES\",\n                            \"id\": 1045\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_WORLD_HOME\",\n                            \"id\": 1046\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_HOMING_PARAMS\",\n                            \"id\": 1047\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_DEBUG\",\n                            \"id\": 1048\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_DOUT\",\n                            \"id\": 1049\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_AOUT\",\n                            \"id\": 1050\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_SPINDLESYNC\",\n                            \"id\": 1051\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_ON\",\n                            \"id\": 1052\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_OFF\",\n                            \"id\": 1053\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_INCREASE\",\n                            \"id\": 1054\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_DECREASE\",\n                            \"id\": 1055\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_BRAKE_ENGAGE\",\n                            \"id\": 1056\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_BRAKE_RELEASE\",\n                            \"id\": 1057\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_MOTOR_OFFSET\",\n                            \"id\": 1058\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_JOINT_COMP\",\n                            \"id\": 1059\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_OFFSET\",\n                            \"id\": 1060\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_OK\",\n                            \"id\": 1061\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_UNKNOWN_COMMAND\",\n                            \"id\": 1062\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_INVALID_COMMAND\",\n                            \"id\": 1063\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_INVALID_PARAMS\",\n                            \"id\": 1064\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_BAD_EXEC\",\n                            \"id\": 1065\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_DISABLED\",\n                            \"id\": 1066\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_FREE\",\n                            \"id\": 1067\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_TELEOP\",\n                            \"id\": 1068\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_COORD\",\n                            \"id\": 1069\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_JOINT_FLAG\",\n                            \"id\": 1070\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_FLAG\",\n                            \"id\": 1071\n                        },\n                        {\n                            \"name\": \"MT_PRU_FIRMWARE\",\n                            \"id\": 2048\n                        },\n                        {\n                            \"name\": \"MT_MESA_5I20_FIRMWARE\",\n                            \"id\": 3000\n                        },\n                        {\n                            \"name\": \"MT_BLOB\",\n                            \"id\": 4000\n                        },\n                        {\n                            \"name\": \"MT_TEST1\",\n                            \"id\": 5001\n                        },\n                        {\n                            \"name\": \"MT_TEST2\",\n                            \"id\": 5002\n                        },\n                        {\n                            \"name\": \"MT_TEST3\",\n                            \"id\": 5003\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_LOWER\",\n                            \"id\": 10000\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_UPPER\",\n                            \"id\": 13000\n                        },\n                        {\n                            \"name\": \"MT_EMC_OPERATOR_ERROR\",\n                            \"id\": 10011\n                        },\n                        {\n                            \"name\": \"MT_EMC_OPERATOR_TEXT\",\n                            \"id\": 10012\n                        },\n                        {\n                            \"name\": \"MT_EMC_OPERATOR_DISPLAY\",\n                            \"id\": 10013\n                        },\n                        {\n                            \"name\": \"MT_EMC_NULL\",\n                            \"id\": 10021\n                        },\n                        {\n                            \"name\": \"MT_EMC_SET_DEBUG\",\n                            \"id\": 10022\n                        },\n                        {\n                            \"name\": \"MT_EMC_SYSTEM_CMD\",\n                            \"id\": 10030\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_AXIS\",\n                            \"id\": 10101\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_UNITS\",\n                            \"id\": 10102\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_MIN_POSITION_LIMIT\",\n                            \"id\": 10107\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_MAX_POSITION_LIMIT\",\n                            \"id\": 10108\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_START_CHANGE\",\n                            \"id\": 1110\n                        },\n                        {\n                            \"name\": \"MT_EMC_EXEC_PLUGIN_CALL\",\n                            \"id\": 1112\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_PLUGIN_CALL\",\n                            \"id\": 1113\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_FERROR\",\n                            \"id\": 10111\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_HOMING_PARAMS\",\n                            \"id\": 10112\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_MIN_FERROR\",\n                            \"id\": 10115\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_MAX_VELOCITY\",\n                            \"id\": 10116\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_INIT\",\n                            \"id\": 10118\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_HALT\",\n                            \"id\": 10119\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_ABORT\",\n                            \"id\": 10120\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_ENABLE\",\n                            \"id\": 10121\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_DISABLE\",\n                            \"id\": 10122\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_HOME\",\n                            \"id\": 10123\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_UNHOME\",\n                            \"id\": 10135\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_JOG\",\n                            \"id\": 10124\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_INCR_JOG\",\n                            \"id\": 10125\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_ABS_JOG\",\n                            \"id\": 10126\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_ACTIVATE\",\n                            \"id\": 10127\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_DEACTIVATE\",\n                            \"id\": 10128\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_OVERRIDE_LIMITS\",\n                            \"id\": 10129\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_LOAD_COMP\",\n                            \"id\": 10131\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_BACKLASH\",\n                            \"id\": 10134\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_STAT\",\n                            \"id\": 10199\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_AXES\",\n                            \"id\": 10201\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_UNITS\",\n                            \"id\": 10202\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_CYCLE_TIME\",\n                            \"id\": 10203\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_MODE\",\n                            \"id\": 10204\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_VELOCITY\",\n                            \"id\": 10205\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_ACCELERATION\",\n                            \"id\": 10206\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_MAX_VELOCITY\",\n                            \"id\": 10207\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_MAX_ACCELERATION\",\n                            \"id\": 10208\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_SCALE\",\n                            \"id\": 10209\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_MOTION_ID\",\n                            \"id\": 10210\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_INIT\",\n                            \"id\": 10211\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_HALT\",\n                            \"id\": 10212\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_ENABLE\",\n                            \"id\": 10213\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_DISABLE\",\n                            \"id\": 10214\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_ABORT\",\n                            \"id\": 10215\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_PAUSE\",\n                            \"id\": 10216\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_STEP\",\n                            \"id\": 10217\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_RESUME\",\n                            \"id\": 10218\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_DELAY\",\n                            \"id\": 10219\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_LINEAR_MOVE\",\n                            \"id\": 10220\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_CIRCULAR_MOVE\",\n                            \"id\": 10221\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_TERM_COND\",\n                            \"id\": 10222\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_OFFSET\",\n                            \"id\": 10223\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_G5X\",\n                            \"id\": 10224\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_HOME\",\n                            \"id\": 10225\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_ROTATION\",\n                            \"id\": 10226\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_G92\",\n                            \"id\": 10227\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_CLEAR_PROBE_TRIPPED_FLAG\",\n                            \"id\": 10228\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_PROBE\",\n                            \"id\": 10229\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_TELEOP_ENABLE\",\n                            \"id\": 10230\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_TELEOP_VECTOR\",\n                            \"id\": 10231\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_SPINDLESYNC\",\n                            \"id\": 10232\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_SPINDLE_SCALE\",\n                            \"id\": 10233\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_FO_ENABLE\",\n                            \"id\": 10234\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_SO_ENABLE\",\n                            \"id\": 10235\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_FH_ENABLE\",\n                            \"id\": 10236\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_RIGID_TAP\",\n                            \"id\": 10237\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_STAT\",\n                            \"id\": 10299\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_INIT\",\n                            \"id\": 10301\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_HALT\",\n                            \"id\": 10302\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_ABORT\",\n                            \"id\": 10303\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_SET_AOUT\",\n                            \"id\": 10304\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_SET_DOUT\",\n                            \"id\": 10305\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_ADAPTIVE\",\n                            \"id\": 10306\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_ORIENT\",\n                            \"id\": 10317\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_WAIT_ORIENT_COMPLETE\",\n                            \"id\": 10318\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_STAT\",\n                            \"id\": 10399\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_INIT\",\n                            \"id\": 10501\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_HALT\",\n                            \"id\": 10502\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_ABORT\",\n                            \"id\": 10503\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_SET_MODE\",\n                            \"id\": 10504\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_SET_STATE\",\n                            \"id\": 10505\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_OPEN\",\n                            \"id\": 10506\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_RUN\",\n                            \"id\": 10507\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_READ\",\n                            \"id\": 10508\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_EXECUTE\",\n                            \"id\": 10509\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_PAUSE\",\n                            \"id\": 10510\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_STEP\",\n                            \"id\": 10511\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_RESUME\",\n                            \"id\": 10512\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_END\",\n                            \"id\": 10513\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_CLOSE\",\n                            \"id\": 10514\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_INIT\",\n                            \"id\": 10515\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_SYNCH\",\n                            \"id\": 10516\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_SET_OPTIONAL_STOP\",\n                            \"id\": 10517\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_SET_BLOCK_DELETE\",\n                            \"id\": 10518\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_OPTIONAL_STOP\",\n                            \"id\": 10519\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_RESET\",\n                            \"id\": 10520\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_REPLY\",\n                            \"id\": 10530\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_STAT\",\n                            \"id\": 10599\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_INIT\",\n                            \"id\": 11101\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_HALT\",\n                            \"id\": 11102\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_ABORT\",\n                            \"id\": 11103\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_PREPARE\",\n                            \"id\": 11104\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_LOAD\",\n                            \"id\": 11105\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_UNLOAD\",\n                            \"id\": 11106\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_LOAD_TOOL_TABLE\",\n                            \"id\": 11107\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_SET_OFFSET\",\n                            \"id\": 11108\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_SET_NUMBER\",\n                            \"id\": 11109\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_UPDATE_TOOL_TABLE\",\n                            \"id\": 11110\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_STAT\",\n                            \"id\": 11199\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_ESTOP_ON\",\n                            \"id\": 11206\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_ESTOP_OFF\",\n                            \"id\": 11207\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_ESTOP_RESET\",\n                            \"id\": 11208\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_INPUT_WAIT\",\n                            \"id\": 11209\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_STAT\",\n                            \"id\": 11299\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_ON\",\n                            \"id\": 11304\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_OFF\",\n                            \"id\": 11305\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_INCREASE\",\n                            \"id\": 11309\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_DECREASE\",\n                            \"id\": 11310\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_CONSTANT\",\n                            \"id\": 11311\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_BRAKE_RELEASE\",\n                            \"id\": 11312\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_BRAKE_ENGAGE\",\n                            \"id\": 11313\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_SPEED\",\n                            \"id\": 11316\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_STAT\",\n                            \"id\": 11399\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_MIST_ON\",\n                            \"id\": 11404\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_MIST_OFF\",\n                            \"id\": 11405\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_FLOOD_ON\",\n                            \"id\": 11406\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_FLOOD_OFF\",\n                            \"id\": 11407\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_STAT\",\n                            \"id\": 11499\n                        },\n                        {\n                            \"name\": \"MT_EMC_LUBE_ON\",\n                            \"id\": 11504\n                        },\n                        {\n                            \"name\": \"MT_EMC_LUBE_OFF\",\n                            \"id\": 11505\n                        },\n                        {\n                            \"name\": \"MT_EMC_LUBE_STAT\",\n                            \"id\": 11599\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_INIT\",\n                            \"id\": 11601\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_HALT\",\n                            \"id\": 11602\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_ABORT\",\n                            \"id\": 11603\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_SET_CYCLE_TIME\",\n                            \"id\": 11604\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_STAT\",\n                            \"id\": 11699\n                        },\n                        {\n                            \"name\": \"MT_EMC_INIT\",\n                            \"id\": 11901\n                        },\n                        {\n                            \"name\": \"MT_EMC_HALT\",\n                            \"id\": 11902\n                        },\n                        {\n                            \"name\": \"MT_EMC_ABORT\",\n                            \"id\": 11903\n                        },\n                        {\n                            \"name\": \"MT_EMC_STAT\",\n                            \"id\": 11999\n                        },\n                        {\n                            \"name\": \"MT_EMCSTAT_FULL_UPDATE\",\n                            \"id\": 12500\n                        },\n                        {\n                            \"name\": \"MT_EMCSTAT_INCREMENTAL_UPDATE\",\n                            \"id\": 12501\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_ERROR\",\n                            \"id\": 12510\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_TEXT\",\n                            \"id\": 12511\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_DISPLAY\",\n                            \"id\": 12512\n                        },\n                        {\n                            \"name\": \"MT_EMCCMD_EXECUTED\",\n                            \"id\": 12520\n                        },\n                        {\n                            \"name\": \"MT_EMCCMD_COMPLETED\",\n                            \"id\": 12521\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_FULL_UPDATE\",\n                            \"id\": 12600\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_INCREMENTAL_UPDATE\",\n                            \"id\": 12601\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_ERROR\",\n                            \"id\": 12602\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_START\",\n                            \"id\": 12610\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_TERMINATE\",\n                            \"id\": 12611\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_KILL\",\n                            \"id\": 12612\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_WRITE_STDIN\",\n                            \"id\": 12613\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_CALL\",\n                            \"id\": 12614\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_SHUTDOWN\",\n                            \"id\": 12615\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"OriginIndex\",\n                    \"values\": [\n                        {\n                            \"name\": \"ORIGIN_UNKNOWN\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"ORIGIN_G54\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"ORIGIN_G55\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"ORIGIN_G56\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"ORIGIN_G57\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"ORIGIN_G58\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"ORIGIN_G59\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"ORIGIN_G59_1\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"ORIGIN_G59_2\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"ORIGIN_G59_3\",\n                            \"id\": 9\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"TermConditionType\",\n                    \"values\": [\n                        {\n                            \"name\": \"_EMC_TRAJ_TERM_COND_STOP\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"_EMC_TRAJ_TERM_COND_BLEND\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"CanonDirection\",\n                    \"values\": [\n                        {\n                            \"name\": \"_CANON_STOPPED\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"_CANON_CLOCKWISE\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"_CANON_COUNTERCLOCKWISE\",\n                            \"id\": 3\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"InputType\",\n                    \"values\": [\n                        {\n                            \"name\": \"_ANALOG_INPUT\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"_DIGITAL_INPUT\",\n                            \"id\": 1\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"WaitType\",\n                    \"values\": [\n                        {\n                            \"name\": \"IMMEDIATE\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"RISE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"FALL\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"BE_HIGH\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"BE_LOW\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"InterpreterStateType\",\n                    \"values\": [\n                        {\n                            \"name\": \"INTERP_IDLE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"INTERP_RUNNING\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"INTERP_SYNC_WAIT\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"INTERP_PAUSED\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"INTERP_QUEUE_WAIT\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"INTERP_ABORT_WAIT\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"INTERP_STATE_UNSET\",\n                            \"id\": 99\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"MotionType\",\n                    \"values\": [\n                        {\n                            \"name\": \"_EMC_MOTION_TYPE_NONE\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"_EMC_MOTION_TYPE_TRAVERSE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"_EMC_MOTION_TYPE_FEED\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"_EMC_MOTION_TYPE_ARC\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"_EMC_MOTION_TYPE_TOOLCHANGE\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"_EMC_MOTION_TYPE_PROBING\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"_EMC_MOTION_TYPE_INDEXROTARY\",\n                            \"id\": 6\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"cmd_code_t\",\n                    \"values\": [\n                        {\n                            \"name\": \"EMCMOT_ABORT\",\n                            \"id\": 4000\n                        },\n                        {\n                            \"name\": \"EMCMOT_AXIS_ABORT\",\n                            \"id\": 4001\n                        },\n                        {\n                            \"name\": \"EMCMOT_ENABLE\",\n                            \"id\": 4002\n                        },\n                        {\n                            \"name\": \"EMCMOT_DISABLE\",\n                            \"id\": 4003\n                        },\n                        {\n                            \"name\": \"EMCMOT_ENABLE_AMPLIFIER\",\n                            \"id\": 4004\n                        },\n                        {\n                            \"name\": \"EMCMOT_DISABLE_AMPLIFIER\",\n                            \"id\": 4005\n                        },\n                        {\n                            \"name\": \"EMCMOT_ENABLE_WATCHDOG\",\n                            \"id\": 4006\n                        },\n                        {\n                            \"name\": \"EMCMOT_DISABLE_WATCHDOG\",\n                            \"id\": 4007\n                        },\n                        {\n                            \"name\": \"EMCMOT_ACTIVATE_JOINT\",\n                            \"id\": 4008\n                        },\n                        {\n                            \"name\": \"EMCMOT_DEACTIVATE_JOINT\",\n                            \"id\": 4009\n                        },\n                        {\n                            \"name\": \"EMCMOT_PAUSE\",\n                            \"id\": 4010\n                        },\n                        {\n                            \"name\": \"EMCMOT_RESUME\",\n                            \"id\": 4011\n                        },\n                        {\n                            \"name\": \"EMCMOT_STEP\",\n                            \"id\": 4012\n                        },\n                        {\n                            \"name\": \"EMCMOT_FREE\",\n                            \"id\": 4013\n                        },\n                        {\n                            \"name\": \"EMCMOT_COORD\",\n                            \"id\": 4014\n                        },\n                        {\n                            \"name\": \"EMCMOT_TELEOP\",\n                            \"id\": 4015\n                        },\n                        {\n                            \"name\": \"EMCMOT_SPINDLE_SCALE\",\n                            \"id\": 4016\n                        },\n                        {\n                            \"name\": \"EMCMOT_SS_ENABLE\",\n                            \"id\": 4017\n                        },\n                        {\n                            \"name\": \"EMCMOT_FEED_SCALE\",\n                            \"id\": 4018\n                        },\n                        {\n                            \"name\": \"EMCMOT_FS_ENABLE\",\n                            \"id\": 4019\n                        },\n                        {\n                            \"name\": \"EMCMOT_FH_ENABLE\",\n                            \"id\": 4020\n                        },\n                        {\n                            \"name\": \"EMCMOT_AF_ENABLE\",\n                            \"id\": 4021\n                        },\n                        {\n                            \"name\": \"EMCMOT_OVERRIDE_LIMITS\",\n                            \"id\": 4022\n                        },\n                        {\n                            \"name\": \"EMCMOT_HOME\",\n                            \"id\": 4023\n                        },\n                        {\n                            \"name\": \"EMCMOT_UNHOME\",\n                            \"id\": 4024\n                        },\n                        {\n                            \"name\": \"EMCMOT_JOG_CONT\",\n                            \"id\": 4025\n                        },\n                        {\n                            \"name\": \"EMCMOT_JOG_INCR\",\n                            \"id\": 4026\n                        },\n                        {\n                            \"name\": \"EMCMOT_JOG_ABS\",\n                            \"id\": 4027\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_LINE\",\n                            \"id\": 4028\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_CIRCLE\",\n                            \"id\": 4029\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_TELEOP_VECTOR\",\n                            \"id\": 4030\n                        },\n                        {\n                            \"name\": \"EMCMOT_CLEAR_PROBE_FLAGS\",\n                            \"id\": 4031\n                        },\n                        {\n                            \"name\": \"EMCMOT_PROBE\",\n                            \"id\": 4032\n                        },\n                        {\n                            \"name\": \"EMCMOT_RIGID_TAP\",\n                            \"id\": 4033\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_POSITION_LIMITS\",\n                            \"id\": 4034\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_BACKLASH\",\n                            \"id\": 4035\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_MIN_FERROR\",\n                            \"id\": 4036\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_MAX_FERROR\",\n                            \"id\": 4037\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_VEL\",\n                            \"id\": 4038\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_VEL_LIMIT\",\n                            \"id\": 4039\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_JOINT_VEL_LIMIT\",\n                            \"id\": 4040\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_JOINT_ACC_LIMIT\",\n                            \"id\": 4041\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_ACC\",\n                            \"id\": 4042\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_TERM_COND\",\n                            \"id\": 4043\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_NUM_AXES\",\n                            \"id\": 4044\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_WORLD_HOME\",\n                            \"id\": 4045\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_HOMING_PARAMS\",\n                            \"id\": 4046\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_DEBUG\",\n                            \"id\": 4047\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_DOUT\",\n                            \"id\": 4048\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_AOUT\",\n                            \"id\": 4049\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_SPINDLESYNC\",\n                            \"id\": 4050\n                        },\n                        {\n                            \"name\": \"EMCMOT_SPINDLE_ON\",\n                            \"id\": 4051\n                        },\n                        {\n                            \"name\": \"EMCMOT_SPINDLE_OFF\",\n                            \"id\": 4052\n                        },\n                        {\n                            \"name\": \"EMCMOT_SPINDLE_INCREASE\",\n                            \"id\": 4053\n                        },\n                        {\n                            \"name\": \"EMCMOT_SPINDLE_DECREASE\",\n                            \"id\": 4054\n                        },\n                        {\n                            \"name\": \"EMCMOT_SPINDLE_BRAKE_ENGAGE\",\n                            \"id\": 4055\n                        },\n                        {\n                            \"name\": \"EMCMOT_SPINDLE_BRAKE_RELEASE\",\n                            \"id\": 4056\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_MOTOR_OFFSET\",\n                            \"id\": 4057\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_JOINT_COMP\",\n                            \"id\": 4058\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_OFFSET\",\n                            \"id\": 4059\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"cmd_status_t\",\n                    \"values\": [\n                        {\n                            \"name\": \"EMCMOT_COMMAND_OK\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"EMCMOT_COMMAND_UNKNOWN_COMMAND\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"EMCMOT_COMMAND_INVALID_COMMAND\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"EMCMOT_COMMAND_INVALID_PARAMS\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"EMCMOT_COMMAND_BAD_EXEC\",\n                            \"id\": 4\n                        }\n                    ]\n                }\n            ]\n        }\n    ],\n    \"enums\": [\n        {\n            \"name\": \"FieldType\",\n            \"values\": [\n                {\n                    \"name\": \"FT_DEFAULT\",\n                    \"id\": 0\n                },\n                {\n                    \"name\": \"FT_CALLBACK\",\n                    \"id\": 1\n                },\n                {\n                    \"name\": \"FT_POINTER\",\n                    \"id\": 4\n                },\n                {\n                    \"name\": \"FT_STATIC\",\n                    \"id\": 2\n                },\n                {\n                    \"name\": \"FT_IGNORE\",\n                    \"id\": 3\n                }\n            ]\n        },\n        {\n            \"name\": \"IntSize\",\n            \"values\": [\n                {\n                    \"name\": \"IS_DEFAULT\",\n                    \"id\": 0\n                },\n                {\n                    \"name\": \"IS_8\",\n                    \"id\": 8\n                },\n                {\n                    \"name\": \"IS_16\",\n                    \"id\": 16\n                },\n                {\n                    \"name\": \"IS_32\",\n                    \"id\": 32\n                },\n                {\n                    \"name\": \"IS_64\",\n                    \"id\": 64\n                }\n            ]\n        }\n    ]\n}).build();","module.exports = require(\"protobufjs\").newBuilder({})['import']({\n    \"package\": null,\n    \"options\": {\n        \"java_package\": \"fi.kapsi.koti.jpa.nanopb\"\n    },\n    \"messages\": [\n        {\n            \"name\": \"NanoPBOptions\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"max_size\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"max_count\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"IntSize\",\n                    \"name\": \"int_size\",\n                    \"id\": 7,\n                    \"options\": {\n                        \"default\": \"IS_DEFAULT\"\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"FieldType\",\n                    \"name\": \"type\",\n                    \"id\": 3,\n                    \"options\": {\n                        \"default\": \"FT_DEFAULT\"\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"long_names\",\n                    \"id\": 4,\n                    \"options\": {\n                        \"default\": true\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"packed_struct\",\n                    \"id\": 5,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"skip_message\",\n                    \"id\": 6,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"no_unions\",\n                    \"id\": 8,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"uint32\",\n                    \"name\": \"msgid\",\n                    \"id\": 9\n                }\n            ]\n        },\n        {\n            \"name\": \"machinetalk\",\n            \"fields\": [],\n            \"messages\": [\n                {\n                    \"name\": \"LogMessage\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 400\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"MsgOrigin\",\n                            \"name\": \"origin\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"pid\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"MsgLevel\",\n                            \"name\": \"level\",\n                            \"id\": 30\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"string\",\n                            \"name\": \"tag\",\n                            \"id\": 40\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"string\",\n                            \"name\": \"text\",\n                            \"id\": 50\n                        }\n                    ]\n                }\n            ],\n            \"enums\": [\n                {\n                    \"name\": \"ValueType\",\n                    \"values\": [\n                        {\n                            \"name\": \"HAL_BIT\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"HAL_FLOAT\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"HAL_S32\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"HAL_U32\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"STRING\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"BYTES\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"INT32\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"UINT32\",\n                            \"id\": 30\n                        },\n                        {\n                            \"name\": \"INT64\",\n                            \"id\": 40\n                        },\n                        {\n                            \"name\": \"UINT64\",\n                            \"id\": 50\n                        },\n                        {\n                            \"name\": \"DOUBLE\",\n                            \"id\": 60\n                        },\n                        {\n                            \"name\": \"BOOL\",\n                            \"id\": 80\n                        },\n                        {\n                            \"name\": \"CARTESIAN\",\n                            \"id\": 100\n                        },\n                        {\n                            \"name\": \"LEGACY_CARTESIAN\",\n                            \"id\": 110\n                        },\n                        {\n                            \"name\": \"POSE\",\n                            \"id\": 120\n                        },\n                        {\n                            \"name\": \"LEGACY_POSE\",\n                            \"id\": 130\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"HalPinDirection\",\n                    \"values\": [\n                        {\n                            \"name\": \"HAL_IN\",\n                            \"id\": 16\n                        },\n                        {\n                            \"name\": \"HAL_OUT\",\n                            \"id\": 32\n                        },\n                        {\n                            \"name\": \"HAL_IO\",\n                            \"id\": 48\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"HalParamDirection\",\n                    \"values\": [\n                        {\n                            \"name\": \"HAL_RO\",\n                            \"id\": 64\n                        },\n                        {\n                            \"name\": \"HAL_RW\",\n                            \"id\": 192\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ObjectType\",\n                    \"values\": [\n                        {\n                            \"name\": \"HAL_PIN\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"HAL_SIGNAL\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"HAL_PARAM\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"HAL_THREAD\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"HAL_FUNCT\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"HAL_ALIAS\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"HAL_COMP_RT\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"HAL_COMP_USER\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"HAL_COMP_REMOTE\",\n                            \"id\": 9\n                        },\n                        {\n                            \"name\": \"HAL_RING\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"HAL_GROUP\",\n                            \"id\": 11\n                        },\n                        {\n                            \"name\": \"HAL_MEMBER_SIGNAL\",\n                            \"id\": 12\n                        },\n                        {\n                            \"name\": \"HAL_MEMBER_GROUP\",\n                            \"id\": 13\n                        },\n                        {\n                            \"name\": \"HAL_MEMBER_PIN\",\n                            \"id\": 14\n                        },\n                        {\n                            \"name\": \"HAL_MEMBER_PARAM\",\n                            \"id\": 15\n                        },\n                        {\n                            \"name\": \"RING_RECORD\",\n                            \"id\": 16\n                        },\n                        {\n                            \"name\": \"RING_STREAM\",\n                            \"id\": 17\n                        },\n                        {\n                            \"name\": \"HAL_VTABLE\",\n                            \"id\": 18\n                        },\n                        {\n                            \"name\": \"HAL_INST\",\n                            \"id\": 19\n                        },\n                        {\n                            \"name\": \"RING_MULTIFRAME\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"VALUE\",\n                            \"id\": 120\n                        },\n                        {\n                            \"name\": \"INSTANCE\",\n                            \"id\": 121\n                        },\n                        {\n                            \"name\": \"ORIGINATOR\",\n                            \"id\": 122\n                        },\n                        {\n                            \"name\": \"NAMED_VALUE\",\n                            \"id\": 125\n                        },\n                        {\n                            \"name\": \"OT_ERROR\",\n                            \"id\": 130\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"RCS_STATUS\",\n                    \"values\": [\n                        {\n                            \"name\": \"UNINITIALIZED_STATUS\",\n                            \"id\": -1\n                        },\n                        {\n                            \"name\": \"RCS_DONE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"RCS_EXEC\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"RCS_ERROR\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"RCS_RECEIVED\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"MsgOrigin\",\n                    \"values\": [\n                        {\n                            \"name\": \"MSG_KERNEL\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"MSG_RTUSER\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"MSG_ULAPI\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"MsgLevel\",\n                    \"values\": [\n                        {\n                            \"name\": \"RTAPI_MSG_NONE\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_ERR\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_WARN\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_INFO\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_DBG\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_ALL\",\n                            \"id\": 5\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"OriginDetail\",\n                    \"values\": [\n                        {\n                            \"name\": \"UNIX_SIGNAL\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"INSTANCE_SHUTDOWN\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"ZMQ_SOCKET\",\n                            \"id\": 70\n                        },\n                        {\n                            \"name\": \"NML_LAYER\",\n                            \"id\": 80\n                        },\n                        {\n                            \"name\": \"RCS_LAYER\",\n                            \"id\": 90\n                        },\n                        {\n                            \"name\": \"CMS_LAYER\",\n                            \"id\": 100\n                        },\n                        {\n                            \"name\": \"IP_LAYER\",\n                            \"id\": 110\n                        },\n                        {\n                            \"name\": \"TCP_LAYER\",\n                            \"id\": 120\n                        },\n                        {\n                            \"name\": \"PGM_LAYER\",\n                            \"id\": 130\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"OriginType\",\n                    \"values\": [\n                        {\n                            \"name\": \"PROCESS\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"USER_THREAD\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"RT_THREAD\",\n                            \"id\": 30\n                        },\n                        {\n                            \"name\": \"COMPONENT\",\n                            \"id\": 40\n                        },\n                        {\n                            \"name\": \"THREAD_FUNCTION\",\n                            \"id\": 50\n                        },\n                        {\n                            \"name\": \"COMPONENT_INIT\",\n                            \"id\": 60\n                        },\n                        {\n                            \"name\": \"COMPONENT_EXIT\",\n                            \"id\": 70\n                        },\n                        {\n                            \"name\": \"GROUP\",\n                            \"id\": 80\n                        },\n                        {\n                            \"name\": \"PIN\",\n                            \"id\": 90\n                        },\n                        {\n                            \"name\": \"SIGNAL\",\n                            \"id\": 100\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Severity\",\n                    \"values\": [\n                        {\n                            \"name\": \"S_INFORMATIONAL\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"S_WARNING\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"S_FAIL\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"StatusType\",\n                    \"values\": [\n                        {\n                            \"name\": \"ENQUEUED\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"PROCESSING\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"COMPLETE\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"FAILED\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ReplyType\",\n                    \"values\": [\n                        {\n                            \"name\": \"NONE\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"ON_RECEPTION\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"ON_QUEUED\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"ON_COMPLETION\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"ALL_STEPS\",\n                            \"id\": 255\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ServiceType\",\n                    \"values\": [\n                        {\n                            \"name\": \"ST_LOGGING\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"ST_CONFIG\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"ST_REDIS\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"ST_HTTP\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"ST_HTTPS\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"ST_WEBSOCKET\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"ST_WEBSOCKETS\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"ST_RTAPI_COMMAND\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"ST_STP_HALGROUP\",\n                            \"id\": 9\n                        },\n                        {\n                            \"name\": \"ST_STP_HALRCOMP\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"ST_STP_INTERP\",\n                            \"id\": 11\n                        },\n                        {\n                            \"name\": \"ST_STP_TASK\",\n                            \"id\": 12\n                        },\n                        {\n                            \"name\": \"ST_HAL_RCOMMAND\",\n                            \"id\": 13\n                        },\n                        {\n                            \"name\": \"ST_TASK_COMMAND\",\n                            \"id\": 14\n                        },\n                        {\n                            \"name\": \"ST_INTERP_COMMAND\",\n                            \"id\": 15\n                        },\n                        {\n                            \"name\": \"ST_MESSAGEBUS_COMMAND\",\n                            \"id\": 16\n                        },\n                        {\n                            \"name\": \"ST_MESSAGEBUS_RESPONSE\",\n                            \"id\": 17\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ServiceAPI\",\n                    \"values\": [\n                        {\n                            \"name\": \"SA_ZMQ_PROTOBUF\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"SA_WS_JSON\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ContainerType\",\n                    \"values\": [\n                        {\n                            \"name\": \"MT_RTMESSAGE\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"MT_MOTCMD\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"MT_MOTSTATUS\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"MT_LEGACY_MOTCMD\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"MT_LEGACY_MOTSTATUS\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"MT_WOU\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"MT_HALUPDATE\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_MESSAGE\",\n                            \"id\": 9\n                        },\n                        {\n                            \"name\": \"MT_LOG_MESSAGE\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"MT_PREVIEW\",\n                            \"id\": 11\n                        },\n                        {\n                            \"name\": \"MT_PROGRESS\",\n                            \"id\": 12\n                        },\n                        {\n                            \"name\": \"MT_INTERP_STAT\",\n                            \"id\": 13\n                        },\n                        {\n                            \"name\": \"MT_SYSLOG\",\n                            \"id\": 18\n                        },\n                        {\n                            \"name\": \"MT_LEGACY_NML\",\n                            \"id\": 19\n                        },\n                        {\n                            \"name\": \"MT_LEGACY_MOTCONFIG\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"MT_STP_UPDATE_FULL\",\n                            \"id\": 26\n                        },\n                        {\n                            \"name\": \"MT_STP_UPDATE\",\n                            \"id\": 28\n                        },\n                        {\n                            \"name\": \"MT_STP_NOGROUP\",\n                            \"id\": 27\n                        },\n                        {\n                            \"name\": \"MT_SHUTDOWN\",\n                            \"id\": 45\n                        },\n                        {\n                            \"name\": \"MT_CONFIRM_SHUTDOWN\",\n                            \"id\": 50\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE0\",\n                            \"id\": 30\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE1\",\n                            \"id\": 31\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE2\",\n                            \"id\": 32\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE3\",\n                            \"id\": 33\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE4\",\n                            \"id\": 34\n                        },\n                        {\n                            \"name\": \"MT_ASCII\",\n                            \"id\": 100\n                        },\n                        {\n                            \"name\": \"MT_UNICODE\",\n                            \"id\": 101\n                        },\n                        {\n                            \"name\": \"MT_GCODE\",\n                            \"id\": 102\n                        },\n                        {\n                            \"name\": \"MT_PYTHON\",\n                            \"id\": 103\n                        },\n                        {\n                            \"name\": \"MT_PICKLE\",\n                            \"id\": 104\n                        },\n                        {\n                            \"name\": \"MT_TCL\",\n                            \"id\": 105\n                        },\n                        {\n                            \"name\": \"MT_XML\",\n                            \"id\": 106\n                        },\n                        {\n                            \"name\": \"MT_JSON\",\n                            \"id\": 107\n                        },\n                        {\n                            \"name\": \"MT_JPEG\",\n                            \"id\": 108\n                        },\n                        {\n                            \"name\": \"MT_PNG\",\n                            \"id\": 109\n                        },\n                        {\n                            \"name\": \"MT_TIFF\",\n                            \"id\": 110\n                        },\n                        {\n                            \"name\": \"MT_POSTSCRIPT\",\n                            \"id\": 111\n                        },\n                        {\n                            \"name\": \"MT_SVG\",\n                            \"id\": 112\n                        },\n                        {\n                            \"name\": \"MT_ZMQ_SUBSCRIBE\",\n                            \"id\": 150\n                        },\n                        {\n                            \"name\": \"MT_ZMQ_UNSUBSCRIBE\",\n                            \"id\": 151\n                        },\n                        {\n                            \"name\": \"MT_PING\",\n                            \"id\": 210\n                        },\n                        {\n                            \"name\": \"MT_PING_ACKNOWLEDGE\",\n                            \"id\": 215\n                        },\n                        {\n                            \"name\": \"MT_REJECT\",\n                            \"id\": 220\n                        },\n                        {\n                            \"name\": \"MT_DONE\",\n                            \"id\": 240\n                        },\n                        {\n                            \"name\": \"MT_SERVICE_REQUEST\",\n                            \"id\": 250\n                        },\n                        {\n                            \"name\": \"MT_SERVICE_ANNOUNCEMENT\",\n                            \"id\": 251\n                        },\n                        {\n                            \"name\": \"MT_SERVICE_PROBE\",\n                            \"id\": 252\n                        },\n                        {\n                            \"name\": \"MT_MESSAGEBUS_NO_DESTINATION\",\n                            \"id\": 255\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_BIND\",\n                            \"id\": 256\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_BIND_CONFIRM\",\n                            \"id\": 257\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_BIND_REJECT\",\n                            \"id\": 258\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_SET\",\n                            \"id\": 259\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_SET_REJECT\",\n                            \"id\": 260\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_ACK\",\n                            \"id\": 263\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_SET\",\n                            \"id\": 265\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_SET_REJECT\",\n                            \"id\": 266\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_GET\",\n                            \"id\": 267\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_GET_REJECT\",\n                            \"id\": 268\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_CREATE\",\n                            \"id\": 269\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_CREATE_REJECT\",\n                            \"id\": 270\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_DELETE\",\n                            \"id\": 271\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_DELETE_REJECT\",\n                            \"id\": 272\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_ACK\",\n                            \"id\": 273\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_ERROR\",\n                            \"id\": 274\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_DESCRIBE\",\n                            \"id\": 276\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_DESCRIPTION\",\n                            \"id\": 277\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_FULL_UPDATE\",\n                            \"id\": 288\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_INCREMENTAL_UPDATE\",\n                            \"id\": 289\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_ERROR\",\n                            \"id\": 290\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_BIND\",\n                            \"id\": 294\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_BIND_CONFIRM\",\n                            \"id\": 295\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_BIND_REJECT\",\n                            \"id\": 296\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_FULL_UPDATE\",\n                            \"id\": 297\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_INCREMENTAL_UPDATE\",\n                            \"id\": 298\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_ERROR\",\n                            \"id\": 299\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_EXIT\",\n                            \"id\": 300\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_PING\",\n                            \"id\": 301\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_LOADRT\",\n                            \"id\": 302\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_LOG\",\n                            \"id\": 303\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_UNLOADRT\",\n                            \"id\": 305\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_NEWINST\",\n                            \"id\": 306\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_NEWTHREAD\",\n                            \"id\": 307\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_DELTHREAD\",\n                            \"id\": 308\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_CALLFUNC\",\n                            \"id\": 309\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_REPLY\",\n                            \"id\": 310\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_DELINST\",\n                            \"id\": 311\n                        },\n                        {\n                            \"name\": \"MT_LIST_APPLICATIONS\",\n                            \"id\": 350\n                        },\n                        {\n                            \"name\": \"MT_DESCRIBE_APPLICATION\",\n                            \"id\": 351\n                        },\n                        {\n                            \"name\": \"MT_RETRIEVE_APPLICATION\",\n                            \"id\": 352\n                        },\n                        {\n                            \"name\": \"MT_APPLICATION_DETAIL\",\n                            \"id\": 353\n                        },\n                        {\n                            \"name\": \"MT_ERROR\",\n                            \"id\": 360\n                        },\n                        {\n                            \"name\": \"MT_FULL_UPDATE\",\n                            \"id\": 370\n                        },\n                        {\n                            \"name\": \"MT_INCREMENTAL_UPDATE\",\n                            \"id\": 371\n                        },\n                        {\n                            \"name\": \"MT_TASK_REPLY\",\n                            \"id\": 400\n                        },\n                        {\n                            \"name\": \"MT_TICKET_UPDATE\",\n                            \"id\": 401\n                        },\n                        {\n                            \"name\": \"MT_CREDIT_UPDATE\",\n                            \"id\": 450\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_LOWER\",\n                            \"id\": 1000\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_UPPER\",\n                            \"id\": 1100\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ABORT\",\n                            \"id\": 1001\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_AXIS_ABORT\",\n                            \"id\": 1002\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ENABLE\",\n                            \"id\": 1003\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_DISABLE\",\n                            \"id\": 1004\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ENABLE_AMPLIFIER\",\n                            \"id\": 1005\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_DISABLE_AMPLIFIER\",\n                            \"id\": 1006\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ENABLE_WATCHDOG\",\n                            \"id\": 1007\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_DISABLE_WATCHDOG\",\n                            \"id\": 1008\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ACTIVATE_JOINT\",\n                            \"id\": 1009\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_DEACTIVATE_JOINT\",\n                            \"id\": 1010\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_PAUSE\",\n                            \"id\": 1011\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_RESUME\",\n                            \"id\": 1012\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_STEP\",\n                            \"id\": 1013\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_FREE\",\n                            \"id\": 1014\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COORD\",\n                            \"id\": 1015\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_TELEOP\",\n                            \"id\": 1016\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_SCALE\",\n                            \"id\": 1017\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SS_ENABLE\",\n                            \"id\": 1018\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_FEED_SCALE\",\n                            \"id\": 1019\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_FS_ENABLE\",\n                            \"id\": 1020\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_FH_ENABLE\",\n                            \"id\": 1021\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_AF_ENABLE\",\n                            \"id\": 1022\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_OVERRIDE_LIMITS\",\n                            \"id\": 1023\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_HOME\",\n                            \"id\": 1024\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_UNHOME\",\n                            \"id\": 1025\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_JOG_CONT\",\n                            \"id\": 1026\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_JOG_INCR\",\n                            \"id\": 1027\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_JOG_ABS\",\n                            \"id\": 1028\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_LINE\",\n                            \"id\": 1029\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_CIRCLE\",\n                            \"id\": 1030\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_TELEOP_VECTOR\",\n                            \"id\": 1031\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_CLEAR_PROBE_FLAGS\",\n                            \"id\": 1032\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_PROBE\",\n                            \"id\": 1033\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_RIGID_TAP\",\n                            \"id\": 1034\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_POSITION_LIMITS\",\n                            \"id\": 1035\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_BACKLASH\",\n                            \"id\": 1036\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_MIN_FERROR\",\n                            \"id\": 1037\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_MAX_FERROR\",\n                            \"id\": 1038\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_VEL\",\n                            \"id\": 1039\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_VEL_LIMIT\",\n                            \"id\": 1040\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_JOINT_VEL_LIMIT\",\n                            \"id\": 1041\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_JOINT_ACC_LIMIT\",\n                            \"id\": 1042\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_ACC\",\n                            \"id\": 1043\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_TERM_COND\",\n                            \"id\": 1044\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_NUM_AXES\",\n                            \"id\": 1045\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_WORLD_HOME\",\n                            \"id\": 1046\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_HOMING_PARAMS\",\n                            \"id\": 1047\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_DEBUG\",\n                            \"id\": 1048\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_DOUT\",\n                            \"id\": 1049\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_AOUT\",\n                            \"id\": 1050\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_SPINDLESYNC\",\n                            \"id\": 1051\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_ON\",\n                            \"id\": 1052\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_OFF\",\n                            \"id\": 1053\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_INCREASE\",\n                            \"id\": 1054\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_DECREASE\",\n                            \"id\": 1055\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_BRAKE_ENGAGE\",\n                            \"id\": 1056\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_BRAKE_RELEASE\",\n                            \"id\": 1057\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_MOTOR_OFFSET\",\n                            \"id\": 1058\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_JOINT_COMP\",\n                            \"id\": 1059\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_OFFSET\",\n                            \"id\": 1060\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_OK\",\n                            \"id\": 1061\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_UNKNOWN_COMMAND\",\n                            \"id\": 1062\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_INVALID_COMMAND\",\n                            \"id\": 1063\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_INVALID_PARAMS\",\n                            \"id\": 1064\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_BAD_EXEC\",\n                            \"id\": 1065\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_DISABLED\",\n                            \"id\": 1066\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_FREE\",\n                            \"id\": 1067\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_TELEOP\",\n                            \"id\": 1068\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_COORD\",\n                            \"id\": 1069\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_JOINT_FLAG\",\n                            \"id\": 1070\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_FLAG\",\n                            \"id\": 1071\n                        },\n                        {\n                            \"name\": \"MT_PRU_FIRMWARE\",\n                            \"id\": 2048\n                        },\n                        {\n                            \"name\": \"MT_MESA_5I20_FIRMWARE\",\n                            \"id\": 3000\n                        },\n                        {\n                            \"name\": \"MT_BLOB\",\n                            \"id\": 4000\n                        },\n                        {\n                            \"name\": \"MT_TEST1\",\n                            \"id\": 5001\n                        },\n                        {\n                            \"name\": \"MT_TEST2\",\n                            \"id\": 5002\n                        },\n                        {\n                            \"name\": \"MT_TEST3\",\n                            \"id\": 5003\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_LOWER\",\n                            \"id\": 10000\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_UPPER\",\n                            \"id\": 13000\n                        },\n                        {\n                            \"name\": \"MT_EMC_OPERATOR_ERROR\",\n                            \"id\": 10011\n                        },\n                        {\n                            \"name\": \"MT_EMC_OPERATOR_TEXT\",\n                            \"id\": 10012\n                        },\n                        {\n                            \"name\": \"MT_EMC_OPERATOR_DISPLAY\",\n                            \"id\": 10013\n                        },\n                        {\n                            \"name\": \"MT_EMC_NULL\",\n                            \"id\": 10021\n                        },\n                        {\n                            \"name\": \"MT_EMC_SET_DEBUG\",\n                            \"id\": 10022\n                        },\n                        {\n                            \"name\": \"MT_EMC_SYSTEM_CMD\",\n                            \"id\": 10030\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_AXIS\",\n                            \"id\": 10101\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_UNITS\",\n                            \"id\": 10102\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_MIN_POSITION_LIMIT\",\n                            \"id\": 10107\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_MAX_POSITION_LIMIT\",\n                            \"id\": 10108\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_START_CHANGE\",\n                            \"id\": 1110\n                        },\n                        {\n                            \"name\": \"MT_EMC_EXEC_PLUGIN_CALL\",\n                            \"id\": 1112\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_PLUGIN_CALL\",\n                            \"id\": 1113\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_FERROR\",\n                            \"id\": 10111\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_HOMING_PARAMS\",\n                            \"id\": 10112\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_MIN_FERROR\",\n                            \"id\": 10115\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_MAX_VELOCITY\",\n                            \"id\": 10116\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_INIT\",\n                            \"id\": 10118\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_HALT\",\n                            \"id\": 10119\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_ABORT\",\n                            \"id\": 10120\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_ENABLE\",\n                            \"id\": 10121\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_DISABLE\",\n                            \"id\": 10122\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_HOME\",\n                            \"id\": 10123\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_UNHOME\",\n                            \"id\": 10135\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_JOG\",\n                            \"id\": 10124\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_INCR_JOG\",\n                            \"id\": 10125\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_ABS_JOG\",\n                            \"id\": 10126\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_ACTIVATE\",\n                            \"id\": 10127\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_DEACTIVATE\",\n                            \"id\": 10128\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_OVERRIDE_LIMITS\",\n                            \"id\": 10129\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_LOAD_COMP\",\n                            \"id\": 10131\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_BACKLASH\",\n                            \"id\": 10134\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_STAT\",\n                            \"id\": 10199\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_AXES\",\n                            \"id\": 10201\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_UNITS\",\n                            \"id\": 10202\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_CYCLE_TIME\",\n                            \"id\": 10203\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_MODE\",\n                            \"id\": 10204\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_VELOCITY\",\n                            \"id\": 10205\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_ACCELERATION\",\n                            \"id\": 10206\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_MAX_VELOCITY\",\n                            \"id\": 10207\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_MAX_ACCELERATION\",\n                            \"id\": 10208\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_SCALE\",\n                            \"id\": 10209\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_MOTION_ID\",\n                            \"id\": 10210\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_INIT\",\n                            \"id\": 10211\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_HALT\",\n                            \"id\": 10212\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_ENABLE\",\n                            \"id\": 10213\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_DISABLE\",\n                            \"id\": 10214\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_ABORT\",\n                            \"id\": 10215\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_PAUSE\",\n                            \"id\": 10216\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_STEP\",\n                            \"id\": 10217\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_RESUME\",\n                            \"id\": 10218\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_DELAY\",\n                            \"id\": 10219\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_LINEAR_MOVE\",\n                            \"id\": 10220\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_CIRCULAR_MOVE\",\n                            \"id\": 10221\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_TERM_COND\",\n                            \"id\": 10222\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_OFFSET\",\n                            \"id\": 10223\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_G5X\",\n                            \"id\": 10224\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_HOME\",\n                            \"id\": 10225\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_ROTATION\",\n                            \"id\": 10226\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_G92\",\n                            \"id\": 10227\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_CLEAR_PROBE_TRIPPED_FLAG\",\n                            \"id\": 10228\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_PROBE\",\n                            \"id\": 10229\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_TELEOP_ENABLE\",\n                            \"id\": 10230\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_TELEOP_VECTOR\",\n                            \"id\": 10231\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_SPINDLESYNC\",\n                            \"id\": 10232\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_SPINDLE_SCALE\",\n                            \"id\": 10233\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_FO_ENABLE\",\n                            \"id\": 10234\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_SO_ENABLE\",\n                            \"id\": 10235\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_FH_ENABLE\",\n                            \"id\": 10236\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_RIGID_TAP\",\n                            \"id\": 10237\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_STAT\",\n                            \"id\": 10299\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_INIT\",\n                            \"id\": 10301\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_HALT\",\n                            \"id\": 10302\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_ABORT\",\n                            \"id\": 10303\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_SET_AOUT\",\n                            \"id\": 10304\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_SET_DOUT\",\n                            \"id\": 10305\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_ADAPTIVE\",\n                            \"id\": 10306\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_ORIENT\",\n                            \"id\": 10317\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_WAIT_ORIENT_COMPLETE\",\n                            \"id\": 10318\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_STAT\",\n                            \"id\": 10399\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_INIT\",\n                            \"id\": 10501\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_HALT\",\n                            \"id\": 10502\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_ABORT\",\n                            \"id\": 10503\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_SET_MODE\",\n                            \"id\": 10504\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_SET_STATE\",\n                            \"id\": 10505\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_OPEN\",\n                            \"id\": 10506\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_RUN\",\n                            \"id\": 10507\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_READ\",\n                            \"id\": 10508\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_EXECUTE\",\n                            \"id\": 10509\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_PAUSE\",\n                            \"id\": 10510\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_STEP\",\n                            \"id\": 10511\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_RESUME\",\n                            \"id\": 10512\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_END\",\n                            \"id\": 10513\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_CLOSE\",\n                            \"id\": 10514\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_INIT\",\n                            \"id\": 10515\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_SYNCH\",\n                            \"id\": 10516\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_SET_OPTIONAL_STOP\",\n                            \"id\": 10517\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_SET_BLOCK_DELETE\",\n                            \"id\": 10518\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_OPTIONAL_STOP\",\n                            \"id\": 10519\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_RESET\",\n                            \"id\": 10520\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_REPLY\",\n                            \"id\": 10530\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_STAT\",\n                            \"id\": 10599\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_INIT\",\n                            \"id\": 11101\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_HALT\",\n                            \"id\": 11102\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_ABORT\",\n                            \"id\": 11103\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_PREPARE\",\n                            \"id\": 11104\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_LOAD\",\n                            \"id\": 11105\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_UNLOAD\",\n                            \"id\": 11106\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_LOAD_TOOL_TABLE\",\n                            \"id\": 11107\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_SET_OFFSET\",\n                            \"id\": 11108\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_SET_NUMBER\",\n                            \"id\": 11109\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_UPDATE_TOOL_TABLE\",\n                            \"id\": 11110\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_STAT\",\n                            \"id\": 11199\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_ESTOP_ON\",\n                            \"id\": 11206\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_ESTOP_OFF\",\n                            \"id\": 11207\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_ESTOP_RESET\",\n                            \"id\": 11208\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_INPUT_WAIT\",\n                            \"id\": 11209\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_STAT\",\n                            \"id\": 11299\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_ON\",\n                            \"id\": 11304\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_OFF\",\n                            \"id\": 11305\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_INCREASE\",\n                            \"id\": 11309\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_DECREASE\",\n                            \"id\": 11310\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_CONSTANT\",\n                            \"id\": 11311\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_BRAKE_RELEASE\",\n                            \"id\": 11312\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_BRAKE_ENGAGE\",\n                            \"id\": 11313\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_SPEED\",\n                            \"id\": 11316\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_STAT\",\n                            \"id\": 11399\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_MIST_ON\",\n                            \"id\": 11404\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_MIST_OFF\",\n                            \"id\": 11405\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_FLOOD_ON\",\n                            \"id\": 11406\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_FLOOD_OFF\",\n                            \"id\": 11407\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_STAT\",\n                            \"id\": 11499\n                        },\n                        {\n                            \"name\": \"MT_EMC_LUBE_ON\",\n                            \"id\": 11504\n                        },\n                        {\n                            \"name\": \"MT_EMC_LUBE_OFF\",\n                            \"id\": 11505\n                        },\n                        {\n                            \"name\": \"MT_EMC_LUBE_STAT\",\n                            \"id\": 11599\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_INIT\",\n                            \"id\": 11601\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_HALT\",\n                            \"id\": 11602\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_ABORT\",\n                            \"id\": 11603\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_SET_CYCLE_TIME\",\n                            \"id\": 11604\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_STAT\",\n                            \"id\": 11699\n                        },\n                        {\n                            \"name\": \"MT_EMC_INIT\",\n                            \"id\": 11901\n                        },\n                        {\n                            \"name\": \"MT_EMC_HALT\",\n                            \"id\": 11902\n                        },\n                        {\n                            \"name\": \"MT_EMC_ABORT\",\n                            \"id\": 11903\n                        },\n                        {\n                            \"name\": \"MT_EMC_STAT\",\n                            \"id\": 11999\n                        },\n                        {\n                            \"name\": \"MT_EMCSTAT_FULL_UPDATE\",\n                            \"id\": 12500\n                        },\n                        {\n                            \"name\": \"MT_EMCSTAT_INCREMENTAL_UPDATE\",\n                            \"id\": 12501\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_ERROR\",\n                            \"id\": 12510\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_TEXT\",\n                            \"id\": 12511\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_DISPLAY\",\n                            \"id\": 12512\n                        },\n                        {\n                            \"name\": \"MT_EMCCMD_EXECUTED\",\n                            \"id\": 12520\n                        },\n                        {\n                            \"name\": \"MT_EMCCMD_COMPLETED\",\n                            \"id\": 12521\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_FULL_UPDATE\",\n                            \"id\": 12600\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_INCREMENTAL_UPDATE\",\n                            \"id\": 12601\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_ERROR\",\n                            \"id\": 12602\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_START\",\n                            \"id\": 12610\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_TERMINATE\",\n                            \"id\": 12611\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_KILL\",\n                            \"id\": 12612\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_WRITE_STDIN\",\n                            \"id\": 12613\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_CALL\",\n                            \"id\": 12614\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_SHUTDOWN\",\n                            \"id\": 12615\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"OriginIndex\",\n                    \"values\": [\n                        {\n                            \"name\": \"ORIGIN_UNKNOWN\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"ORIGIN_G54\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"ORIGIN_G55\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"ORIGIN_G56\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"ORIGIN_G57\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"ORIGIN_G58\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"ORIGIN_G59\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"ORIGIN_G59_1\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"ORIGIN_G59_2\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"ORIGIN_G59_3\",\n                            \"id\": 9\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"TermConditionType\",\n                    \"values\": [\n                        {\n                            \"name\": \"_EMC_TRAJ_TERM_COND_STOP\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"_EMC_TRAJ_TERM_COND_BLEND\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"CanonDirection\",\n                    \"values\": [\n                        {\n                            \"name\": \"_CANON_STOPPED\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"_CANON_CLOCKWISE\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"_CANON_COUNTERCLOCKWISE\",\n                            \"id\": 3\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"InputType\",\n                    \"values\": [\n                        {\n                            \"name\": \"_ANALOG_INPUT\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"_DIGITAL_INPUT\",\n                            \"id\": 1\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"WaitType\",\n                    \"values\": [\n                        {\n                            \"name\": \"IMMEDIATE\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"RISE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"FALL\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"BE_HIGH\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"BE_LOW\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"InterpreterStateType\",\n                    \"values\": [\n                        {\n                            \"name\": \"INTERP_IDLE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"INTERP_RUNNING\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"INTERP_SYNC_WAIT\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"INTERP_PAUSED\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"INTERP_QUEUE_WAIT\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"INTERP_ABORT_WAIT\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"INTERP_STATE_UNSET\",\n                            \"id\": 99\n                        }\n                    ]\n                }\n            ]\n        }\n    ],\n    \"enums\": [\n        {\n            \"name\": \"FieldType\",\n            \"values\": [\n                {\n                    \"name\": \"FT_DEFAULT\",\n                    \"id\": 0\n                },\n                {\n                    \"name\": \"FT_CALLBACK\",\n                    \"id\": 1\n                },\n                {\n                    \"name\": \"FT_POINTER\",\n                    \"id\": 4\n                },\n                {\n                    \"name\": \"FT_STATIC\",\n                    \"id\": 2\n                },\n                {\n                    \"name\": \"FT_IGNORE\",\n                    \"id\": 3\n                }\n            ]\n        },\n        {\n            \"name\": \"IntSize\",\n            \"values\": [\n                {\n                    \"name\": \"IS_DEFAULT\",\n                    \"id\": 0\n                },\n                {\n                    \"name\": \"IS_8\",\n                    \"id\": 8\n                },\n                {\n                    \"name\": \"IS_16\",\n                    \"id\": 16\n                },\n                {\n                    \"name\": \"IS_32\",\n                    \"id\": 32\n                },\n                {\n                    \"name\": \"IS_64\",\n                    \"id\": 64\n                }\n            ]\n        }\n    ]\n}).build();","module.exports = require(\"protobufjs\").newBuilder({})['import']({\n    \"package\": null,\n    \"options\": {\n        \"java_package\": \"fi.kapsi.koti.jpa.nanopb\"\n    },\n    \"messages\": [\n        {\n            \"name\": \"NanoPBOptions\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"max_size\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"max_count\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"IntSize\",\n                    \"name\": \"int_size\",\n                    \"id\": 7,\n                    \"options\": {\n                        \"default\": \"IS_DEFAULT\"\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"FieldType\",\n                    \"name\": \"type\",\n                    \"id\": 3,\n                    \"options\": {\n                        \"default\": \"FT_DEFAULT\"\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"long_names\",\n                    \"id\": 4,\n                    \"options\": {\n                        \"default\": true\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"packed_struct\",\n                    \"id\": 5,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"skip_message\",\n                    \"id\": 6,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"no_unions\",\n                    \"id\": 8,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"uint32\",\n                    \"name\": \"msgid\",\n                    \"id\": 9\n                }\n            ]\n        },\n        {\n            \"name\": \"machinetalk\",\n            \"fields\": [],\n            \"messages\": [\n                {\n                    \"name\": \"Instance\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 700\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"name\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"id\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ServiceAnnouncement\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 701\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"ServiceType\",\n                            \"name\": \"stype\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"version\",\n                            \"id\": 2,\n                            \"options\": {\n                                \"default\": 0\n                            }\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"instance\",\n                            \"id\": 3,\n                            \"options\": {\n                                \"default\": 0\n                            }\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"ServiceAPI\",\n                            \"name\": \"api\",\n                            \"id\": 8\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"string\",\n                            \"name\": \"uri\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"description\",\n                            \"id\": 7\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Originator\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 702\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"OriginType\",\n                            \"name\": \"origin\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"OriginDetail\",\n                            \"name\": \"detail\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"name\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"id\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Instance\",\n                            \"name\": \"instance\",\n                            \"id\": 5\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"AnError\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 703\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"error_code\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Severity\",\n                            \"name\": \"severity\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"error_text\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Originator\",\n                            \"name\": \"origin\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Pin\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 704\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"ValueType\",\n                            \"name\": \"type\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"name\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"handle\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"HalPinDirection\",\n                            \"name\": \"dir\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"halbit\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"halfloat\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"hals32\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"halu32\",\n                            \"id\": 8\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"owner\",\n                            \"id\": 9\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"linked\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"oldname\",\n                            \"id\": 11\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"epsilon\",\n                            \"id\": 12\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"flags\",\n                            \"id\": 13\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Signal\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 705\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"ValueType\",\n                            \"name\": \"type\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"name\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"handle\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"halbit\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"halfloat\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"hals32\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"halu32\",\n                            \"id\": 8\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"strval\",\n                            \"id\": 9\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bytes\",\n                            \"name\": \"blob\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"readers\",\n                            \"id\": 11\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"writers\",\n                            \"id\": 12\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"bidirs\",\n                            \"id\": 13\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Param\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 706\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"ValueType\",\n                            \"name\": \"type\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"name\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"handle\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"halbit\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"halfloat\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"hals32\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"halu32\",\n                            \"id\": 8\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"strval\",\n                            \"id\": 9\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bytes\",\n                            \"name\": \"blob\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"HalParamDirection\",\n                            \"name\": \"dir\",\n                            \"id\": 11\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"oldname\",\n                            \"id\": 12\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"owner\",\n                            \"id\": 13\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"runtime\",\n                            \"id\": 14\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"maytime\",\n                            \"id\": 15\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Function\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 707\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"name\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"handle\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"owner_id\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"users\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"runtime\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"maxtime\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"reentrant\",\n                            \"id\": 7\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Thread\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 708\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"name\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"handle\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"uses_fp\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"period\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"priority\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"task_id\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"cpu_id\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"string\",\n                            \"name\": \"function\",\n                            \"id\": 8\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Component\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 709\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"name\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"ninst\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"comp_id\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"type\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"state\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"last_update\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"last_bound\",\n                            \"id\": 8\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"last_unbound\",\n                            \"id\": 9\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"pid\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"args\",\n                            \"id\": 11\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"timer\",\n                            \"id\": 12\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"userarg1\",\n                            \"id\": 14\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"userarg2\",\n                            \"id\": 15\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"Pin\",\n                            \"name\": \"pin\",\n                            \"id\": 16\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"Param\",\n                            \"name\": \"param\",\n                            \"id\": 17\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"no_create\",\n                            \"id\": 18\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Ring\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 710\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"name\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"handle\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"owner\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"stream\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"wmutex\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"rmutex\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"rtapi_shm\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"reader\",\n                            \"id\": 8\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"writer\",\n                            \"id\": 9\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"size\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"scratchpad\",\n                            \"id\": 11\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Member\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 711\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"ObjectType\",\n                            \"name\": \"mtype\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"userarg1\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"epsilon\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Signal\",\n                            \"name\": \"signal\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"groupname\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"handle\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Pin\",\n                            \"name\": \"pin\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Param\",\n                            \"name\": \"param\",\n                            \"id\": 8\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Group\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 712\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"name\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"handle\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"userarg1\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"userarg2\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"refcount\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"Member\",\n                            \"name\": \"member\",\n                            \"id\": 7\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ProtocolParameters\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 713\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"keepalive_timer\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"group_timer\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"rcomp_timer\",\n                            \"id\": 3\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Vtable\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 714\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"name\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"context\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"comp_id\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"instance_id\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"handle\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"refcount\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"version\",\n                            \"id\": 8\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed64\",\n                            \"name\": \"vtable\",\n                            \"id\": 9\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Inst\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 715\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"name\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"comp_id\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"inst_id\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"inst_size\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed64\",\n                            \"name\": \"vtable\",\n                            \"id\": 5\n                        }\n                    ]\n                }\n            ],\n            \"enums\": [\n                {\n                    \"name\": \"ValueType\",\n                    \"values\": [\n                        {\n                            \"name\": \"HAL_BIT\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"HAL_FLOAT\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"HAL_S32\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"HAL_U32\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"STRING\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"BYTES\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"INT32\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"UINT32\",\n                            \"id\": 30\n                        },\n                        {\n                            \"name\": \"INT64\",\n                            \"id\": 40\n                        },\n                        {\n                            \"name\": \"UINT64\",\n                            \"id\": 50\n                        },\n                        {\n                            \"name\": \"DOUBLE\",\n                            \"id\": 60\n                        },\n                        {\n                            \"name\": \"BOOL\",\n                            \"id\": 80\n                        },\n                        {\n                            \"name\": \"CARTESIAN\",\n                            \"id\": 100\n                        },\n                        {\n                            \"name\": \"LEGACY_CARTESIAN\",\n                            \"id\": 110\n                        },\n                        {\n                            \"name\": \"POSE\",\n                            \"id\": 120\n                        },\n                        {\n                            \"name\": \"LEGACY_POSE\",\n                            \"id\": 130\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"HalPinDirection\",\n                    \"values\": [\n                        {\n                            \"name\": \"HAL_IN\",\n                            \"id\": 16\n                        },\n                        {\n                            \"name\": \"HAL_OUT\",\n                            \"id\": 32\n                        },\n                        {\n                            \"name\": \"HAL_IO\",\n                            \"id\": 48\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"HalParamDirection\",\n                    \"values\": [\n                        {\n                            \"name\": \"HAL_RO\",\n                            \"id\": 64\n                        },\n                        {\n                            \"name\": \"HAL_RW\",\n                            \"id\": 192\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ObjectType\",\n                    \"values\": [\n                        {\n                            \"name\": \"HAL_PIN\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"HAL_SIGNAL\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"HAL_PARAM\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"HAL_THREAD\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"HAL_FUNCT\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"HAL_ALIAS\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"HAL_COMP_RT\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"HAL_COMP_USER\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"HAL_COMP_REMOTE\",\n                            \"id\": 9\n                        },\n                        {\n                            \"name\": \"HAL_RING\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"HAL_GROUP\",\n                            \"id\": 11\n                        },\n                        {\n                            \"name\": \"HAL_MEMBER_SIGNAL\",\n                            \"id\": 12\n                        },\n                        {\n                            \"name\": \"HAL_MEMBER_GROUP\",\n                            \"id\": 13\n                        },\n                        {\n                            \"name\": \"HAL_MEMBER_PIN\",\n                            \"id\": 14\n                        },\n                        {\n                            \"name\": \"HAL_MEMBER_PARAM\",\n                            \"id\": 15\n                        },\n                        {\n                            \"name\": \"RING_RECORD\",\n                            \"id\": 16\n                        },\n                        {\n                            \"name\": \"RING_STREAM\",\n                            \"id\": 17\n                        },\n                        {\n                            \"name\": \"HAL_VTABLE\",\n                            \"id\": 18\n                        },\n                        {\n                            \"name\": \"HAL_INST\",\n                            \"id\": 19\n                        },\n                        {\n                            \"name\": \"RING_MULTIFRAME\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"VALUE\",\n                            \"id\": 120\n                        },\n                        {\n                            \"name\": \"INSTANCE\",\n                            \"id\": 121\n                        },\n                        {\n                            \"name\": \"ORIGINATOR\",\n                            \"id\": 122\n                        },\n                        {\n                            \"name\": \"NAMED_VALUE\",\n                            \"id\": 125\n                        },\n                        {\n                            \"name\": \"OT_ERROR\",\n                            \"id\": 130\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"RCS_STATUS\",\n                    \"values\": [\n                        {\n                            \"name\": \"UNINITIALIZED_STATUS\",\n                            \"id\": -1\n                        },\n                        {\n                            \"name\": \"RCS_DONE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"RCS_EXEC\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"RCS_ERROR\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"RCS_RECEIVED\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"MsgOrigin\",\n                    \"values\": [\n                        {\n                            \"name\": \"MSG_KERNEL\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"MSG_RTUSER\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"MSG_ULAPI\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"MsgLevel\",\n                    \"values\": [\n                        {\n                            \"name\": \"RTAPI_MSG_NONE\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_ERR\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_WARN\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_INFO\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_DBG\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_ALL\",\n                            \"id\": 5\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"OriginDetail\",\n                    \"values\": [\n                        {\n                            \"name\": \"UNIX_SIGNAL\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"INSTANCE_SHUTDOWN\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"ZMQ_SOCKET\",\n                            \"id\": 70\n                        },\n                        {\n                            \"name\": \"NML_LAYER\",\n                            \"id\": 80\n                        },\n                        {\n                            \"name\": \"RCS_LAYER\",\n                            \"id\": 90\n                        },\n                        {\n                            \"name\": \"CMS_LAYER\",\n                            \"id\": 100\n                        },\n                        {\n                            \"name\": \"IP_LAYER\",\n                            \"id\": 110\n                        },\n                        {\n                            \"name\": \"TCP_LAYER\",\n                            \"id\": 120\n                        },\n                        {\n                            \"name\": \"PGM_LAYER\",\n                            \"id\": 130\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"OriginType\",\n                    \"values\": [\n                        {\n                            \"name\": \"PROCESS\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"USER_THREAD\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"RT_THREAD\",\n                            \"id\": 30\n                        },\n                        {\n                            \"name\": \"COMPONENT\",\n                            \"id\": 40\n                        },\n                        {\n                            \"name\": \"THREAD_FUNCTION\",\n                            \"id\": 50\n                        },\n                        {\n                            \"name\": \"COMPONENT_INIT\",\n                            \"id\": 60\n                        },\n                        {\n                            \"name\": \"COMPONENT_EXIT\",\n                            \"id\": 70\n                        },\n                        {\n                            \"name\": \"GROUP\",\n                            \"id\": 80\n                        },\n                        {\n                            \"name\": \"PIN\",\n                            \"id\": 90\n                        },\n                        {\n                            \"name\": \"SIGNAL\",\n                            \"id\": 100\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Severity\",\n                    \"values\": [\n                        {\n                            \"name\": \"S_INFORMATIONAL\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"S_WARNING\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"S_FAIL\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"StatusType\",\n                    \"values\": [\n                        {\n                            \"name\": \"ENQUEUED\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"PROCESSING\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"COMPLETE\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"FAILED\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ReplyType\",\n                    \"values\": [\n                        {\n                            \"name\": \"NONE\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"ON_RECEPTION\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"ON_QUEUED\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"ON_COMPLETION\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"ALL_STEPS\",\n                            \"id\": 255\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ServiceType\",\n                    \"values\": [\n                        {\n                            \"name\": \"ST_LOGGING\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"ST_CONFIG\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"ST_REDIS\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"ST_HTTP\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"ST_HTTPS\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"ST_WEBSOCKET\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"ST_WEBSOCKETS\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"ST_RTAPI_COMMAND\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"ST_STP_HALGROUP\",\n                            \"id\": 9\n                        },\n                        {\n                            \"name\": \"ST_STP_HALRCOMP\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"ST_STP_INTERP\",\n                            \"id\": 11\n                        },\n                        {\n                            \"name\": \"ST_STP_TASK\",\n                            \"id\": 12\n                        },\n                        {\n                            \"name\": \"ST_HAL_RCOMMAND\",\n                            \"id\": 13\n                        },\n                        {\n                            \"name\": \"ST_TASK_COMMAND\",\n                            \"id\": 14\n                        },\n                        {\n                            \"name\": \"ST_INTERP_COMMAND\",\n                            \"id\": 15\n                        },\n                        {\n                            \"name\": \"ST_MESSAGEBUS_COMMAND\",\n                            \"id\": 16\n                        },\n                        {\n                            \"name\": \"ST_MESSAGEBUS_RESPONSE\",\n                            \"id\": 17\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ServiceAPI\",\n                    \"values\": [\n                        {\n                            \"name\": \"SA_ZMQ_PROTOBUF\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"SA_WS_JSON\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ContainerType\",\n                    \"values\": [\n                        {\n                            \"name\": \"MT_RTMESSAGE\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"MT_MOTCMD\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"MT_MOTSTATUS\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"MT_LEGACY_MOTCMD\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"MT_LEGACY_MOTSTATUS\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"MT_WOU\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"MT_HALUPDATE\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_MESSAGE\",\n                            \"id\": 9\n                        },\n                        {\n                            \"name\": \"MT_LOG_MESSAGE\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"MT_PREVIEW\",\n                            \"id\": 11\n                        },\n                        {\n                            \"name\": \"MT_PROGRESS\",\n                            \"id\": 12\n                        },\n                        {\n                            \"name\": \"MT_INTERP_STAT\",\n                            \"id\": 13\n                        },\n                        {\n                            \"name\": \"MT_SYSLOG\",\n                            \"id\": 18\n                        },\n                        {\n                            \"name\": \"MT_LEGACY_NML\",\n                            \"id\": 19\n                        },\n                        {\n                            \"name\": \"MT_LEGACY_MOTCONFIG\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"MT_STP_UPDATE_FULL\",\n                            \"id\": 26\n                        },\n                        {\n                            \"name\": \"MT_STP_UPDATE\",\n                            \"id\": 28\n                        },\n                        {\n                            \"name\": \"MT_STP_NOGROUP\",\n                            \"id\": 27\n                        },\n                        {\n                            \"name\": \"MT_SHUTDOWN\",\n                            \"id\": 45\n                        },\n                        {\n                            \"name\": \"MT_CONFIRM_SHUTDOWN\",\n                            \"id\": 50\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE0\",\n                            \"id\": 30\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE1\",\n                            \"id\": 31\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE2\",\n                            \"id\": 32\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE3\",\n                            \"id\": 33\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE4\",\n                            \"id\": 34\n                        },\n                        {\n                            \"name\": \"MT_ASCII\",\n                            \"id\": 100\n                        },\n                        {\n                            \"name\": \"MT_UNICODE\",\n                            \"id\": 101\n                        },\n                        {\n                            \"name\": \"MT_GCODE\",\n                            \"id\": 102\n                        },\n                        {\n                            \"name\": \"MT_PYTHON\",\n                            \"id\": 103\n                        },\n                        {\n                            \"name\": \"MT_PICKLE\",\n                            \"id\": 104\n                        },\n                        {\n                            \"name\": \"MT_TCL\",\n                            \"id\": 105\n                        },\n                        {\n                            \"name\": \"MT_XML\",\n                            \"id\": 106\n                        },\n                        {\n                            \"name\": \"MT_JSON\",\n                            \"id\": 107\n                        },\n                        {\n                            \"name\": \"MT_JPEG\",\n                            \"id\": 108\n                        },\n                        {\n                            \"name\": \"MT_PNG\",\n                            \"id\": 109\n                        },\n                        {\n                            \"name\": \"MT_TIFF\",\n                            \"id\": 110\n                        },\n                        {\n                            \"name\": \"MT_POSTSCRIPT\",\n                            \"id\": 111\n                        },\n                        {\n                            \"name\": \"MT_SVG\",\n                            \"id\": 112\n                        },\n                        {\n                            \"name\": \"MT_ZMQ_SUBSCRIBE\",\n                            \"id\": 150\n                        },\n                        {\n                            \"name\": \"MT_ZMQ_UNSUBSCRIBE\",\n                            \"id\": 151\n                        },\n                        {\n                            \"name\": \"MT_PING\",\n                            \"id\": 210\n                        },\n                        {\n                            \"name\": \"MT_PING_ACKNOWLEDGE\",\n                            \"id\": 215\n                        },\n                        {\n                            \"name\": \"MT_REJECT\",\n                            \"id\": 220\n                        },\n                        {\n                            \"name\": \"MT_DONE\",\n                            \"id\": 240\n                        },\n                        {\n                            \"name\": \"MT_SERVICE_REQUEST\",\n                            \"id\": 250\n                        },\n                        {\n                            \"name\": \"MT_SERVICE_ANNOUNCEMENT\",\n                            \"id\": 251\n                        },\n                        {\n                            \"name\": \"MT_SERVICE_PROBE\",\n                            \"id\": 252\n                        },\n                        {\n                            \"name\": \"MT_MESSAGEBUS_NO_DESTINATION\",\n                            \"id\": 255\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_BIND\",\n                            \"id\": 256\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_BIND_CONFIRM\",\n                            \"id\": 257\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_BIND_REJECT\",\n                            \"id\": 258\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_SET\",\n                            \"id\": 259\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_SET_REJECT\",\n                            \"id\": 260\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_ACK\",\n                            \"id\": 263\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_SET\",\n                            \"id\": 265\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_SET_REJECT\",\n                            \"id\": 266\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_GET\",\n                            \"id\": 267\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_GET_REJECT\",\n                            \"id\": 268\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_CREATE\",\n                            \"id\": 269\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_CREATE_REJECT\",\n                            \"id\": 270\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_DELETE\",\n                            \"id\": 271\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_DELETE_REJECT\",\n                            \"id\": 272\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_ACK\",\n                            \"id\": 273\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_ERROR\",\n                            \"id\": 274\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_DESCRIBE\",\n                            \"id\": 276\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_DESCRIPTION\",\n                            \"id\": 277\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_FULL_UPDATE\",\n                            \"id\": 288\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_INCREMENTAL_UPDATE\",\n                            \"id\": 289\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_ERROR\",\n                            \"id\": 290\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_BIND\",\n                            \"id\": 294\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_BIND_CONFIRM\",\n                            \"id\": 295\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_BIND_REJECT\",\n                            \"id\": 296\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_FULL_UPDATE\",\n                            \"id\": 297\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_INCREMENTAL_UPDATE\",\n                            \"id\": 298\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_ERROR\",\n                            \"id\": 299\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_EXIT\",\n                            \"id\": 300\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_PING\",\n                            \"id\": 301\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_LOADRT\",\n                            \"id\": 302\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_LOG\",\n                            \"id\": 303\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_UNLOADRT\",\n                            \"id\": 305\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_NEWINST\",\n                            \"id\": 306\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_NEWTHREAD\",\n                            \"id\": 307\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_DELTHREAD\",\n                            \"id\": 308\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_CALLFUNC\",\n                            \"id\": 309\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_REPLY\",\n                            \"id\": 310\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_DELINST\",\n                            \"id\": 311\n                        },\n                        {\n                            \"name\": \"MT_LIST_APPLICATIONS\",\n                            \"id\": 350\n                        },\n                        {\n                            \"name\": \"MT_DESCRIBE_APPLICATION\",\n                            \"id\": 351\n                        },\n                        {\n                            \"name\": \"MT_RETRIEVE_APPLICATION\",\n                            \"id\": 352\n                        },\n                        {\n                            \"name\": \"MT_APPLICATION_DETAIL\",\n                            \"id\": 353\n                        },\n                        {\n                            \"name\": \"MT_ERROR\",\n                            \"id\": 360\n                        },\n                        {\n                            \"name\": \"MT_FULL_UPDATE\",\n                            \"id\": 370\n                        },\n                        {\n                            \"name\": \"MT_INCREMENTAL_UPDATE\",\n                            \"id\": 371\n                        },\n                        {\n                            \"name\": \"MT_TASK_REPLY\",\n                            \"id\": 400\n                        },\n                        {\n                            \"name\": \"MT_TICKET_UPDATE\",\n                            \"id\": 401\n                        },\n                        {\n                            \"name\": \"MT_CREDIT_UPDATE\",\n                            \"id\": 450\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_LOWER\",\n                            \"id\": 1000\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_UPPER\",\n                            \"id\": 1100\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ABORT\",\n                            \"id\": 1001\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_AXIS_ABORT\",\n                            \"id\": 1002\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ENABLE\",\n                            \"id\": 1003\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_DISABLE\",\n                            \"id\": 1004\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ENABLE_AMPLIFIER\",\n                            \"id\": 1005\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_DISABLE_AMPLIFIER\",\n                            \"id\": 1006\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ENABLE_WATCHDOG\",\n                            \"id\": 1007\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_DISABLE_WATCHDOG\",\n                            \"id\": 1008\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ACTIVATE_JOINT\",\n                            \"id\": 1009\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_DEACTIVATE_JOINT\",\n                            \"id\": 1010\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_PAUSE\",\n                            \"id\": 1011\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_RESUME\",\n                            \"id\": 1012\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_STEP\",\n                            \"id\": 1013\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_FREE\",\n                            \"id\": 1014\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COORD\",\n                            \"id\": 1015\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_TELEOP\",\n                            \"id\": 1016\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_SCALE\",\n                            \"id\": 1017\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SS_ENABLE\",\n                            \"id\": 1018\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_FEED_SCALE\",\n                            \"id\": 1019\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_FS_ENABLE\",\n                            \"id\": 1020\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_FH_ENABLE\",\n                            \"id\": 1021\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_AF_ENABLE\",\n                            \"id\": 1022\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_OVERRIDE_LIMITS\",\n                            \"id\": 1023\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_HOME\",\n                            \"id\": 1024\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_UNHOME\",\n                            \"id\": 1025\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_JOG_CONT\",\n                            \"id\": 1026\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_JOG_INCR\",\n                            \"id\": 1027\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_JOG_ABS\",\n                            \"id\": 1028\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_LINE\",\n                            \"id\": 1029\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_CIRCLE\",\n                            \"id\": 1030\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_TELEOP_VECTOR\",\n                            \"id\": 1031\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_CLEAR_PROBE_FLAGS\",\n                            \"id\": 1032\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_PROBE\",\n                            \"id\": 1033\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_RIGID_TAP\",\n                            \"id\": 1034\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_POSITION_LIMITS\",\n                            \"id\": 1035\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_BACKLASH\",\n                            \"id\": 1036\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_MIN_FERROR\",\n                            \"id\": 1037\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_MAX_FERROR\",\n                            \"id\": 1038\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_VEL\",\n                            \"id\": 1039\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_VEL_LIMIT\",\n                            \"id\": 1040\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_JOINT_VEL_LIMIT\",\n                            \"id\": 1041\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_JOINT_ACC_LIMIT\",\n                            \"id\": 1042\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_ACC\",\n                            \"id\": 1043\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_TERM_COND\",\n                            \"id\": 1044\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_NUM_AXES\",\n                            \"id\": 1045\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_WORLD_HOME\",\n                            \"id\": 1046\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_HOMING_PARAMS\",\n                            \"id\": 1047\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_DEBUG\",\n                            \"id\": 1048\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_DOUT\",\n                            \"id\": 1049\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_AOUT\",\n                            \"id\": 1050\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_SPINDLESYNC\",\n                            \"id\": 1051\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_ON\",\n                            \"id\": 1052\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_OFF\",\n                            \"id\": 1053\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_INCREASE\",\n                            \"id\": 1054\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_DECREASE\",\n                            \"id\": 1055\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_BRAKE_ENGAGE\",\n                            \"id\": 1056\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_BRAKE_RELEASE\",\n                            \"id\": 1057\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_MOTOR_OFFSET\",\n                            \"id\": 1058\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_JOINT_COMP\",\n                            \"id\": 1059\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_OFFSET\",\n                            \"id\": 1060\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_OK\",\n                            \"id\": 1061\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_UNKNOWN_COMMAND\",\n                            \"id\": 1062\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_INVALID_COMMAND\",\n                            \"id\": 1063\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_INVALID_PARAMS\",\n                            \"id\": 1064\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_BAD_EXEC\",\n                            \"id\": 1065\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_DISABLED\",\n                            \"id\": 1066\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_FREE\",\n                            \"id\": 1067\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_TELEOP\",\n                            \"id\": 1068\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_COORD\",\n                            \"id\": 1069\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_JOINT_FLAG\",\n                            \"id\": 1070\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_FLAG\",\n                            \"id\": 1071\n                        },\n                        {\n                            \"name\": \"MT_PRU_FIRMWARE\",\n                            \"id\": 2048\n                        },\n                        {\n                            \"name\": \"MT_MESA_5I20_FIRMWARE\",\n                            \"id\": 3000\n                        },\n                        {\n                            \"name\": \"MT_BLOB\",\n                            \"id\": 4000\n                        },\n                        {\n                            \"name\": \"MT_TEST1\",\n                            \"id\": 5001\n                        },\n                        {\n                            \"name\": \"MT_TEST2\",\n                            \"id\": 5002\n                        },\n                        {\n                            \"name\": \"MT_TEST3\",\n                            \"id\": 5003\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_LOWER\",\n                            \"id\": 10000\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_UPPER\",\n                            \"id\": 13000\n                        },\n                        {\n                            \"name\": \"MT_EMC_OPERATOR_ERROR\",\n                            \"id\": 10011\n                        },\n                        {\n                            \"name\": \"MT_EMC_OPERATOR_TEXT\",\n                            \"id\": 10012\n                        },\n                        {\n                            \"name\": \"MT_EMC_OPERATOR_DISPLAY\",\n                            \"id\": 10013\n                        },\n                        {\n                            \"name\": \"MT_EMC_NULL\",\n                            \"id\": 10021\n                        },\n                        {\n                            \"name\": \"MT_EMC_SET_DEBUG\",\n                            \"id\": 10022\n                        },\n                        {\n                            \"name\": \"MT_EMC_SYSTEM_CMD\",\n                            \"id\": 10030\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_AXIS\",\n                            \"id\": 10101\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_UNITS\",\n                            \"id\": 10102\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_MIN_POSITION_LIMIT\",\n                            \"id\": 10107\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_MAX_POSITION_LIMIT\",\n                            \"id\": 10108\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_START_CHANGE\",\n                            \"id\": 1110\n                        },\n                        {\n                            \"name\": \"MT_EMC_EXEC_PLUGIN_CALL\",\n                            \"id\": 1112\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_PLUGIN_CALL\",\n                            \"id\": 1113\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_FERROR\",\n                            \"id\": 10111\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_HOMING_PARAMS\",\n                            \"id\": 10112\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_MIN_FERROR\",\n                            \"id\": 10115\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_MAX_VELOCITY\",\n                            \"id\": 10116\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_INIT\",\n                            \"id\": 10118\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_HALT\",\n                            \"id\": 10119\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_ABORT\",\n                            \"id\": 10120\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_ENABLE\",\n                            \"id\": 10121\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_DISABLE\",\n                            \"id\": 10122\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_HOME\",\n                            \"id\": 10123\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_UNHOME\",\n                            \"id\": 10135\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_JOG\",\n                            \"id\": 10124\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_INCR_JOG\",\n                            \"id\": 10125\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_ABS_JOG\",\n                            \"id\": 10126\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_ACTIVATE\",\n                            \"id\": 10127\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_DEACTIVATE\",\n                            \"id\": 10128\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_OVERRIDE_LIMITS\",\n                            \"id\": 10129\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_LOAD_COMP\",\n                            \"id\": 10131\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_BACKLASH\",\n                            \"id\": 10134\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_STAT\",\n                            \"id\": 10199\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_AXES\",\n                            \"id\": 10201\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_UNITS\",\n                            \"id\": 10202\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_CYCLE_TIME\",\n                            \"id\": 10203\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_MODE\",\n                            \"id\": 10204\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_VELOCITY\",\n                            \"id\": 10205\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_ACCELERATION\",\n                            \"id\": 10206\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_MAX_VELOCITY\",\n                            \"id\": 10207\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_MAX_ACCELERATION\",\n                            \"id\": 10208\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_SCALE\",\n                            \"id\": 10209\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_MOTION_ID\",\n                            \"id\": 10210\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_INIT\",\n                            \"id\": 10211\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_HALT\",\n                            \"id\": 10212\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_ENABLE\",\n                            \"id\": 10213\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_DISABLE\",\n                            \"id\": 10214\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_ABORT\",\n                            \"id\": 10215\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_PAUSE\",\n                            \"id\": 10216\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_STEP\",\n                            \"id\": 10217\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_RESUME\",\n                            \"id\": 10218\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_DELAY\",\n                            \"id\": 10219\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_LINEAR_MOVE\",\n                            \"id\": 10220\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_CIRCULAR_MOVE\",\n                            \"id\": 10221\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_TERM_COND\",\n                            \"id\": 10222\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_OFFSET\",\n                            \"id\": 10223\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_G5X\",\n                            \"id\": 10224\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_HOME\",\n                            \"id\": 10225\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_ROTATION\",\n                            \"id\": 10226\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_G92\",\n                            \"id\": 10227\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_CLEAR_PROBE_TRIPPED_FLAG\",\n                            \"id\": 10228\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_PROBE\",\n                            \"id\": 10229\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_TELEOP_ENABLE\",\n                            \"id\": 10230\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_TELEOP_VECTOR\",\n                            \"id\": 10231\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_SPINDLESYNC\",\n                            \"id\": 10232\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_SPINDLE_SCALE\",\n                            \"id\": 10233\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_FO_ENABLE\",\n                            \"id\": 10234\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_SO_ENABLE\",\n                            \"id\": 10235\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_FH_ENABLE\",\n                            \"id\": 10236\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_RIGID_TAP\",\n                            \"id\": 10237\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_STAT\",\n                            \"id\": 10299\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_INIT\",\n                            \"id\": 10301\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_HALT\",\n                            \"id\": 10302\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_ABORT\",\n                            \"id\": 10303\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_SET_AOUT\",\n                            \"id\": 10304\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_SET_DOUT\",\n                            \"id\": 10305\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_ADAPTIVE\",\n                            \"id\": 10306\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_ORIENT\",\n                            \"id\": 10317\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_WAIT_ORIENT_COMPLETE\",\n                            \"id\": 10318\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_STAT\",\n                            \"id\": 10399\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_INIT\",\n                            \"id\": 10501\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_HALT\",\n                            \"id\": 10502\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_ABORT\",\n                            \"id\": 10503\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_SET_MODE\",\n                            \"id\": 10504\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_SET_STATE\",\n                            \"id\": 10505\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_OPEN\",\n                            \"id\": 10506\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_RUN\",\n                            \"id\": 10507\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_READ\",\n                            \"id\": 10508\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_EXECUTE\",\n                            \"id\": 10509\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_PAUSE\",\n                            \"id\": 10510\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_STEP\",\n                            \"id\": 10511\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_RESUME\",\n                            \"id\": 10512\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_END\",\n                            \"id\": 10513\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_CLOSE\",\n                            \"id\": 10514\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_INIT\",\n                            \"id\": 10515\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_SYNCH\",\n                            \"id\": 10516\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_SET_OPTIONAL_STOP\",\n                            \"id\": 10517\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_SET_BLOCK_DELETE\",\n                            \"id\": 10518\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_OPTIONAL_STOP\",\n                            \"id\": 10519\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_RESET\",\n                            \"id\": 10520\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_REPLY\",\n                            \"id\": 10530\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_STAT\",\n                            \"id\": 10599\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_INIT\",\n                            \"id\": 11101\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_HALT\",\n                            \"id\": 11102\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_ABORT\",\n                            \"id\": 11103\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_PREPARE\",\n                            \"id\": 11104\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_LOAD\",\n                            \"id\": 11105\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_UNLOAD\",\n                            \"id\": 11106\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_LOAD_TOOL_TABLE\",\n                            \"id\": 11107\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_SET_OFFSET\",\n                            \"id\": 11108\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_SET_NUMBER\",\n                            \"id\": 11109\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_UPDATE_TOOL_TABLE\",\n                            \"id\": 11110\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_STAT\",\n                            \"id\": 11199\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_ESTOP_ON\",\n                            \"id\": 11206\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_ESTOP_OFF\",\n                            \"id\": 11207\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_ESTOP_RESET\",\n                            \"id\": 11208\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_INPUT_WAIT\",\n                            \"id\": 11209\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_STAT\",\n                            \"id\": 11299\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_ON\",\n                            \"id\": 11304\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_OFF\",\n                            \"id\": 11305\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_INCREASE\",\n                            \"id\": 11309\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_DECREASE\",\n                            \"id\": 11310\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_CONSTANT\",\n                            \"id\": 11311\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_BRAKE_RELEASE\",\n                            \"id\": 11312\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_BRAKE_ENGAGE\",\n                            \"id\": 11313\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_SPEED\",\n                            \"id\": 11316\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_STAT\",\n                            \"id\": 11399\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_MIST_ON\",\n                            \"id\": 11404\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_MIST_OFF\",\n                            \"id\": 11405\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_FLOOD_ON\",\n                            \"id\": 11406\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_FLOOD_OFF\",\n                            \"id\": 11407\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_STAT\",\n                            \"id\": 11499\n                        },\n                        {\n                            \"name\": \"MT_EMC_LUBE_ON\",\n                            \"id\": 11504\n                        },\n                        {\n                            \"name\": \"MT_EMC_LUBE_OFF\",\n                            \"id\": 11505\n                        },\n                        {\n                            \"name\": \"MT_EMC_LUBE_STAT\",\n                            \"id\": 11599\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_INIT\",\n                            \"id\": 11601\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_HALT\",\n                            \"id\": 11602\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_ABORT\",\n                            \"id\": 11603\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_SET_CYCLE_TIME\",\n                            \"id\": 11604\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_STAT\",\n                            \"id\": 11699\n                        },\n                        {\n                            \"name\": \"MT_EMC_INIT\",\n                            \"id\": 11901\n                        },\n                        {\n                            \"name\": \"MT_EMC_HALT\",\n                            \"id\": 11902\n                        },\n                        {\n                            \"name\": \"MT_EMC_ABORT\",\n                            \"id\": 11903\n                        },\n                        {\n                            \"name\": \"MT_EMC_STAT\",\n                            \"id\": 11999\n                        },\n                        {\n                            \"name\": \"MT_EMCSTAT_FULL_UPDATE\",\n                            \"id\": 12500\n                        },\n                        {\n                            \"name\": \"MT_EMCSTAT_INCREMENTAL_UPDATE\",\n                            \"id\": 12501\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_ERROR\",\n                            \"id\": 12510\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_TEXT\",\n                            \"id\": 12511\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_DISPLAY\",\n                            \"id\": 12512\n                        },\n                        {\n                            \"name\": \"MT_EMCCMD_EXECUTED\",\n                            \"id\": 12520\n                        },\n                        {\n                            \"name\": \"MT_EMCCMD_COMPLETED\",\n                            \"id\": 12521\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_FULL_UPDATE\",\n                            \"id\": 12600\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_INCREMENTAL_UPDATE\",\n                            \"id\": 12601\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_ERROR\",\n                            \"id\": 12602\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_START\",\n                            \"id\": 12610\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_TERMINATE\",\n                            \"id\": 12611\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_KILL\",\n                            \"id\": 12612\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_WRITE_STDIN\",\n                            \"id\": 12613\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_CALL\",\n                            \"id\": 12614\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_SHUTDOWN\",\n                            \"id\": 12615\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"OriginIndex\",\n                    \"values\": [\n                        {\n                            \"name\": \"ORIGIN_UNKNOWN\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"ORIGIN_G54\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"ORIGIN_G55\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"ORIGIN_G56\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"ORIGIN_G57\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"ORIGIN_G58\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"ORIGIN_G59\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"ORIGIN_G59_1\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"ORIGIN_G59_2\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"ORIGIN_G59_3\",\n                            \"id\": 9\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"TermConditionType\",\n                    \"values\": [\n                        {\n                            \"name\": \"_EMC_TRAJ_TERM_COND_STOP\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"_EMC_TRAJ_TERM_COND_BLEND\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"CanonDirection\",\n                    \"values\": [\n                        {\n                            \"name\": \"_CANON_STOPPED\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"_CANON_CLOCKWISE\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"_CANON_COUNTERCLOCKWISE\",\n                            \"id\": 3\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"InputType\",\n                    \"values\": [\n                        {\n                            \"name\": \"_ANALOG_INPUT\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"_DIGITAL_INPUT\",\n                            \"id\": 1\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"WaitType\",\n                    \"values\": [\n                        {\n                            \"name\": \"IMMEDIATE\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"RISE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"FALL\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"BE_HIGH\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"BE_LOW\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"InterpreterStateType\",\n                    \"values\": [\n                        {\n                            \"name\": \"INTERP_IDLE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"INTERP_RUNNING\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"INTERP_SYNC_WAIT\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"INTERP_PAUSED\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"INTERP_QUEUE_WAIT\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"INTERP_ABORT_WAIT\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"INTERP_STATE_UNSET\",\n                            \"id\": 99\n                        }\n                    ]\n                }\n            ]\n        }\n    ],\n    \"enums\": [\n        {\n            \"name\": \"FieldType\",\n            \"values\": [\n                {\n                    \"name\": \"FT_DEFAULT\",\n                    \"id\": 0\n                },\n                {\n                    \"name\": \"FT_CALLBACK\",\n                    \"id\": 1\n                },\n                {\n                    \"name\": \"FT_POINTER\",\n                    \"id\": 4\n                },\n                {\n                    \"name\": \"FT_STATIC\",\n                    \"id\": 2\n                },\n                {\n                    \"name\": \"FT_IGNORE\",\n                    \"id\": 3\n                }\n            ]\n        },\n        {\n            \"name\": \"IntSize\",\n            \"values\": [\n                {\n                    \"name\": \"IS_DEFAULT\",\n                    \"id\": 0\n                },\n                {\n                    \"name\": \"IS_8\",\n                    \"id\": 8\n                },\n                {\n                    \"name\": \"IS_16\",\n                    \"id\": 16\n                },\n                {\n                    \"name\": \"IS_32\",\n                    \"id\": 32\n                },\n                {\n                    \"name\": \"IS_64\",\n                    \"id\": 64\n                }\n            ]\n        }\n    ]\n}).build();","module.exports = require(\"protobufjs\").newBuilder({})['import']({\n    \"package\": null,\n    \"options\": {\n        \"java_package\": \"fi.kapsi.koti.jpa.nanopb\"\n    },\n    \"messages\": [\n        {\n            \"name\": \"NanoPBOptions\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"max_size\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"max_count\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"IntSize\",\n                    \"name\": \"int_size\",\n                    \"id\": 7,\n                    \"options\": {\n                        \"default\": \"IS_DEFAULT\"\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"FieldType\",\n                    \"name\": \"type\",\n                    \"id\": 3,\n                    \"options\": {\n                        \"default\": \"FT_DEFAULT\"\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"long_names\",\n                    \"id\": 4,\n                    \"options\": {\n                        \"default\": true\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"packed_struct\",\n                    \"id\": 5,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"skip_message\",\n                    \"id\": 6,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"no_unions\",\n                    \"id\": 8,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"uint32\",\n                    \"name\": \"msgid\",\n                    \"id\": 9\n                }\n            ]\n        },\n        {\n            \"name\": \"machinetalk\",\n            \"fields\": [],\n            \"messages\": [\n                {\n                    \"name\": \"TaskPlanExecute\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1200\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"command\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"line\",\n                            \"id\": 30\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"TaskPlanBlockDelete\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1201\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"bool\",\n                            \"name\": \"state\",\n                            \"id\": 10\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"TaskPlanOptionalStop\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1202\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"bool\",\n                            \"name\": \"state\",\n                            \"id\": 10\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"TaskPlanOpen\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1203\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"string\",\n                            \"name\": \"filename\",\n                            \"id\": 10\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"TaskPlanReply\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1204\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"ContainerType\",\n                            \"name\": \"cmd\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"errormsg\",\n                            \"id\": 20\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"TaskReply\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1205\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"ticket\",\n                            \"id\": 10\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"TicketUpdate\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1206\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"cticket\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"RCS_STATUS\",\n                            \"name\": \"status\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"text\",\n                            \"id\": 30\n                        }\n                    ]\n                }\n            ],\n            \"enums\": [\n                {\n                    \"name\": \"ValueType\",\n                    \"values\": [\n                        {\n                            \"name\": \"HAL_BIT\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"HAL_FLOAT\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"HAL_S32\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"HAL_U32\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"STRING\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"BYTES\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"INT32\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"UINT32\",\n                            \"id\": 30\n                        },\n                        {\n                            \"name\": \"INT64\",\n                            \"id\": 40\n                        },\n                        {\n                            \"name\": \"UINT64\",\n                            \"id\": 50\n                        },\n                        {\n                            \"name\": \"DOUBLE\",\n                            \"id\": 60\n                        },\n                        {\n                            \"name\": \"BOOL\",\n                            \"id\": 80\n                        },\n                        {\n                            \"name\": \"CARTESIAN\",\n                            \"id\": 100\n                        },\n                        {\n                            \"name\": \"LEGACY_CARTESIAN\",\n                            \"id\": 110\n                        },\n                        {\n                            \"name\": \"POSE\",\n                            \"id\": 120\n                        },\n                        {\n                            \"name\": \"LEGACY_POSE\",\n                            \"id\": 130\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"HalPinDirection\",\n                    \"values\": [\n                        {\n                            \"name\": \"HAL_IN\",\n                            \"id\": 16\n                        },\n                        {\n                            \"name\": \"HAL_OUT\",\n                            \"id\": 32\n                        },\n                        {\n                            \"name\": \"HAL_IO\",\n                            \"id\": 48\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"HalParamDirection\",\n                    \"values\": [\n                        {\n                            \"name\": \"HAL_RO\",\n                            \"id\": 64\n                        },\n                        {\n                            \"name\": \"HAL_RW\",\n                            \"id\": 192\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ObjectType\",\n                    \"values\": [\n                        {\n                            \"name\": \"HAL_PIN\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"HAL_SIGNAL\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"HAL_PARAM\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"HAL_THREAD\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"HAL_FUNCT\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"HAL_ALIAS\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"HAL_COMP_RT\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"HAL_COMP_USER\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"HAL_COMP_REMOTE\",\n                            \"id\": 9\n                        },\n                        {\n                            \"name\": \"HAL_RING\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"HAL_GROUP\",\n                            \"id\": 11\n                        },\n                        {\n                            \"name\": \"HAL_MEMBER_SIGNAL\",\n                            \"id\": 12\n                        },\n                        {\n                            \"name\": \"HAL_MEMBER_GROUP\",\n                            \"id\": 13\n                        },\n                        {\n                            \"name\": \"HAL_MEMBER_PIN\",\n                            \"id\": 14\n                        },\n                        {\n                            \"name\": \"HAL_MEMBER_PARAM\",\n                            \"id\": 15\n                        },\n                        {\n                            \"name\": \"RING_RECORD\",\n                            \"id\": 16\n                        },\n                        {\n                            \"name\": \"RING_STREAM\",\n                            \"id\": 17\n                        },\n                        {\n                            \"name\": \"HAL_VTABLE\",\n                            \"id\": 18\n                        },\n                        {\n                            \"name\": \"HAL_INST\",\n                            \"id\": 19\n                        },\n                        {\n                            \"name\": \"RING_MULTIFRAME\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"VALUE\",\n                            \"id\": 120\n                        },\n                        {\n                            \"name\": \"INSTANCE\",\n                            \"id\": 121\n                        },\n                        {\n                            \"name\": \"ORIGINATOR\",\n                            \"id\": 122\n                        },\n                        {\n                            \"name\": \"NAMED_VALUE\",\n                            \"id\": 125\n                        },\n                        {\n                            \"name\": \"OT_ERROR\",\n                            \"id\": 130\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"RCS_STATUS\",\n                    \"values\": [\n                        {\n                            \"name\": \"UNINITIALIZED_STATUS\",\n                            \"id\": -1\n                        },\n                        {\n                            \"name\": \"RCS_DONE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"RCS_EXEC\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"RCS_ERROR\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"RCS_RECEIVED\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"MsgOrigin\",\n                    \"values\": [\n                        {\n                            \"name\": \"MSG_KERNEL\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"MSG_RTUSER\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"MSG_ULAPI\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"MsgLevel\",\n                    \"values\": [\n                        {\n                            \"name\": \"RTAPI_MSG_NONE\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_ERR\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_WARN\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_INFO\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_DBG\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_ALL\",\n                            \"id\": 5\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"OriginDetail\",\n                    \"values\": [\n                        {\n                            \"name\": \"UNIX_SIGNAL\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"INSTANCE_SHUTDOWN\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"ZMQ_SOCKET\",\n                            \"id\": 70\n                        },\n                        {\n                            \"name\": \"NML_LAYER\",\n                            \"id\": 80\n                        },\n                        {\n                            \"name\": \"RCS_LAYER\",\n                            \"id\": 90\n                        },\n                        {\n                            \"name\": \"CMS_LAYER\",\n                            \"id\": 100\n                        },\n                        {\n                            \"name\": \"IP_LAYER\",\n                            \"id\": 110\n                        },\n                        {\n                            \"name\": \"TCP_LAYER\",\n                            \"id\": 120\n                        },\n                        {\n                            \"name\": \"PGM_LAYER\",\n                            \"id\": 130\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"OriginType\",\n                    \"values\": [\n                        {\n                            \"name\": \"PROCESS\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"USER_THREAD\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"RT_THREAD\",\n                            \"id\": 30\n                        },\n                        {\n                            \"name\": \"COMPONENT\",\n                            \"id\": 40\n                        },\n                        {\n                            \"name\": \"THREAD_FUNCTION\",\n                            \"id\": 50\n                        },\n                        {\n                            \"name\": \"COMPONENT_INIT\",\n                            \"id\": 60\n                        },\n                        {\n                            \"name\": \"COMPONENT_EXIT\",\n                            \"id\": 70\n                        },\n                        {\n                            \"name\": \"GROUP\",\n                            \"id\": 80\n                        },\n                        {\n                            \"name\": \"PIN\",\n                            \"id\": 90\n                        },\n                        {\n                            \"name\": \"SIGNAL\",\n                            \"id\": 100\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Severity\",\n                    \"values\": [\n                        {\n                            \"name\": \"S_INFORMATIONAL\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"S_WARNING\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"S_FAIL\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"StatusType\",\n                    \"values\": [\n                        {\n                            \"name\": \"ENQUEUED\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"PROCESSING\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"COMPLETE\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"FAILED\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ReplyType\",\n                    \"values\": [\n                        {\n                            \"name\": \"NONE\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"ON_RECEPTION\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"ON_QUEUED\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"ON_COMPLETION\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"ALL_STEPS\",\n                            \"id\": 255\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ServiceType\",\n                    \"values\": [\n                        {\n                            \"name\": \"ST_LOGGING\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"ST_CONFIG\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"ST_REDIS\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"ST_HTTP\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"ST_HTTPS\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"ST_WEBSOCKET\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"ST_WEBSOCKETS\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"ST_RTAPI_COMMAND\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"ST_STP_HALGROUP\",\n                            \"id\": 9\n                        },\n                        {\n                            \"name\": \"ST_STP_HALRCOMP\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"ST_STP_INTERP\",\n                            \"id\": 11\n                        },\n                        {\n                            \"name\": \"ST_STP_TASK\",\n                            \"id\": 12\n                        },\n                        {\n                            \"name\": \"ST_HAL_RCOMMAND\",\n                            \"id\": 13\n                        },\n                        {\n                            \"name\": \"ST_TASK_COMMAND\",\n                            \"id\": 14\n                        },\n                        {\n                            \"name\": \"ST_INTERP_COMMAND\",\n                            \"id\": 15\n                        },\n                        {\n                            \"name\": \"ST_MESSAGEBUS_COMMAND\",\n                            \"id\": 16\n                        },\n                        {\n                            \"name\": \"ST_MESSAGEBUS_RESPONSE\",\n                            \"id\": 17\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ServiceAPI\",\n                    \"values\": [\n                        {\n                            \"name\": \"SA_ZMQ_PROTOBUF\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"SA_WS_JSON\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ContainerType\",\n                    \"values\": [\n                        {\n                            \"name\": \"MT_RTMESSAGE\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"MT_MOTCMD\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"MT_MOTSTATUS\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"MT_LEGACY_MOTCMD\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"MT_LEGACY_MOTSTATUS\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"MT_WOU\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"MT_HALUPDATE\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_MESSAGE\",\n                            \"id\": 9\n                        },\n                        {\n                            \"name\": \"MT_LOG_MESSAGE\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"MT_PREVIEW\",\n                            \"id\": 11\n                        },\n                        {\n                            \"name\": \"MT_PROGRESS\",\n                            \"id\": 12\n                        },\n                        {\n                            \"name\": \"MT_INTERP_STAT\",\n                            \"id\": 13\n                        },\n                        {\n                            \"name\": \"MT_SYSLOG\",\n                            \"id\": 18\n                        },\n                        {\n                            \"name\": \"MT_LEGACY_NML\",\n                            \"id\": 19\n                        },\n                        {\n                            \"name\": \"MT_LEGACY_MOTCONFIG\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"MT_STP_UPDATE_FULL\",\n                            \"id\": 26\n                        },\n                        {\n                            \"name\": \"MT_STP_UPDATE\",\n                            \"id\": 28\n                        },\n                        {\n                            \"name\": \"MT_STP_NOGROUP\",\n                            \"id\": 27\n                        },\n                        {\n                            \"name\": \"MT_SHUTDOWN\",\n                            \"id\": 45\n                        },\n                        {\n                            \"name\": \"MT_CONFIRM_SHUTDOWN\",\n                            \"id\": 50\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE0\",\n                            \"id\": 30\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE1\",\n                            \"id\": 31\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE2\",\n                            \"id\": 32\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE3\",\n                            \"id\": 33\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE4\",\n                            \"id\": 34\n                        },\n                        {\n                            \"name\": \"MT_ASCII\",\n                            \"id\": 100\n                        },\n                        {\n                            \"name\": \"MT_UNICODE\",\n                            \"id\": 101\n                        },\n                        {\n                            \"name\": \"MT_GCODE\",\n                            \"id\": 102\n                        },\n                        {\n                            \"name\": \"MT_PYTHON\",\n                            \"id\": 103\n                        },\n                        {\n                            \"name\": \"MT_PICKLE\",\n                            \"id\": 104\n                        },\n                        {\n                            \"name\": \"MT_TCL\",\n                            \"id\": 105\n                        },\n                        {\n                            \"name\": \"MT_XML\",\n                            \"id\": 106\n                        },\n                        {\n                            \"name\": \"MT_JSON\",\n                            \"id\": 107\n                        },\n                        {\n                            \"name\": \"MT_JPEG\",\n                            \"id\": 108\n                        },\n                        {\n                            \"name\": \"MT_PNG\",\n                            \"id\": 109\n                        },\n                        {\n                            \"name\": \"MT_TIFF\",\n                            \"id\": 110\n                        },\n                        {\n                            \"name\": \"MT_POSTSCRIPT\",\n                            \"id\": 111\n                        },\n                        {\n                            \"name\": \"MT_SVG\",\n                            \"id\": 112\n                        },\n                        {\n                            \"name\": \"MT_ZMQ_SUBSCRIBE\",\n                            \"id\": 150\n                        },\n                        {\n                            \"name\": \"MT_ZMQ_UNSUBSCRIBE\",\n                            \"id\": 151\n                        },\n                        {\n                            \"name\": \"MT_PING\",\n                            \"id\": 210\n                        },\n                        {\n                            \"name\": \"MT_PING_ACKNOWLEDGE\",\n                            \"id\": 215\n                        },\n                        {\n                            \"name\": \"MT_REJECT\",\n                            \"id\": 220\n                        },\n                        {\n                            \"name\": \"MT_DONE\",\n                            \"id\": 240\n                        },\n                        {\n                            \"name\": \"MT_SERVICE_REQUEST\",\n                            \"id\": 250\n                        },\n                        {\n                            \"name\": \"MT_SERVICE_ANNOUNCEMENT\",\n                            \"id\": 251\n                        },\n                        {\n                            \"name\": \"MT_SERVICE_PROBE\",\n                            \"id\": 252\n                        },\n                        {\n                            \"name\": \"MT_MESSAGEBUS_NO_DESTINATION\",\n                            \"id\": 255\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_BIND\",\n                            \"id\": 256\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_BIND_CONFIRM\",\n                            \"id\": 257\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_BIND_REJECT\",\n                            \"id\": 258\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_SET\",\n                            \"id\": 259\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_SET_REJECT\",\n                            \"id\": 260\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_ACK\",\n                            \"id\": 263\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_SET\",\n                            \"id\": 265\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_SET_REJECT\",\n                            \"id\": 266\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_GET\",\n                            \"id\": 267\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_GET_REJECT\",\n                            \"id\": 268\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_CREATE\",\n                            \"id\": 269\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_CREATE_REJECT\",\n                            \"id\": 270\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_DELETE\",\n                            \"id\": 271\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_DELETE_REJECT\",\n                            \"id\": 272\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_ACK\",\n                            \"id\": 273\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_ERROR\",\n                            \"id\": 274\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_DESCRIBE\",\n                            \"id\": 276\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_DESCRIPTION\",\n                            \"id\": 277\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_FULL_UPDATE\",\n                            \"id\": 288\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_INCREMENTAL_UPDATE\",\n                            \"id\": 289\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_ERROR\",\n                            \"id\": 290\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_BIND\",\n                            \"id\": 294\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_BIND_CONFIRM\",\n                            \"id\": 295\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_BIND_REJECT\",\n                            \"id\": 296\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_FULL_UPDATE\",\n                            \"id\": 297\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_INCREMENTAL_UPDATE\",\n                            \"id\": 298\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_ERROR\",\n                            \"id\": 299\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_EXIT\",\n                            \"id\": 300\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_PING\",\n                            \"id\": 301\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_LOADRT\",\n                            \"id\": 302\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_LOG\",\n                            \"id\": 303\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_UNLOADRT\",\n                            \"id\": 305\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_NEWINST\",\n                            \"id\": 306\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_NEWTHREAD\",\n                            \"id\": 307\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_DELTHREAD\",\n                            \"id\": 308\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_CALLFUNC\",\n                            \"id\": 309\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_REPLY\",\n                            \"id\": 310\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_DELINST\",\n                            \"id\": 311\n                        },\n                        {\n                            \"name\": \"MT_LIST_APPLICATIONS\",\n                            \"id\": 350\n                        },\n                        {\n                            \"name\": \"MT_DESCRIBE_APPLICATION\",\n                            \"id\": 351\n                        },\n                        {\n                            \"name\": \"MT_RETRIEVE_APPLICATION\",\n                            \"id\": 352\n                        },\n                        {\n                            \"name\": \"MT_APPLICATION_DETAIL\",\n                            \"id\": 353\n                        },\n                        {\n                            \"name\": \"MT_ERROR\",\n                            \"id\": 360\n                        },\n                        {\n                            \"name\": \"MT_FULL_UPDATE\",\n                            \"id\": 370\n                        },\n                        {\n                            \"name\": \"MT_INCREMENTAL_UPDATE\",\n                            \"id\": 371\n                        },\n                        {\n                            \"name\": \"MT_TASK_REPLY\",\n                            \"id\": 400\n                        },\n                        {\n                            \"name\": \"MT_TICKET_UPDATE\",\n                            \"id\": 401\n                        },\n                        {\n                            \"name\": \"MT_CREDIT_UPDATE\",\n                            \"id\": 450\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_LOWER\",\n                            \"id\": 1000\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_UPPER\",\n                            \"id\": 1100\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ABORT\",\n                            \"id\": 1001\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_AXIS_ABORT\",\n                            \"id\": 1002\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ENABLE\",\n                            \"id\": 1003\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_DISABLE\",\n                            \"id\": 1004\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ENABLE_AMPLIFIER\",\n                            \"id\": 1005\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_DISABLE_AMPLIFIER\",\n                            \"id\": 1006\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ENABLE_WATCHDOG\",\n                            \"id\": 1007\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_DISABLE_WATCHDOG\",\n                            \"id\": 1008\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ACTIVATE_JOINT\",\n                            \"id\": 1009\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_DEACTIVATE_JOINT\",\n                            \"id\": 1010\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_PAUSE\",\n                            \"id\": 1011\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_RESUME\",\n                            \"id\": 1012\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_STEP\",\n                            \"id\": 1013\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_FREE\",\n                            \"id\": 1014\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COORD\",\n                            \"id\": 1015\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_TELEOP\",\n                            \"id\": 1016\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_SCALE\",\n                            \"id\": 1017\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SS_ENABLE\",\n                            \"id\": 1018\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_FEED_SCALE\",\n                            \"id\": 1019\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_FS_ENABLE\",\n                            \"id\": 1020\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_FH_ENABLE\",\n                            \"id\": 1021\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_AF_ENABLE\",\n                            \"id\": 1022\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_OVERRIDE_LIMITS\",\n                            \"id\": 1023\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_HOME\",\n                            \"id\": 1024\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_UNHOME\",\n                            \"id\": 1025\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_JOG_CONT\",\n                            \"id\": 1026\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_JOG_INCR\",\n                            \"id\": 1027\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_JOG_ABS\",\n                            \"id\": 1028\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_LINE\",\n                            \"id\": 1029\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_CIRCLE\",\n                            \"id\": 1030\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_TELEOP_VECTOR\",\n                            \"id\": 1031\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_CLEAR_PROBE_FLAGS\",\n                            \"id\": 1032\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_PROBE\",\n                            \"id\": 1033\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_RIGID_TAP\",\n                            \"id\": 1034\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_POSITION_LIMITS\",\n                            \"id\": 1035\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_BACKLASH\",\n                            \"id\": 1036\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_MIN_FERROR\",\n                            \"id\": 1037\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_MAX_FERROR\",\n                            \"id\": 1038\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_VEL\",\n                            \"id\": 1039\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_VEL_LIMIT\",\n                            \"id\": 1040\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_JOINT_VEL_LIMIT\",\n                            \"id\": 1041\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_JOINT_ACC_LIMIT\",\n                            \"id\": 1042\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_ACC\",\n                            \"id\": 1043\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_TERM_COND\",\n                            \"id\": 1044\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_NUM_AXES\",\n                            \"id\": 1045\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_WORLD_HOME\",\n                            \"id\": 1046\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_HOMING_PARAMS\",\n                            \"id\": 1047\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_DEBUG\",\n                            \"id\": 1048\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_DOUT\",\n                            \"id\": 1049\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_AOUT\",\n                            \"id\": 1050\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_SPINDLESYNC\",\n                            \"id\": 1051\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_ON\",\n                            \"id\": 1052\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_OFF\",\n                            \"id\": 1053\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_INCREASE\",\n                            \"id\": 1054\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_DECREASE\",\n                            \"id\": 1055\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_BRAKE_ENGAGE\",\n                            \"id\": 1056\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_BRAKE_RELEASE\",\n                            \"id\": 1057\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_MOTOR_OFFSET\",\n                            \"id\": 1058\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_JOINT_COMP\",\n                            \"id\": 1059\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_OFFSET\",\n                            \"id\": 1060\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_OK\",\n                            \"id\": 1061\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_UNKNOWN_COMMAND\",\n                            \"id\": 1062\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_INVALID_COMMAND\",\n                            \"id\": 1063\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_INVALID_PARAMS\",\n                            \"id\": 1064\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_BAD_EXEC\",\n                            \"id\": 1065\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_DISABLED\",\n                            \"id\": 1066\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_FREE\",\n                            \"id\": 1067\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_TELEOP\",\n                            \"id\": 1068\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_COORD\",\n                            \"id\": 1069\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_JOINT_FLAG\",\n                            \"id\": 1070\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_FLAG\",\n                            \"id\": 1071\n                        },\n                        {\n                            \"name\": \"MT_PRU_FIRMWARE\",\n                            \"id\": 2048\n                        },\n                        {\n                            \"name\": \"MT_MESA_5I20_FIRMWARE\",\n                            \"id\": 3000\n                        },\n                        {\n                            \"name\": \"MT_BLOB\",\n                            \"id\": 4000\n                        },\n                        {\n                            \"name\": \"MT_TEST1\",\n                            \"id\": 5001\n                        },\n                        {\n                            \"name\": \"MT_TEST2\",\n                            \"id\": 5002\n                        },\n                        {\n                            \"name\": \"MT_TEST3\",\n                            \"id\": 5003\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_LOWER\",\n                            \"id\": 10000\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_UPPER\",\n                            \"id\": 13000\n                        },\n                        {\n                            \"name\": \"MT_EMC_OPERATOR_ERROR\",\n                            \"id\": 10011\n                        },\n                        {\n                            \"name\": \"MT_EMC_OPERATOR_TEXT\",\n                            \"id\": 10012\n                        },\n                        {\n                            \"name\": \"MT_EMC_OPERATOR_DISPLAY\",\n                            \"id\": 10013\n                        },\n                        {\n                            \"name\": \"MT_EMC_NULL\",\n                            \"id\": 10021\n                        },\n                        {\n                            \"name\": \"MT_EMC_SET_DEBUG\",\n                            \"id\": 10022\n                        },\n                        {\n                            \"name\": \"MT_EMC_SYSTEM_CMD\",\n                            \"id\": 10030\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_AXIS\",\n                            \"id\": 10101\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_UNITS\",\n                            \"id\": 10102\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_MIN_POSITION_LIMIT\",\n                            \"id\": 10107\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_MAX_POSITION_LIMIT\",\n                            \"id\": 10108\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_START_CHANGE\",\n                            \"id\": 1110\n                        },\n                        {\n                            \"name\": \"MT_EMC_EXEC_PLUGIN_CALL\",\n                            \"id\": 1112\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_PLUGIN_CALL\",\n                            \"id\": 1113\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_FERROR\",\n                            \"id\": 10111\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_HOMING_PARAMS\",\n                            \"id\": 10112\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_MIN_FERROR\",\n                            \"id\": 10115\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_MAX_VELOCITY\",\n                            \"id\": 10116\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_INIT\",\n                            \"id\": 10118\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_HALT\",\n                            \"id\": 10119\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_ABORT\",\n                            \"id\": 10120\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_ENABLE\",\n                            \"id\": 10121\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_DISABLE\",\n                            \"id\": 10122\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_HOME\",\n                            \"id\": 10123\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_UNHOME\",\n                            \"id\": 10135\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_JOG\",\n                            \"id\": 10124\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_INCR_JOG\",\n                            \"id\": 10125\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_ABS_JOG\",\n                            \"id\": 10126\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_ACTIVATE\",\n                            \"id\": 10127\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_DEACTIVATE\",\n                            \"id\": 10128\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_OVERRIDE_LIMITS\",\n                            \"id\": 10129\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_LOAD_COMP\",\n                            \"id\": 10131\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_BACKLASH\",\n                            \"id\": 10134\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_STAT\",\n                            \"id\": 10199\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_AXES\",\n                            \"id\": 10201\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_UNITS\",\n                            \"id\": 10202\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_CYCLE_TIME\",\n                            \"id\": 10203\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_MODE\",\n                            \"id\": 10204\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_VELOCITY\",\n                            \"id\": 10205\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_ACCELERATION\",\n                            \"id\": 10206\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_MAX_VELOCITY\",\n                            \"id\": 10207\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_MAX_ACCELERATION\",\n                            \"id\": 10208\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_SCALE\",\n                            \"id\": 10209\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_MOTION_ID\",\n                            \"id\": 10210\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_INIT\",\n                            \"id\": 10211\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_HALT\",\n                            \"id\": 10212\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_ENABLE\",\n                            \"id\": 10213\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_DISABLE\",\n                            \"id\": 10214\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_ABORT\",\n                            \"id\": 10215\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_PAUSE\",\n                            \"id\": 10216\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_STEP\",\n                            \"id\": 10217\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_RESUME\",\n                            \"id\": 10218\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_DELAY\",\n                            \"id\": 10219\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_LINEAR_MOVE\",\n                            \"id\": 10220\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_CIRCULAR_MOVE\",\n                            \"id\": 10221\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_TERM_COND\",\n                            \"id\": 10222\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_OFFSET\",\n                            \"id\": 10223\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_G5X\",\n                            \"id\": 10224\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_HOME\",\n                            \"id\": 10225\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_ROTATION\",\n                            \"id\": 10226\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_G92\",\n                            \"id\": 10227\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_CLEAR_PROBE_TRIPPED_FLAG\",\n                            \"id\": 10228\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_PROBE\",\n                            \"id\": 10229\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_TELEOP_ENABLE\",\n                            \"id\": 10230\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_TELEOP_VECTOR\",\n                            \"id\": 10231\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_SPINDLESYNC\",\n                            \"id\": 10232\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_SPINDLE_SCALE\",\n                            \"id\": 10233\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_FO_ENABLE\",\n                            \"id\": 10234\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_SO_ENABLE\",\n                            \"id\": 10235\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_FH_ENABLE\",\n                            \"id\": 10236\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_RIGID_TAP\",\n                            \"id\": 10237\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_STAT\",\n                            \"id\": 10299\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_INIT\",\n                            \"id\": 10301\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_HALT\",\n                            \"id\": 10302\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_ABORT\",\n                            \"id\": 10303\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_SET_AOUT\",\n                            \"id\": 10304\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_SET_DOUT\",\n                            \"id\": 10305\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_ADAPTIVE\",\n                            \"id\": 10306\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_ORIENT\",\n                            \"id\": 10317\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_WAIT_ORIENT_COMPLETE\",\n                            \"id\": 10318\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_STAT\",\n                            \"id\": 10399\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_INIT\",\n                            \"id\": 10501\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_HALT\",\n                            \"id\": 10502\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_ABORT\",\n                            \"id\": 10503\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_SET_MODE\",\n                            \"id\": 10504\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_SET_STATE\",\n                            \"id\": 10505\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_OPEN\",\n                            \"id\": 10506\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_RUN\",\n                            \"id\": 10507\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_READ\",\n                            \"id\": 10508\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_EXECUTE\",\n                            \"id\": 10509\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_PAUSE\",\n                            \"id\": 10510\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_STEP\",\n                            \"id\": 10511\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_RESUME\",\n                            \"id\": 10512\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_END\",\n                            \"id\": 10513\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_CLOSE\",\n                            \"id\": 10514\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_INIT\",\n                            \"id\": 10515\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_SYNCH\",\n                            \"id\": 10516\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_SET_OPTIONAL_STOP\",\n                            \"id\": 10517\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_SET_BLOCK_DELETE\",\n                            \"id\": 10518\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_OPTIONAL_STOP\",\n                            \"id\": 10519\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_RESET\",\n                            \"id\": 10520\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_REPLY\",\n                            \"id\": 10530\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_STAT\",\n                            \"id\": 10599\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_INIT\",\n                            \"id\": 11101\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_HALT\",\n                            \"id\": 11102\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_ABORT\",\n                            \"id\": 11103\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_PREPARE\",\n                            \"id\": 11104\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_LOAD\",\n                            \"id\": 11105\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_UNLOAD\",\n                            \"id\": 11106\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_LOAD_TOOL_TABLE\",\n                            \"id\": 11107\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_SET_OFFSET\",\n                            \"id\": 11108\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_SET_NUMBER\",\n                            \"id\": 11109\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_UPDATE_TOOL_TABLE\",\n                            \"id\": 11110\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_STAT\",\n                            \"id\": 11199\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_ESTOP_ON\",\n                            \"id\": 11206\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_ESTOP_OFF\",\n                            \"id\": 11207\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_ESTOP_RESET\",\n                            \"id\": 11208\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_INPUT_WAIT\",\n                            \"id\": 11209\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_STAT\",\n                            \"id\": 11299\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_ON\",\n                            \"id\": 11304\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_OFF\",\n                            \"id\": 11305\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_INCREASE\",\n                            \"id\": 11309\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_DECREASE\",\n                            \"id\": 11310\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_CONSTANT\",\n                            \"id\": 11311\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_BRAKE_RELEASE\",\n                            \"id\": 11312\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_BRAKE_ENGAGE\",\n                            \"id\": 11313\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_SPEED\",\n                            \"id\": 11316\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_STAT\",\n                            \"id\": 11399\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_MIST_ON\",\n                            \"id\": 11404\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_MIST_OFF\",\n                            \"id\": 11405\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_FLOOD_ON\",\n                            \"id\": 11406\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_FLOOD_OFF\",\n                            \"id\": 11407\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_STAT\",\n                            \"id\": 11499\n                        },\n                        {\n                            \"name\": \"MT_EMC_LUBE_ON\",\n                            \"id\": 11504\n                        },\n                        {\n                            \"name\": \"MT_EMC_LUBE_OFF\",\n                            \"id\": 11505\n                        },\n                        {\n                            \"name\": \"MT_EMC_LUBE_STAT\",\n                            \"id\": 11599\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_INIT\",\n                            \"id\": 11601\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_HALT\",\n                            \"id\": 11602\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_ABORT\",\n                            \"id\": 11603\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_SET_CYCLE_TIME\",\n                            \"id\": 11604\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_STAT\",\n                            \"id\": 11699\n                        },\n                        {\n                            \"name\": \"MT_EMC_INIT\",\n                            \"id\": 11901\n                        },\n                        {\n                            \"name\": \"MT_EMC_HALT\",\n                            \"id\": 11902\n                        },\n                        {\n                            \"name\": \"MT_EMC_ABORT\",\n                            \"id\": 11903\n                        },\n                        {\n                            \"name\": \"MT_EMC_STAT\",\n                            \"id\": 11999\n                        },\n                        {\n                            \"name\": \"MT_EMCSTAT_FULL_UPDATE\",\n                            \"id\": 12500\n                        },\n                        {\n                            \"name\": \"MT_EMCSTAT_INCREMENTAL_UPDATE\",\n                            \"id\": 12501\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_ERROR\",\n                            \"id\": 12510\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_TEXT\",\n                            \"id\": 12511\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_DISPLAY\",\n                            \"id\": 12512\n                        },\n                        {\n                            \"name\": \"MT_EMCCMD_EXECUTED\",\n                            \"id\": 12520\n                        },\n                        {\n                            \"name\": \"MT_EMCCMD_COMPLETED\",\n                            \"id\": 12521\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_FULL_UPDATE\",\n                            \"id\": 12600\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_INCREMENTAL_UPDATE\",\n                            \"id\": 12601\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_ERROR\",\n                            \"id\": 12602\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_START\",\n                            \"id\": 12610\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_TERMINATE\",\n                            \"id\": 12611\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_KILL\",\n                            \"id\": 12612\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_WRITE_STDIN\",\n                            \"id\": 12613\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_CALL\",\n                            \"id\": 12614\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_SHUTDOWN\",\n                            \"id\": 12615\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"OriginIndex\",\n                    \"values\": [\n                        {\n                            \"name\": \"ORIGIN_UNKNOWN\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"ORIGIN_G54\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"ORIGIN_G55\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"ORIGIN_G56\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"ORIGIN_G57\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"ORIGIN_G58\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"ORIGIN_G59\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"ORIGIN_G59_1\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"ORIGIN_G59_2\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"ORIGIN_G59_3\",\n                            \"id\": 9\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"TermConditionType\",\n                    \"values\": [\n                        {\n                            \"name\": \"_EMC_TRAJ_TERM_COND_STOP\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"_EMC_TRAJ_TERM_COND_BLEND\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"CanonDirection\",\n                    \"values\": [\n                        {\n                            \"name\": \"_CANON_STOPPED\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"_CANON_CLOCKWISE\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"_CANON_COUNTERCLOCKWISE\",\n                            \"id\": 3\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"InputType\",\n                    \"values\": [\n                        {\n                            \"name\": \"_ANALOG_INPUT\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"_DIGITAL_INPUT\",\n                            \"id\": 1\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"WaitType\",\n                    \"values\": [\n                        {\n                            \"name\": \"IMMEDIATE\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"RISE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"FALL\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"BE_HIGH\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"BE_LOW\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"InterpreterStateType\",\n                    \"values\": [\n                        {\n                            \"name\": \"INTERP_IDLE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"INTERP_RUNNING\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"INTERP_SYNC_WAIT\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"INTERP_PAUSED\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"INTERP_QUEUE_WAIT\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"INTERP_ABORT_WAIT\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"INTERP_STATE_UNSET\",\n                            \"id\": 99\n                        }\n                    ]\n                }\n            ]\n        }\n    ],\n    \"enums\": [\n        {\n            \"name\": \"FieldType\",\n            \"values\": [\n                {\n                    \"name\": \"FT_DEFAULT\",\n                    \"id\": 0\n                },\n                {\n                    \"name\": \"FT_CALLBACK\",\n                    \"id\": 1\n                },\n                {\n                    \"name\": \"FT_POINTER\",\n                    \"id\": 4\n                },\n                {\n                    \"name\": \"FT_STATIC\",\n                    \"id\": 2\n                },\n                {\n                    \"name\": \"FT_IGNORE\",\n                    \"id\": 3\n                }\n            ]\n        },\n        {\n            \"name\": \"IntSize\",\n            \"values\": [\n                {\n                    \"name\": \"IS_DEFAULT\",\n                    \"id\": 0\n                },\n                {\n                    \"name\": \"IS_8\",\n                    \"id\": 8\n                },\n                {\n                    \"name\": \"IS_16\",\n                    \"id\": 16\n                },\n                {\n                    \"name\": \"IS_32\",\n                    \"id\": 32\n                },\n                {\n                    \"name\": \"IS_64\",\n                    \"id\": 64\n                }\n            ]\n        }\n    ]\n}).build();","module.exports = require(\"protobufjs\").newBuilder({})['import']({\n    \"package\": null,\n    \"options\": {\n        \"java_package\": \"fi.kapsi.koti.jpa.nanopb\"\n    },\n    \"messages\": [\n        {\n            \"name\": \"NanoPBOptions\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"max_size\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"max_count\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"IntSize\",\n                    \"name\": \"int_size\",\n                    \"id\": 7,\n                    \"options\": {\n                        \"default\": \"IS_DEFAULT\"\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"FieldType\",\n                    \"name\": \"type\",\n                    \"id\": 3,\n                    \"options\": {\n                        \"default\": \"FT_DEFAULT\"\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"long_names\",\n                    \"id\": 4,\n                    \"options\": {\n                        \"default\": true\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"packed_struct\",\n                    \"id\": 5,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"skip_message\",\n                    \"id\": 6,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"no_unions\",\n                    \"id\": 8,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"uint32\",\n                    \"name\": \"msgid\",\n                    \"id\": 9\n                }\n            ]\n        },\n        {\n            \"name\": \"machinetalk\",\n            \"fields\": [],\n            \"enums\": [\n                {\n                    \"name\": \"ValueType\",\n                    \"values\": [\n                        {\n                            \"name\": \"HAL_BIT\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"HAL_FLOAT\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"HAL_S32\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"HAL_U32\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"STRING\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"BYTES\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"INT32\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"UINT32\",\n                            \"id\": 30\n                        },\n                        {\n                            \"name\": \"INT64\",\n                            \"id\": 40\n                        },\n                        {\n                            \"name\": \"UINT64\",\n                            \"id\": 50\n                        },\n                        {\n                            \"name\": \"DOUBLE\",\n                            \"id\": 60\n                        },\n                        {\n                            \"name\": \"BOOL\",\n                            \"id\": 80\n                        },\n                        {\n                            \"name\": \"CARTESIAN\",\n                            \"id\": 100\n                        },\n                        {\n                            \"name\": \"LEGACY_CARTESIAN\",\n                            \"id\": 110\n                        },\n                        {\n                            \"name\": \"POSE\",\n                            \"id\": 120\n                        },\n                        {\n                            \"name\": \"LEGACY_POSE\",\n                            \"id\": 130\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"HalPinDirection\",\n                    \"values\": [\n                        {\n                            \"name\": \"HAL_IN\",\n                            \"id\": 16\n                        },\n                        {\n                            \"name\": \"HAL_OUT\",\n                            \"id\": 32\n                        },\n                        {\n                            \"name\": \"HAL_IO\",\n                            \"id\": 48\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"HalParamDirection\",\n                    \"values\": [\n                        {\n                            \"name\": \"HAL_RO\",\n                            \"id\": 64\n                        },\n                        {\n                            \"name\": \"HAL_RW\",\n                            \"id\": 192\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ObjectType\",\n                    \"values\": [\n                        {\n                            \"name\": \"HAL_PIN\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"HAL_SIGNAL\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"HAL_PARAM\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"HAL_THREAD\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"HAL_FUNCT\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"HAL_ALIAS\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"HAL_COMP_RT\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"HAL_COMP_USER\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"HAL_COMP_REMOTE\",\n                            \"id\": 9\n                        },\n                        {\n                            \"name\": \"HAL_RING\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"HAL_GROUP\",\n                            \"id\": 11\n                        },\n                        {\n                            \"name\": \"HAL_MEMBER_SIGNAL\",\n                            \"id\": 12\n                        },\n                        {\n                            \"name\": \"HAL_MEMBER_GROUP\",\n                            \"id\": 13\n                        },\n                        {\n                            \"name\": \"HAL_MEMBER_PIN\",\n                            \"id\": 14\n                        },\n                        {\n                            \"name\": \"HAL_MEMBER_PARAM\",\n                            \"id\": 15\n                        },\n                        {\n                            \"name\": \"RING_RECORD\",\n                            \"id\": 16\n                        },\n                        {\n                            \"name\": \"RING_STREAM\",\n                            \"id\": 17\n                        },\n                        {\n                            \"name\": \"HAL_VTABLE\",\n                            \"id\": 18\n                        },\n                        {\n                            \"name\": \"HAL_INST\",\n                            \"id\": 19\n                        },\n                        {\n                            \"name\": \"RING_MULTIFRAME\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"VALUE\",\n                            \"id\": 120\n                        },\n                        {\n                            \"name\": \"INSTANCE\",\n                            \"id\": 121\n                        },\n                        {\n                            \"name\": \"ORIGINATOR\",\n                            \"id\": 122\n                        },\n                        {\n                            \"name\": \"NAMED_VALUE\",\n                            \"id\": 125\n                        },\n                        {\n                            \"name\": \"OT_ERROR\",\n                            \"id\": 130\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"RCS_STATUS\",\n                    \"values\": [\n                        {\n                            \"name\": \"UNINITIALIZED_STATUS\",\n                            \"id\": -1\n                        },\n                        {\n                            \"name\": \"RCS_DONE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"RCS_EXEC\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"RCS_ERROR\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"RCS_RECEIVED\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"MsgOrigin\",\n                    \"values\": [\n                        {\n                            \"name\": \"MSG_KERNEL\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"MSG_RTUSER\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"MSG_ULAPI\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"MsgLevel\",\n                    \"values\": [\n                        {\n                            \"name\": \"RTAPI_MSG_NONE\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_ERR\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_WARN\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_INFO\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_DBG\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_ALL\",\n                            \"id\": 5\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"OriginDetail\",\n                    \"values\": [\n                        {\n                            \"name\": \"UNIX_SIGNAL\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"INSTANCE_SHUTDOWN\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"ZMQ_SOCKET\",\n                            \"id\": 70\n                        },\n                        {\n                            \"name\": \"NML_LAYER\",\n                            \"id\": 80\n                        },\n                        {\n                            \"name\": \"RCS_LAYER\",\n                            \"id\": 90\n                        },\n                        {\n                            \"name\": \"CMS_LAYER\",\n                            \"id\": 100\n                        },\n                        {\n                            \"name\": \"IP_LAYER\",\n                            \"id\": 110\n                        },\n                        {\n                            \"name\": \"TCP_LAYER\",\n                            \"id\": 120\n                        },\n                        {\n                            \"name\": \"PGM_LAYER\",\n                            \"id\": 130\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"OriginType\",\n                    \"values\": [\n                        {\n                            \"name\": \"PROCESS\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"USER_THREAD\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"RT_THREAD\",\n                            \"id\": 30\n                        },\n                        {\n                            \"name\": \"COMPONENT\",\n                            \"id\": 40\n                        },\n                        {\n                            \"name\": \"THREAD_FUNCTION\",\n                            \"id\": 50\n                        },\n                        {\n                            \"name\": \"COMPONENT_INIT\",\n                            \"id\": 60\n                        },\n                        {\n                            \"name\": \"COMPONENT_EXIT\",\n                            \"id\": 70\n                        },\n                        {\n                            \"name\": \"GROUP\",\n                            \"id\": 80\n                        },\n                        {\n                            \"name\": \"PIN\",\n                            \"id\": 90\n                        },\n                        {\n                            \"name\": \"SIGNAL\",\n                            \"id\": 100\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Severity\",\n                    \"values\": [\n                        {\n                            \"name\": \"S_INFORMATIONAL\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"S_WARNING\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"S_FAIL\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"StatusType\",\n                    \"values\": [\n                        {\n                            \"name\": \"ENQUEUED\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"PROCESSING\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"COMPLETE\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"FAILED\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ReplyType\",\n                    \"values\": [\n                        {\n                            \"name\": \"NONE\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"ON_RECEPTION\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"ON_QUEUED\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"ON_COMPLETION\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"ALL_STEPS\",\n                            \"id\": 255\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ServiceType\",\n                    \"values\": [\n                        {\n                            \"name\": \"ST_LOGGING\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"ST_CONFIG\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"ST_REDIS\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"ST_HTTP\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"ST_HTTPS\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"ST_WEBSOCKET\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"ST_WEBSOCKETS\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"ST_RTAPI_COMMAND\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"ST_STP_HALGROUP\",\n                            \"id\": 9\n                        },\n                        {\n                            \"name\": \"ST_STP_HALRCOMP\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"ST_STP_INTERP\",\n                            \"id\": 11\n                        },\n                        {\n                            \"name\": \"ST_STP_TASK\",\n                            \"id\": 12\n                        },\n                        {\n                            \"name\": \"ST_HAL_RCOMMAND\",\n                            \"id\": 13\n                        },\n                        {\n                            \"name\": \"ST_TASK_COMMAND\",\n                            \"id\": 14\n                        },\n                        {\n                            \"name\": \"ST_INTERP_COMMAND\",\n                            \"id\": 15\n                        },\n                        {\n                            \"name\": \"ST_MESSAGEBUS_COMMAND\",\n                            \"id\": 16\n                        },\n                        {\n                            \"name\": \"ST_MESSAGEBUS_RESPONSE\",\n                            \"id\": 17\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ServiceAPI\",\n                    \"values\": [\n                        {\n                            \"name\": \"SA_ZMQ_PROTOBUF\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"SA_WS_JSON\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ContainerType\",\n                    \"values\": [\n                        {\n                            \"name\": \"MT_RTMESSAGE\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"MT_MOTCMD\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"MT_MOTSTATUS\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"MT_LEGACY_MOTCMD\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"MT_LEGACY_MOTSTATUS\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"MT_WOU\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"MT_HALUPDATE\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_MESSAGE\",\n                            \"id\": 9\n                        },\n                        {\n                            \"name\": \"MT_LOG_MESSAGE\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"MT_PREVIEW\",\n                            \"id\": 11\n                        },\n                        {\n                            \"name\": \"MT_PROGRESS\",\n                            \"id\": 12\n                        },\n                        {\n                            \"name\": \"MT_INTERP_STAT\",\n                            \"id\": 13\n                        },\n                        {\n                            \"name\": \"MT_SYSLOG\",\n                            \"id\": 18\n                        },\n                        {\n                            \"name\": \"MT_LEGACY_NML\",\n                            \"id\": 19\n                        },\n                        {\n                            \"name\": \"MT_LEGACY_MOTCONFIG\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"MT_STP_UPDATE_FULL\",\n                            \"id\": 26\n                        },\n                        {\n                            \"name\": \"MT_STP_UPDATE\",\n                            \"id\": 28\n                        },\n                        {\n                            \"name\": \"MT_STP_NOGROUP\",\n                            \"id\": 27\n                        },\n                        {\n                            \"name\": \"MT_SHUTDOWN\",\n                            \"id\": 45\n                        },\n                        {\n                            \"name\": \"MT_CONFIRM_SHUTDOWN\",\n                            \"id\": 50\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE0\",\n                            \"id\": 30\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE1\",\n                            \"id\": 31\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE2\",\n                            \"id\": 32\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE3\",\n                            \"id\": 33\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE4\",\n                            \"id\": 34\n                        },\n                        {\n                            \"name\": \"MT_ASCII\",\n                            \"id\": 100\n                        },\n                        {\n                            \"name\": \"MT_UNICODE\",\n                            \"id\": 101\n                        },\n                        {\n                            \"name\": \"MT_GCODE\",\n                            \"id\": 102\n                        },\n                        {\n                            \"name\": \"MT_PYTHON\",\n                            \"id\": 103\n                        },\n                        {\n                            \"name\": \"MT_PICKLE\",\n                            \"id\": 104\n                        },\n                        {\n                            \"name\": \"MT_TCL\",\n                            \"id\": 105\n                        },\n                        {\n                            \"name\": \"MT_XML\",\n                            \"id\": 106\n                        },\n                        {\n                            \"name\": \"MT_JSON\",\n                            \"id\": 107\n                        },\n                        {\n                            \"name\": \"MT_JPEG\",\n                            \"id\": 108\n                        },\n                        {\n                            \"name\": \"MT_PNG\",\n                            \"id\": 109\n                        },\n                        {\n                            \"name\": \"MT_TIFF\",\n                            \"id\": 110\n                        },\n                        {\n                            \"name\": \"MT_POSTSCRIPT\",\n                            \"id\": 111\n                        },\n                        {\n                            \"name\": \"MT_SVG\",\n                            \"id\": 112\n                        },\n                        {\n                            \"name\": \"MT_ZMQ_SUBSCRIBE\",\n                            \"id\": 150\n                        },\n                        {\n                            \"name\": \"MT_ZMQ_UNSUBSCRIBE\",\n                            \"id\": 151\n                        },\n                        {\n                            \"name\": \"MT_PING\",\n                            \"id\": 210\n                        },\n                        {\n                            \"name\": \"MT_PING_ACKNOWLEDGE\",\n                            \"id\": 215\n                        },\n                        {\n                            \"name\": \"MT_REJECT\",\n                            \"id\": 220\n                        },\n                        {\n                            \"name\": \"MT_DONE\",\n                            \"id\": 240\n                        },\n                        {\n                            \"name\": \"MT_SERVICE_REQUEST\",\n                            \"id\": 250\n                        },\n                        {\n                            \"name\": \"MT_SERVICE_ANNOUNCEMENT\",\n                            \"id\": 251\n                        },\n                        {\n                            \"name\": \"MT_SERVICE_PROBE\",\n                            \"id\": 252\n                        },\n                        {\n                            \"name\": \"MT_MESSAGEBUS_NO_DESTINATION\",\n                            \"id\": 255\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_BIND\",\n                            \"id\": 256\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_BIND_CONFIRM\",\n                            \"id\": 257\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_BIND_REJECT\",\n                            \"id\": 258\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_SET\",\n                            \"id\": 259\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_SET_REJECT\",\n                            \"id\": 260\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_ACK\",\n                            \"id\": 263\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_SET\",\n                            \"id\": 265\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_SET_REJECT\",\n                            \"id\": 266\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_GET\",\n                            \"id\": 267\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_GET_REJECT\",\n                            \"id\": 268\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_CREATE\",\n                            \"id\": 269\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_CREATE_REJECT\",\n                            \"id\": 270\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_DELETE\",\n                            \"id\": 271\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_DELETE_REJECT\",\n                            \"id\": 272\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_ACK\",\n                            \"id\": 273\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_ERROR\",\n                            \"id\": 274\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_DESCRIBE\",\n                            \"id\": 276\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_DESCRIPTION\",\n                            \"id\": 277\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_FULL_UPDATE\",\n                            \"id\": 288\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_INCREMENTAL_UPDATE\",\n                            \"id\": 289\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_ERROR\",\n                            \"id\": 290\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_BIND\",\n                            \"id\": 294\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_BIND_CONFIRM\",\n                            \"id\": 295\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_BIND_REJECT\",\n                            \"id\": 296\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_FULL_UPDATE\",\n                            \"id\": 297\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_INCREMENTAL_UPDATE\",\n                            \"id\": 298\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_ERROR\",\n                            \"id\": 299\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_EXIT\",\n                            \"id\": 300\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_PING\",\n                            \"id\": 301\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_LOADRT\",\n                            \"id\": 302\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_LOG\",\n                            \"id\": 303\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_UNLOADRT\",\n                            \"id\": 305\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_NEWINST\",\n                            \"id\": 306\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_NEWTHREAD\",\n                            \"id\": 307\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_DELTHREAD\",\n                            \"id\": 308\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_CALLFUNC\",\n                            \"id\": 309\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_REPLY\",\n                            \"id\": 310\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_DELINST\",\n                            \"id\": 311\n                        },\n                        {\n                            \"name\": \"MT_LIST_APPLICATIONS\",\n                            \"id\": 350\n                        },\n                        {\n                            \"name\": \"MT_DESCRIBE_APPLICATION\",\n                            \"id\": 351\n                        },\n                        {\n                            \"name\": \"MT_RETRIEVE_APPLICATION\",\n                            \"id\": 352\n                        },\n                        {\n                            \"name\": \"MT_APPLICATION_DETAIL\",\n                            \"id\": 353\n                        },\n                        {\n                            \"name\": \"MT_ERROR\",\n                            \"id\": 360\n                        },\n                        {\n                            \"name\": \"MT_FULL_UPDATE\",\n                            \"id\": 370\n                        },\n                        {\n                            \"name\": \"MT_INCREMENTAL_UPDATE\",\n                            \"id\": 371\n                        },\n                        {\n                            \"name\": \"MT_TASK_REPLY\",\n                            \"id\": 400\n                        },\n                        {\n                            \"name\": \"MT_TICKET_UPDATE\",\n                            \"id\": 401\n                        },\n                        {\n                            \"name\": \"MT_CREDIT_UPDATE\",\n                            \"id\": 450\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_LOWER\",\n                            \"id\": 1000\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_UPPER\",\n                            \"id\": 1100\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ABORT\",\n                            \"id\": 1001\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_AXIS_ABORT\",\n                            \"id\": 1002\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ENABLE\",\n                            \"id\": 1003\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_DISABLE\",\n                            \"id\": 1004\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ENABLE_AMPLIFIER\",\n                            \"id\": 1005\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_DISABLE_AMPLIFIER\",\n                            \"id\": 1006\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ENABLE_WATCHDOG\",\n                            \"id\": 1007\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_DISABLE_WATCHDOG\",\n                            \"id\": 1008\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ACTIVATE_JOINT\",\n                            \"id\": 1009\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_DEACTIVATE_JOINT\",\n                            \"id\": 1010\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_PAUSE\",\n                            \"id\": 1011\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_RESUME\",\n                            \"id\": 1012\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_STEP\",\n                            \"id\": 1013\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_FREE\",\n                            \"id\": 1014\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COORD\",\n                            \"id\": 1015\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_TELEOP\",\n                            \"id\": 1016\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_SCALE\",\n                            \"id\": 1017\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SS_ENABLE\",\n                            \"id\": 1018\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_FEED_SCALE\",\n                            \"id\": 1019\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_FS_ENABLE\",\n                            \"id\": 1020\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_FH_ENABLE\",\n                            \"id\": 1021\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_AF_ENABLE\",\n                            \"id\": 1022\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_OVERRIDE_LIMITS\",\n                            \"id\": 1023\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_HOME\",\n                            \"id\": 1024\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_UNHOME\",\n                            \"id\": 1025\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_JOG_CONT\",\n                            \"id\": 1026\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_JOG_INCR\",\n                            \"id\": 1027\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_JOG_ABS\",\n                            \"id\": 1028\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_LINE\",\n                            \"id\": 1029\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_CIRCLE\",\n                            \"id\": 1030\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_TELEOP_VECTOR\",\n                            \"id\": 1031\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_CLEAR_PROBE_FLAGS\",\n                            \"id\": 1032\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_PROBE\",\n                            \"id\": 1033\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_RIGID_TAP\",\n                            \"id\": 1034\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_POSITION_LIMITS\",\n                            \"id\": 1035\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_BACKLASH\",\n                            \"id\": 1036\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_MIN_FERROR\",\n                            \"id\": 1037\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_MAX_FERROR\",\n                            \"id\": 1038\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_VEL\",\n                            \"id\": 1039\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_VEL_LIMIT\",\n                            \"id\": 1040\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_JOINT_VEL_LIMIT\",\n                            \"id\": 1041\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_JOINT_ACC_LIMIT\",\n                            \"id\": 1042\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_ACC\",\n                            \"id\": 1043\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_TERM_COND\",\n                            \"id\": 1044\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_NUM_AXES\",\n                            \"id\": 1045\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_WORLD_HOME\",\n                            \"id\": 1046\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_HOMING_PARAMS\",\n                            \"id\": 1047\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_DEBUG\",\n                            \"id\": 1048\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_DOUT\",\n                            \"id\": 1049\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_AOUT\",\n                            \"id\": 1050\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_SPINDLESYNC\",\n                            \"id\": 1051\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_ON\",\n                            \"id\": 1052\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_OFF\",\n                            \"id\": 1053\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_INCREASE\",\n                            \"id\": 1054\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_DECREASE\",\n                            \"id\": 1055\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_BRAKE_ENGAGE\",\n                            \"id\": 1056\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_BRAKE_RELEASE\",\n                            \"id\": 1057\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_MOTOR_OFFSET\",\n                            \"id\": 1058\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_JOINT_COMP\",\n                            \"id\": 1059\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_OFFSET\",\n                            \"id\": 1060\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_OK\",\n                            \"id\": 1061\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_UNKNOWN_COMMAND\",\n                            \"id\": 1062\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_INVALID_COMMAND\",\n                            \"id\": 1063\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_INVALID_PARAMS\",\n                            \"id\": 1064\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_BAD_EXEC\",\n                            \"id\": 1065\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_DISABLED\",\n                            \"id\": 1066\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_FREE\",\n                            \"id\": 1067\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_TELEOP\",\n                            \"id\": 1068\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_COORD\",\n                            \"id\": 1069\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_JOINT_FLAG\",\n                            \"id\": 1070\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_FLAG\",\n                            \"id\": 1071\n                        },\n                        {\n                            \"name\": \"MT_PRU_FIRMWARE\",\n                            \"id\": 2048\n                        },\n                        {\n                            \"name\": \"MT_MESA_5I20_FIRMWARE\",\n                            \"id\": 3000\n                        },\n                        {\n                            \"name\": \"MT_BLOB\",\n                            \"id\": 4000\n                        },\n                        {\n                            \"name\": \"MT_TEST1\",\n                            \"id\": 5001\n                        },\n                        {\n                            \"name\": \"MT_TEST2\",\n                            \"id\": 5002\n                        },\n                        {\n                            \"name\": \"MT_TEST3\",\n                            \"id\": 5003\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_LOWER\",\n                            \"id\": 10000\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_UPPER\",\n                            \"id\": 13000\n                        },\n                        {\n                            \"name\": \"MT_EMC_OPERATOR_ERROR\",\n                            \"id\": 10011\n                        },\n                        {\n                            \"name\": \"MT_EMC_OPERATOR_TEXT\",\n                            \"id\": 10012\n                        },\n                        {\n                            \"name\": \"MT_EMC_OPERATOR_DISPLAY\",\n                            \"id\": 10013\n                        },\n                        {\n                            \"name\": \"MT_EMC_NULL\",\n                            \"id\": 10021\n                        },\n                        {\n                            \"name\": \"MT_EMC_SET_DEBUG\",\n                            \"id\": 10022\n                        },\n                        {\n                            \"name\": \"MT_EMC_SYSTEM_CMD\",\n                            \"id\": 10030\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_AXIS\",\n                            \"id\": 10101\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_UNITS\",\n                            \"id\": 10102\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_MIN_POSITION_LIMIT\",\n                            \"id\": 10107\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_MAX_POSITION_LIMIT\",\n                            \"id\": 10108\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_START_CHANGE\",\n                            \"id\": 1110\n                        },\n                        {\n                            \"name\": \"MT_EMC_EXEC_PLUGIN_CALL\",\n                            \"id\": 1112\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_PLUGIN_CALL\",\n                            \"id\": 1113\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_FERROR\",\n                            \"id\": 10111\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_HOMING_PARAMS\",\n                            \"id\": 10112\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_MIN_FERROR\",\n                            \"id\": 10115\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_MAX_VELOCITY\",\n                            \"id\": 10116\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_INIT\",\n                            \"id\": 10118\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_HALT\",\n                            \"id\": 10119\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_ABORT\",\n                            \"id\": 10120\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_ENABLE\",\n                            \"id\": 10121\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_DISABLE\",\n                            \"id\": 10122\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_HOME\",\n                            \"id\": 10123\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_UNHOME\",\n                            \"id\": 10135\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_JOG\",\n                            \"id\": 10124\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_INCR_JOG\",\n                            \"id\": 10125\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_ABS_JOG\",\n                            \"id\": 10126\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_ACTIVATE\",\n                            \"id\": 10127\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_DEACTIVATE\",\n                            \"id\": 10128\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_OVERRIDE_LIMITS\",\n                            \"id\": 10129\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_LOAD_COMP\",\n                            \"id\": 10131\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_BACKLASH\",\n                            \"id\": 10134\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_STAT\",\n                            \"id\": 10199\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_AXES\",\n                            \"id\": 10201\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_UNITS\",\n                            \"id\": 10202\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_CYCLE_TIME\",\n                            \"id\": 10203\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_MODE\",\n                            \"id\": 10204\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_VELOCITY\",\n                            \"id\": 10205\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_ACCELERATION\",\n                            \"id\": 10206\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_MAX_VELOCITY\",\n                            \"id\": 10207\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_MAX_ACCELERATION\",\n                            \"id\": 10208\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_SCALE\",\n                            \"id\": 10209\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_MOTION_ID\",\n                            \"id\": 10210\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_INIT\",\n                            \"id\": 10211\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_HALT\",\n                            \"id\": 10212\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_ENABLE\",\n                            \"id\": 10213\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_DISABLE\",\n                            \"id\": 10214\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_ABORT\",\n                            \"id\": 10215\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_PAUSE\",\n                            \"id\": 10216\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_STEP\",\n                            \"id\": 10217\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_RESUME\",\n                            \"id\": 10218\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_DELAY\",\n                            \"id\": 10219\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_LINEAR_MOVE\",\n                            \"id\": 10220\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_CIRCULAR_MOVE\",\n                            \"id\": 10221\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_TERM_COND\",\n                            \"id\": 10222\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_OFFSET\",\n                            \"id\": 10223\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_G5X\",\n                            \"id\": 10224\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_HOME\",\n                            \"id\": 10225\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_ROTATION\",\n                            \"id\": 10226\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_G92\",\n                            \"id\": 10227\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_CLEAR_PROBE_TRIPPED_FLAG\",\n                            \"id\": 10228\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_PROBE\",\n                            \"id\": 10229\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_TELEOP_ENABLE\",\n                            \"id\": 10230\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_TELEOP_VECTOR\",\n                            \"id\": 10231\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_SPINDLESYNC\",\n                            \"id\": 10232\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_SPINDLE_SCALE\",\n                            \"id\": 10233\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_FO_ENABLE\",\n                            \"id\": 10234\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_SO_ENABLE\",\n                            \"id\": 10235\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_FH_ENABLE\",\n                            \"id\": 10236\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_RIGID_TAP\",\n                            \"id\": 10237\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_STAT\",\n                            \"id\": 10299\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_INIT\",\n                            \"id\": 10301\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_HALT\",\n                            \"id\": 10302\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_ABORT\",\n                            \"id\": 10303\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_SET_AOUT\",\n                            \"id\": 10304\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_SET_DOUT\",\n                            \"id\": 10305\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_ADAPTIVE\",\n                            \"id\": 10306\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_ORIENT\",\n                            \"id\": 10317\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_WAIT_ORIENT_COMPLETE\",\n                            \"id\": 10318\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_STAT\",\n                            \"id\": 10399\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_INIT\",\n                            \"id\": 10501\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_HALT\",\n                            \"id\": 10502\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_ABORT\",\n                            \"id\": 10503\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_SET_MODE\",\n                            \"id\": 10504\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_SET_STATE\",\n                            \"id\": 10505\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_OPEN\",\n                            \"id\": 10506\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_RUN\",\n                            \"id\": 10507\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_READ\",\n                            \"id\": 10508\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_EXECUTE\",\n                            \"id\": 10509\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_PAUSE\",\n                            \"id\": 10510\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_STEP\",\n                            \"id\": 10511\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_RESUME\",\n                            \"id\": 10512\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_END\",\n                            \"id\": 10513\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_CLOSE\",\n                            \"id\": 10514\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_INIT\",\n                            \"id\": 10515\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_SYNCH\",\n                            \"id\": 10516\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_SET_OPTIONAL_STOP\",\n                            \"id\": 10517\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_SET_BLOCK_DELETE\",\n                            \"id\": 10518\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_OPTIONAL_STOP\",\n                            \"id\": 10519\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_RESET\",\n                            \"id\": 10520\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_REPLY\",\n                            \"id\": 10530\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_STAT\",\n                            \"id\": 10599\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_INIT\",\n                            \"id\": 11101\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_HALT\",\n                            \"id\": 11102\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_ABORT\",\n                            \"id\": 11103\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_PREPARE\",\n                            \"id\": 11104\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_LOAD\",\n                            \"id\": 11105\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_UNLOAD\",\n                            \"id\": 11106\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_LOAD_TOOL_TABLE\",\n                            \"id\": 11107\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_SET_OFFSET\",\n                            \"id\": 11108\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_SET_NUMBER\",\n                            \"id\": 11109\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_UPDATE_TOOL_TABLE\",\n                            \"id\": 11110\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_STAT\",\n                            \"id\": 11199\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_ESTOP_ON\",\n                            \"id\": 11206\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_ESTOP_OFF\",\n                            \"id\": 11207\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_ESTOP_RESET\",\n                            \"id\": 11208\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_INPUT_WAIT\",\n                            \"id\": 11209\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_STAT\",\n                            \"id\": 11299\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_ON\",\n                            \"id\": 11304\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_OFF\",\n                            \"id\": 11305\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_INCREASE\",\n                            \"id\": 11309\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_DECREASE\",\n                            \"id\": 11310\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_CONSTANT\",\n                            \"id\": 11311\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_BRAKE_RELEASE\",\n                            \"id\": 11312\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_BRAKE_ENGAGE\",\n                            \"id\": 11313\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_SPEED\",\n                            \"id\": 11316\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_STAT\",\n                            \"id\": 11399\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_MIST_ON\",\n                            \"id\": 11404\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_MIST_OFF\",\n                            \"id\": 11405\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_FLOOD_ON\",\n                            \"id\": 11406\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_FLOOD_OFF\",\n                            \"id\": 11407\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_STAT\",\n                            \"id\": 11499\n                        },\n                        {\n                            \"name\": \"MT_EMC_LUBE_ON\",\n                            \"id\": 11504\n                        },\n                        {\n                            \"name\": \"MT_EMC_LUBE_OFF\",\n                            \"id\": 11505\n                        },\n                        {\n                            \"name\": \"MT_EMC_LUBE_STAT\",\n                            \"id\": 11599\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_INIT\",\n                            \"id\": 11601\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_HALT\",\n                            \"id\": 11602\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_ABORT\",\n                            \"id\": 11603\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_SET_CYCLE_TIME\",\n                            \"id\": 11604\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_STAT\",\n                            \"id\": 11699\n                        },\n                        {\n                            \"name\": \"MT_EMC_INIT\",\n                            \"id\": 11901\n                        },\n                        {\n                            \"name\": \"MT_EMC_HALT\",\n                            \"id\": 11902\n                        },\n                        {\n                            \"name\": \"MT_EMC_ABORT\",\n                            \"id\": 11903\n                        },\n                        {\n                            \"name\": \"MT_EMC_STAT\",\n                            \"id\": 11999\n                        },\n                        {\n                            \"name\": \"MT_EMCSTAT_FULL_UPDATE\",\n                            \"id\": 12500\n                        },\n                        {\n                            \"name\": \"MT_EMCSTAT_INCREMENTAL_UPDATE\",\n                            \"id\": 12501\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_ERROR\",\n                            \"id\": 12510\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_TEXT\",\n                            \"id\": 12511\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_DISPLAY\",\n                            \"id\": 12512\n                        },\n                        {\n                            \"name\": \"MT_EMCCMD_EXECUTED\",\n                            \"id\": 12520\n                        },\n                        {\n                            \"name\": \"MT_EMCCMD_COMPLETED\",\n                            \"id\": 12521\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_FULL_UPDATE\",\n                            \"id\": 12600\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_INCREMENTAL_UPDATE\",\n                            \"id\": 12601\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_ERROR\",\n                            \"id\": 12602\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_START\",\n                            \"id\": 12610\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_TERMINATE\",\n                            \"id\": 12611\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_KILL\",\n                            \"id\": 12612\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_WRITE_STDIN\",\n                            \"id\": 12613\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_CALL\",\n                            \"id\": 12614\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_SHUTDOWN\",\n                            \"id\": 12615\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"OriginIndex\",\n                    \"values\": [\n                        {\n                            \"name\": \"ORIGIN_UNKNOWN\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"ORIGIN_G54\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"ORIGIN_G55\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"ORIGIN_G56\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"ORIGIN_G57\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"ORIGIN_G58\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"ORIGIN_G59\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"ORIGIN_G59_1\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"ORIGIN_G59_2\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"ORIGIN_G59_3\",\n                            \"id\": 9\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"TermConditionType\",\n                    \"values\": [\n                        {\n                            \"name\": \"_EMC_TRAJ_TERM_COND_STOP\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"_EMC_TRAJ_TERM_COND_BLEND\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"CanonDirection\",\n                    \"values\": [\n                        {\n                            \"name\": \"_CANON_STOPPED\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"_CANON_CLOCKWISE\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"_CANON_COUNTERCLOCKWISE\",\n                            \"id\": 3\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"InputType\",\n                    \"values\": [\n                        {\n                            \"name\": \"_ANALOG_INPUT\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"_DIGITAL_INPUT\",\n                            \"id\": 1\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"WaitType\",\n                    \"values\": [\n                        {\n                            \"name\": \"IMMEDIATE\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"RISE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"FALL\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"BE_HIGH\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"BE_LOW\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"InterpreterStateType\",\n                    \"values\": [\n                        {\n                            \"name\": \"INTERP_IDLE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"INTERP_RUNNING\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"INTERP_SYNC_WAIT\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"INTERP_PAUSED\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"INTERP_QUEUE_WAIT\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"INTERP_ABORT_WAIT\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"INTERP_STATE_UNSET\",\n                            \"id\": 99\n                        }\n                    ]\n                }\n            ]\n        }\n    ],\n    \"enums\": [\n        {\n            \"name\": \"FieldType\",\n            \"values\": [\n                {\n                    \"name\": \"FT_DEFAULT\",\n                    \"id\": 0\n                },\n                {\n                    \"name\": \"FT_CALLBACK\",\n                    \"id\": 1\n                },\n                {\n                    \"name\": \"FT_POINTER\",\n                    \"id\": 4\n                },\n                {\n                    \"name\": \"FT_STATIC\",\n                    \"id\": 2\n                },\n                {\n                    \"name\": \"FT_IGNORE\",\n                    \"id\": 3\n                }\n            ]\n        },\n        {\n            \"name\": \"IntSize\",\n            \"values\": [\n                {\n                    \"name\": \"IS_DEFAULT\",\n                    \"id\": 0\n                },\n                {\n                    \"name\": \"IS_8\",\n                    \"id\": 8\n                },\n                {\n                    \"name\": \"IS_16\",\n                    \"id\": 16\n                },\n                {\n                    \"name\": \"IS_32\",\n                    \"id\": 32\n                },\n                {\n                    \"name\": \"IS_64\",\n                    \"id\": 64\n                }\n            ]\n        }\n    ]\n}).build();","module.exports = require(\"protobufjs\").newBuilder({})['import']({\n    \"package\": null,\n    \"options\": {\n        \"java_package\": \"fi.kapsi.koti.jpa.nanopb\"\n    },\n    \"messages\": [\n        {\n            \"name\": \"NanoPBOptions\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"max_size\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"max_count\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"IntSize\",\n                    \"name\": \"int_size\",\n                    \"id\": 7,\n                    \"options\": {\n                        \"default\": \"IS_DEFAULT\"\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"FieldType\",\n                    \"name\": \"type\",\n                    \"id\": 3,\n                    \"options\": {\n                        \"default\": \"FT_DEFAULT\"\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"long_names\",\n                    \"id\": 4,\n                    \"options\": {\n                        \"default\": true\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"packed_struct\",\n                    \"id\": 5,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"skip_message\",\n                    \"id\": 6,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"no_unions\",\n                    \"id\": 8,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"uint32\",\n                    \"name\": \"msgid\",\n                    \"id\": 9\n                }\n            ]\n        },\n        {\n            \"name\": \"machinetalk\",\n            \"fields\": [],\n            \"messages\": [\n                {\n                    \"name\": \"PmCartesian\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 300\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"x\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"y\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"z\",\n                            \"id\": 30\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcPose\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 301\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"PmCartesian\",\n                            \"name\": \"tran\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"a\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"b\",\n                            \"id\": 30\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"c\",\n                            \"id\": 40\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"u\",\n                            \"id\": 50\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"v\",\n                            \"id\": 60\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"w\",\n                            \"id\": 70\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Value\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1500\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"ValueType\",\n                            \"name\": \"type\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"halbit\",\n                            \"id\": 100\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"halfloat\",\n                            \"id\": 101\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"hals32\",\n                            \"id\": 102\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"halu32\",\n                            \"id\": 103\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bytes\",\n                            \"name\": \"v_bytes\",\n                            \"id\": 120\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"v_int32\",\n                            \"id\": 130\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed64\",\n                            \"name\": \"v_int64\",\n                            \"id\": 140\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"v_uint32\",\n                            \"id\": 150\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed64\",\n                            \"name\": \"v_uint64\",\n                            \"id\": 160\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"v_double\",\n                            \"id\": 170\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"v_string\",\n                            \"id\": 180,\n                            \"options\": {\n                                \"(nanopb).max_size\": 41\n                            }\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"v_bool\",\n                            \"id\": 190\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"PmCartesian\",\n                            \"name\": \"carte\",\n                            \"id\": 200\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcPose\",\n                            \"name\": \"pose\",\n                            \"id\": 220\n                        }\n                    ]\n                }\n            ],\n            \"enums\": [\n                {\n                    \"name\": \"ValueType\",\n                    \"values\": [\n                        {\n                            \"name\": \"HAL_BIT\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"HAL_FLOAT\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"HAL_S32\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"HAL_U32\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"STRING\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"BYTES\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"INT32\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"UINT32\",\n                            \"id\": 30\n                        },\n                        {\n                            \"name\": \"INT64\",\n                            \"id\": 40\n                        },\n                        {\n                            \"name\": \"UINT64\",\n                            \"id\": 50\n                        },\n                        {\n                            \"name\": \"DOUBLE\",\n                            \"id\": 60\n                        },\n                        {\n                            \"name\": \"BOOL\",\n                            \"id\": 80\n                        },\n                        {\n                            \"name\": \"CARTESIAN\",\n                            \"id\": 100\n                        },\n                        {\n                            \"name\": \"LEGACY_CARTESIAN\",\n                            \"id\": 110\n                        },\n                        {\n                            \"name\": \"POSE\",\n                            \"id\": 120\n                        },\n                        {\n                            \"name\": \"LEGACY_POSE\",\n                            \"id\": 130\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"HalPinDirection\",\n                    \"values\": [\n                        {\n                            \"name\": \"HAL_IN\",\n                            \"id\": 16\n                        },\n                        {\n                            \"name\": \"HAL_OUT\",\n                            \"id\": 32\n                        },\n                        {\n                            \"name\": \"HAL_IO\",\n                            \"id\": 48\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"HalParamDirection\",\n                    \"values\": [\n                        {\n                            \"name\": \"HAL_RO\",\n                            \"id\": 64\n                        },\n                        {\n                            \"name\": \"HAL_RW\",\n                            \"id\": 192\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ObjectType\",\n                    \"values\": [\n                        {\n                            \"name\": \"HAL_PIN\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"HAL_SIGNAL\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"HAL_PARAM\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"HAL_THREAD\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"HAL_FUNCT\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"HAL_ALIAS\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"HAL_COMP_RT\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"HAL_COMP_USER\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"HAL_COMP_REMOTE\",\n                            \"id\": 9\n                        },\n                        {\n                            \"name\": \"HAL_RING\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"HAL_GROUP\",\n                            \"id\": 11\n                        },\n                        {\n                            \"name\": \"HAL_MEMBER_SIGNAL\",\n                            \"id\": 12\n                        },\n                        {\n                            \"name\": \"HAL_MEMBER_GROUP\",\n                            \"id\": 13\n                        },\n                        {\n                            \"name\": \"HAL_MEMBER_PIN\",\n                            \"id\": 14\n                        },\n                        {\n                            \"name\": \"HAL_MEMBER_PARAM\",\n                            \"id\": 15\n                        },\n                        {\n                            \"name\": \"RING_RECORD\",\n                            \"id\": 16\n                        },\n                        {\n                            \"name\": \"RING_STREAM\",\n                            \"id\": 17\n                        },\n                        {\n                            \"name\": \"HAL_VTABLE\",\n                            \"id\": 18\n                        },\n                        {\n                            \"name\": \"HAL_INST\",\n                            \"id\": 19\n                        },\n                        {\n                            \"name\": \"RING_MULTIFRAME\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"VALUE\",\n                            \"id\": 120\n                        },\n                        {\n                            \"name\": \"INSTANCE\",\n                            \"id\": 121\n                        },\n                        {\n                            \"name\": \"ORIGINATOR\",\n                            \"id\": 122\n                        },\n                        {\n                            \"name\": \"NAMED_VALUE\",\n                            \"id\": 125\n                        },\n                        {\n                            \"name\": \"OT_ERROR\",\n                            \"id\": 130\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"RCS_STATUS\",\n                    \"values\": [\n                        {\n                            \"name\": \"UNINITIALIZED_STATUS\",\n                            \"id\": -1\n                        },\n                        {\n                            \"name\": \"RCS_DONE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"RCS_EXEC\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"RCS_ERROR\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"RCS_RECEIVED\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"MsgOrigin\",\n                    \"values\": [\n                        {\n                            \"name\": \"MSG_KERNEL\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"MSG_RTUSER\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"MSG_ULAPI\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"MsgLevel\",\n                    \"values\": [\n                        {\n                            \"name\": \"RTAPI_MSG_NONE\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_ERR\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_WARN\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_INFO\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_DBG\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_ALL\",\n                            \"id\": 5\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"OriginDetail\",\n                    \"values\": [\n                        {\n                            \"name\": \"UNIX_SIGNAL\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"INSTANCE_SHUTDOWN\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"ZMQ_SOCKET\",\n                            \"id\": 70\n                        },\n                        {\n                            \"name\": \"NML_LAYER\",\n                            \"id\": 80\n                        },\n                        {\n                            \"name\": \"RCS_LAYER\",\n                            \"id\": 90\n                        },\n                        {\n                            \"name\": \"CMS_LAYER\",\n                            \"id\": 100\n                        },\n                        {\n                            \"name\": \"IP_LAYER\",\n                            \"id\": 110\n                        },\n                        {\n                            \"name\": \"TCP_LAYER\",\n                            \"id\": 120\n                        },\n                        {\n                            \"name\": \"PGM_LAYER\",\n                            \"id\": 130\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"OriginType\",\n                    \"values\": [\n                        {\n                            \"name\": \"PROCESS\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"USER_THREAD\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"RT_THREAD\",\n                            \"id\": 30\n                        },\n                        {\n                            \"name\": \"COMPONENT\",\n                            \"id\": 40\n                        },\n                        {\n                            \"name\": \"THREAD_FUNCTION\",\n                            \"id\": 50\n                        },\n                        {\n                            \"name\": \"COMPONENT_INIT\",\n                            \"id\": 60\n                        },\n                        {\n                            \"name\": \"COMPONENT_EXIT\",\n                            \"id\": 70\n                        },\n                        {\n                            \"name\": \"GROUP\",\n                            \"id\": 80\n                        },\n                        {\n                            \"name\": \"PIN\",\n                            \"id\": 90\n                        },\n                        {\n                            \"name\": \"SIGNAL\",\n                            \"id\": 100\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Severity\",\n                    \"values\": [\n                        {\n                            \"name\": \"S_INFORMATIONAL\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"S_WARNING\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"S_FAIL\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"StatusType\",\n                    \"values\": [\n                        {\n                            \"name\": \"ENQUEUED\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"PROCESSING\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"COMPLETE\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"FAILED\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ReplyType\",\n                    \"values\": [\n                        {\n                            \"name\": \"NONE\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"ON_RECEPTION\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"ON_QUEUED\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"ON_COMPLETION\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"ALL_STEPS\",\n                            \"id\": 255\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ServiceType\",\n                    \"values\": [\n                        {\n                            \"name\": \"ST_LOGGING\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"ST_CONFIG\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"ST_REDIS\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"ST_HTTP\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"ST_HTTPS\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"ST_WEBSOCKET\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"ST_WEBSOCKETS\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"ST_RTAPI_COMMAND\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"ST_STP_HALGROUP\",\n                            \"id\": 9\n                        },\n                        {\n                            \"name\": \"ST_STP_HALRCOMP\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"ST_STP_INTERP\",\n                            \"id\": 11\n                        },\n                        {\n                            \"name\": \"ST_STP_TASK\",\n                            \"id\": 12\n                        },\n                        {\n                            \"name\": \"ST_HAL_RCOMMAND\",\n                            \"id\": 13\n                        },\n                        {\n                            \"name\": \"ST_TASK_COMMAND\",\n                            \"id\": 14\n                        },\n                        {\n                            \"name\": \"ST_INTERP_COMMAND\",\n                            \"id\": 15\n                        },\n                        {\n                            \"name\": \"ST_MESSAGEBUS_COMMAND\",\n                            \"id\": 16\n                        },\n                        {\n                            \"name\": \"ST_MESSAGEBUS_RESPONSE\",\n                            \"id\": 17\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ServiceAPI\",\n                    \"values\": [\n                        {\n                            \"name\": \"SA_ZMQ_PROTOBUF\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"SA_WS_JSON\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ContainerType\",\n                    \"values\": [\n                        {\n                            \"name\": \"MT_RTMESSAGE\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"MT_MOTCMD\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"MT_MOTSTATUS\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"MT_LEGACY_MOTCMD\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"MT_LEGACY_MOTSTATUS\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"MT_WOU\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"MT_HALUPDATE\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_MESSAGE\",\n                            \"id\": 9\n                        },\n                        {\n                            \"name\": \"MT_LOG_MESSAGE\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"MT_PREVIEW\",\n                            \"id\": 11\n                        },\n                        {\n                            \"name\": \"MT_PROGRESS\",\n                            \"id\": 12\n                        },\n                        {\n                            \"name\": \"MT_INTERP_STAT\",\n                            \"id\": 13\n                        },\n                        {\n                            \"name\": \"MT_SYSLOG\",\n                            \"id\": 18\n                        },\n                        {\n                            \"name\": \"MT_LEGACY_NML\",\n                            \"id\": 19\n                        },\n                        {\n                            \"name\": \"MT_LEGACY_MOTCONFIG\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"MT_STP_UPDATE_FULL\",\n                            \"id\": 26\n                        },\n                        {\n                            \"name\": \"MT_STP_UPDATE\",\n                            \"id\": 28\n                        },\n                        {\n                            \"name\": \"MT_STP_NOGROUP\",\n                            \"id\": 27\n                        },\n                        {\n                            \"name\": \"MT_SHUTDOWN\",\n                            \"id\": 45\n                        },\n                        {\n                            \"name\": \"MT_CONFIRM_SHUTDOWN\",\n                            \"id\": 50\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE0\",\n                            \"id\": 30\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE1\",\n                            \"id\": 31\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE2\",\n                            \"id\": 32\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE3\",\n                            \"id\": 33\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE4\",\n                            \"id\": 34\n                        },\n                        {\n                            \"name\": \"MT_ASCII\",\n                            \"id\": 100\n                        },\n                        {\n                            \"name\": \"MT_UNICODE\",\n                            \"id\": 101\n                        },\n                        {\n                            \"name\": \"MT_GCODE\",\n                            \"id\": 102\n                        },\n                        {\n                            \"name\": \"MT_PYTHON\",\n                            \"id\": 103\n                        },\n                        {\n                            \"name\": \"MT_PICKLE\",\n                            \"id\": 104\n                        },\n                        {\n                            \"name\": \"MT_TCL\",\n                            \"id\": 105\n                        },\n                        {\n                            \"name\": \"MT_XML\",\n                            \"id\": 106\n                        },\n                        {\n                            \"name\": \"MT_JSON\",\n                            \"id\": 107\n                        },\n                        {\n                            \"name\": \"MT_JPEG\",\n                            \"id\": 108\n                        },\n                        {\n                            \"name\": \"MT_PNG\",\n                            \"id\": 109\n                        },\n                        {\n                            \"name\": \"MT_TIFF\",\n                            \"id\": 110\n                        },\n                        {\n                            \"name\": \"MT_POSTSCRIPT\",\n                            \"id\": 111\n                        },\n                        {\n                            \"name\": \"MT_SVG\",\n                            \"id\": 112\n                        },\n                        {\n                            \"name\": \"MT_ZMQ_SUBSCRIBE\",\n                            \"id\": 150\n                        },\n                        {\n                            \"name\": \"MT_ZMQ_UNSUBSCRIBE\",\n                            \"id\": 151\n                        },\n                        {\n                            \"name\": \"MT_PING\",\n                            \"id\": 210\n                        },\n                        {\n                            \"name\": \"MT_PING_ACKNOWLEDGE\",\n                            \"id\": 215\n                        },\n                        {\n                            \"name\": \"MT_REJECT\",\n                            \"id\": 220\n                        },\n                        {\n                            \"name\": \"MT_DONE\",\n                            \"id\": 240\n                        },\n                        {\n                            \"name\": \"MT_SERVICE_REQUEST\",\n                            \"id\": 250\n                        },\n                        {\n                            \"name\": \"MT_SERVICE_ANNOUNCEMENT\",\n                            \"id\": 251\n                        },\n                        {\n                            \"name\": \"MT_SERVICE_PROBE\",\n                            \"id\": 252\n                        },\n                        {\n                            \"name\": \"MT_MESSAGEBUS_NO_DESTINATION\",\n                            \"id\": 255\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_BIND\",\n                            \"id\": 256\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_BIND_CONFIRM\",\n                            \"id\": 257\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_BIND_REJECT\",\n                            \"id\": 258\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_SET\",\n                            \"id\": 259\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_SET_REJECT\",\n                            \"id\": 260\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_ACK\",\n                            \"id\": 263\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_SET\",\n                            \"id\": 265\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_SET_REJECT\",\n                            \"id\": 266\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_GET\",\n                            \"id\": 267\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_GET_REJECT\",\n                            \"id\": 268\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_CREATE\",\n                            \"id\": 269\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_CREATE_REJECT\",\n                            \"id\": 270\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_DELETE\",\n                            \"id\": 271\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_DELETE_REJECT\",\n                            \"id\": 272\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_ACK\",\n                            \"id\": 273\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_ERROR\",\n                            \"id\": 274\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_DESCRIBE\",\n                            \"id\": 276\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_DESCRIPTION\",\n                            \"id\": 277\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_FULL_UPDATE\",\n                            \"id\": 288\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_INCREMENTAL_UPDATE\",\n                            \"id\": 289\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_ERROR\",\n                            \"id\": 290\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_BIND\",\n                            \"id\": 294\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_BIND_CONFIRM\",\n                            \"id\": 295\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_BIND_REJECT\",\n                            \"id\": 296\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_FULL_UPDATE\",\n                            \"id\": 297\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_INCREMENTAL_UPDATE\",\n                            \"id\": 298\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_ERROR\",\n                            \"id\": 299\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_EXIT\",\n                            \"id\": 300\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_PING\",\n                            \"id\": 301\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_LOADRT\",\n                            \"id\": 302\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_LOG\",\n                            \"id\": 303\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_UNLOADRT\",\n                            \"id\": 305\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_NEWINST\",\n                            \"id\": 306\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_NEWTHREAD\",\n                            \"id\": 307\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_DELTHREAD\",\n                            \"id\": 308\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_CALLFUNC\",\n                            \"id\": 309\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_REPLY\",\n                            \"id\": 310\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_DELINST\",\n                            \"id\": 311\n                        },\n                        {\n                            \"name\": \"MT_LIST_APPLICATIONS\",\n                            \"id\": 350\n                        },\n                        {\n                            \"name\": \"MT_DESCRIBE_APPLICATION\",\n                            \"id\": 351\n                        },\n                        {\n                            \"name\": \"MT_RETRIEVE_APPLICATION\",\n                            \"id\": 352\n                        },\n                        {\n                            \"name\": \"MT_APPLICATION_DETAIL\",\n                            \"id\": 353\n                        },\n                        {\n                            \"name\": \"MT_ERROR\",\n                            \"id\": 360\n                        },\n                        {\n                            \"name\": \"MT_FULL_UPDATE\",\n                            \"id\": 370\n                        },\n                        {\n                            \"name\": \"MT_INCREMENTAL_UPDATE\",\n                            \"id\": 371\n                        },\n                        {\n                            \"name\": \"MT_TASK_REPLY\",\n                            \"id\": 400\n                        },\n                        {\n                            \"name\": \"MT_TICKET_UPDATE\",\n                            \"id\": 401\n                        },\n                        {\n                            \"name\": \"MT_CREDIT_UPDATE\",\n                            \"id\": 450\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_LOWER\",\n                            \"id\": 1000\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_UPPER\",\n                            \"id\": 1100\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ABORT\",\n                            \"id\": 1001\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_AXIS_ABORT\",\n                            \"id\": 1002\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ENABLE\",\n                            \"id\": 1003\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_DISABLE\",\n                            \"id\": 1004\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ENABLE_AMPLIFIER\",\n                            \"id\": 1005\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_DISABLE_AMPLIFIER\",\n                            \"id\": 1006\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ENABLE_WATCHDOG\",\n                            \"id\": 1007\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_DISABLE_WATCHDOG\",\n                            \"id\": 1008\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ACTIVATE_JOINT\",\n                            \"id\": 1009\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_DEACTIVATE_JOINT\",\n                            \"id\": 1010\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_PAUSE\",\n                            \"id\": 1011\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_RESUME\",\n                            \"id\": 1012\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_STEP\",\n                            \"id\": 1013\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_FREE\",\n                            \"id\": 1014\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COORD\",\n                            \"id\": 1015\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_TELEOP\",\n                            \"id\": 1016\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_SCALE\",\n                            \"id\": 1017\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SS_ENABLE\",\n                            \"id\": 1018\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_FEED_SCALE\",\n                            \"id\": 1019\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_FS_ENABLE\",\n                            \"id\": 1020\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_FH_ENABLE\",\n                            \"id\": 1021\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_AF_ENABLE\",\n                            \"id\": 1022\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_OVERRIDE_LIMITS\",\n                            \"id\": 1023\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_HOME\",\n                            \"id\": 1024\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_UNHOME\",\n                            \"id\": 1025\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_JOG_CONT\",\n                            \"id\": 1026\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_JOG_INCR\",\n                            \"id\": 1027\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_JOG_ABS\",\n                            \"id\": 1028\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_LINE\",\n                            \"id\": 1029\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_CIRCLE\",\n                            \"id\": 1030\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_TELEOP_VECTOR\",\n                            \"id\": 1031\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_CLEAR_PROBE_FLAGS\",\n                            \"id\": 1032\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_PROBE\",\n                            \"id\": 1033\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_RIGID_TAP\",\n                            \"id\": 1034\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_POSITION_LIMITS\",\n                            \"id\": 1035\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_BACKLASH\",\n                            \"id\": 1036\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_MIN_FERROR\",\n                            \"id\": 1037\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_MAX_FERROR\",\n                            \"id\": 1038\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_VEL\",\n                            \"id\": 1039\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_VEL_LIMIT\",\n                            \"id\": 1040\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_JOINT_VEL_LIMIT\",\n                            \"id\": 1041\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_JOINT_ACC_LIMIT\",\n                            \"id\": 1042\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_ACC\",\n                            \"id\": 1043\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_TERM_COND\",\n                            \"id\": 1044\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_NUM_AXES\",\n                            \"id\": 1045\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_WORLD_HOME\",\n                            \"id\": 1046\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_HOMING_PARAMS\",\n                            \"id\": 1047\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_DEBUG\",\n                            \"id\": 1048\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_DOUT\",\n                            \"id\": 1049\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_AOUT\",\n                            \"id\": 1050\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_SPINDLESYNC\",\n                            \"id\": 1051\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_ON\",\n                            \"id\": 1052\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_OFF\",\n                            \"id\": 1053\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_INCREASE\",\n                            \"id\": 1054\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_DECREASE\",\n                            \"id\": 1055\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_BRAKE_ENGAGE\",\n                            \"id\": 1056\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_BRAKE_RELEASE\",\n                            \"id\": 1057\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_MOTOR_OFFSET\",\n                            \"id\": 1058\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_JOINT_COMP\",\n                            \"id\": 1059\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_OFFSET\",\n                            \"id\": 1060\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_OK\",\n                            \"id\": 1061\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_UNKNOWN_COMMAND\",\n                            \"id\": 1062\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_INVALID_COMMAND\",\n                            \"id\": 1063\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_INVALID_PARAMS\",\n                            \"id\": 1064\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_BAD_EXEC\",\n                            \"id\": 1065\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_DISABLED\",\n                            \"id\": 1066\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_FREE\",\n                            \"id\": 1067\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_TELEOP\",\n                            \"id\": 1068\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_COORD\",\n                            \"id\": 1069\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_JOINT_FLAG\",\n                            \"id\": 1070\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_FLAG\",\n                            \"id\": 1071\n                        },\n                        {\n                            \"name\": \"MT_PRU_FIRMWARE\",\n                            \"id\": 2048\n                        },\n                        {\n                            \"name\": \"MT_MESA_5I20_FIRMWARE\",\n                            \"id\": 3000\n                        },\n                        {\n                            \"name\": \"MT_BLOB\",\n                            \"id\": 4000\n                        },\n                        {\n                            \"name\": \"MT_TEST1\",\n                            \"id\": 5001\n                        },\n                        {\n                            \"name\": \"MT_TEST2\",\n                            \"id\": 5002\n                        },\n                        {\n                            \"name\": \"MT_TEST3\",\n                            \"id\": 5003\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_LOWER\",\n                            \"id\": 10000\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_UPPER\",\n                            \"id\": 13000\n                        },\n                        {\n                            \"name\": \"MT_EMC_OPERATOR_ERROR\",\n                            \"id\": 10011\n                        },\n                        {\n                            \"name\": \"MT_EMC_OPERATOR_TEXT\",\n                            \"id\": 10012\n                        },\n                        {\n                            \"name\": \"MT_EMC_OPERATOR_DISPLAY\",\n                            \"id\": 10013\n                        },\n                        {\n                            \"name\": \"MT_EMC_NULL\",\n                            \"id\": 10021\n                        },\n                        {\n                            \"name\": \"MT_EMC_SET_DEBUG\",\n                            \"id\": 10022\n                        },\n                        {\n                            \"name\": \"MT_EMC_SYSTEM_CMD\",\n                            \"id\": 10030\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_AXIS\",\n                            \"id\": 10101\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_UNITS\",\n                            \"id\": 10102\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_MIN_POSITION_LIMIT\",\n                            \"id\": 10107\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_MAX_POSITION_LIMIT\",\n                            \"id\": 10108\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_START_CHANGE\",\n                            \"id\": 1110\n                        },\n                        {\n                            \"name\": \"MT_EMC_EXEC_PLUGIN_CALL\",\n                            \"id\": 1112\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_PLUGIN_CALL\",\n                            \"id\": 1113\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_FERROR\",\n                            \"id\": 10111\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_HOMING_PARAMS\",\n                            \"id\": 10112\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_MIN_FERROR\",\n                            \"id\": 10115\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_MAX_VELOCITY\",\n                            \"id\": 10116\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_INIT\",\n                            \"id\": 10118\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_HALT\",\n                            \"id\": 10119\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_ABORT\",\n                            \"id\": 10120\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_ENABLE\",\n                            \"id\": 10121\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_DISABLE\",\n                            \"id\": 10122\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_HOME\",\n                            \"id\": 10123\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_UNHOME\",\n                            \"id\": 10135\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_JOG\",\n                            \"id\": 10124\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_INCR_JOG\",\n                            \"id\": 10125\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_ABS_JOG\",\n                            \"id\": 10126\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_ACTIVATE\",\n                            \"id\": 10127\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_DEACTIVATE\",\n                            \"id\": 10128\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_OVERRIDE_LIMITS\",\n                            \"id\": 10129\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_LOAD_COMP\",\n                            \"id\": 10131\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_BACKLASH\",\n                            \"id\": 10134\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_STAT\",\n                            \"id\": 10199\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_AXES\",\n                            \"id\": 10201\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_UNITS\",\n                            \"id\": 10202\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_CYCLE_TIME\",\n                            \"id\": 10203\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_MODE\",\n                            \"id\": 10204\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_VELOCITY\",\n                            \"id\": 10205\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_ACCELERATION\",\n                            \"id\": 10206\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_MAX_VELOCITY\",\n                            \"id\": 10207\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_MAX_ACCELERATION\",\n                            \"id\": 10208\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_SCALE\",\n                            \"id\": 10209\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_MOTION_ID\",\n                            \"id\": 10210\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_INIT\",\n                            \"id\": 10211\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_HALT\",\n                            \"id\": 10212\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_ENABLE\",\n                            \"id\": 10213\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_DISABLE\",\n                            \"id\": 10214\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_ABORT\",\n                            \"id\": 10215\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_PAUSE\",\n                            \"id\": 10216\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_STEP\",\n                            \"id\": 10217\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_RESUME\",\n                            \"id\": 10218\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_DELAY\",\n                            \"id\": 10219\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_LINEAR_MOVE\",\n                            \"id\": 10220\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_CIRCULAR_MOVE\",\n                            \"id\": 10221\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_TERM_COND\",\n                            \"id\": 10222\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_OFFSET\",\n                            \"id\": 10223\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_G5X\",\n                            \"id\": 10224\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_HOME\",\n                            \"id\": 10225\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_ROTATION\",\n                            \"id\": 10226\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_G92\",\n                            \"id\": 10227\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_CLEAR_PROBE_TRIPPED_FLAG\",\n                            \"id\": 10228\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_PROBE\",\n                            \"id\": 10229\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_TELEOP_ENABLE\",\n                            \"id\": 10230\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_TELEOP_VECTOR\",\n                            \"id\": 10231\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_SPINDLESYNC\",\n                            \"id\": 10232\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_SPINDLE_SCALE\",\n                            \"id\": 10233\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_FO_ENABLE\",\n                            \"id\": 10234\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_SO_ENABLE\",\n                            \"id\": 10235\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_FH_ENABLE\",\n                            \"id\": 10236\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_RIGID_TAP\",\n                            \"id\": 10237\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_STAT\",\n                            \"id\": 10299\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_INIT\",\n                            \"id\": 10301\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_HALT\",\n                            \"id\": 10302\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_ABORT\",\n                            \"id\": 10303\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_SET_AOUT\",\n                            \"id\": 10304\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_SET_DOUT\",\n                            \"id\": 10305\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_ADAPTIVE\",\n                            \"id\": 10306\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_ORIENT\",\n                            \"id\": 10317\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_WAIT_ORIENT_COMPLETE\",\n                            \"id\": 10318\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_STAT\",\n                            \"id\": 10399\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_INIT\",\n                            \"id\": 10501\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_HALT\",\n                            \"id\": 10502\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_ABORT\",\n                            \"id\": 10503\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_SET_MODE\",\n                            \"id\": 10504\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_SET_STATE\",\n                            \"id\": 10505\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_OPEN\",\n                            \"id\": 10506\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_RUN\",\n                            \"id\": 10507\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_READ\",\n                            \"id\": 10508\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_EXECUTE\",\n                            \"id\": 10509\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_PAUSE\",\n                            \"id\": 10510\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_STEP\",\n                            \"id\": 10511\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_RESUME\",\n                            \"id\": 10512\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_END\",\n                            \"id\": 10513\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_CLOSE\",\n                            \"id\": 10514\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_INIT\",\n                            \"id\": 10515\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_SYNCH\",\n                            \"id\": 10516\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_SET_OPTIONAL_STOP\",\n                            \"id\": 10517\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_SET_BLOCK_DELETE\",\n                            \"id\": 10518\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_OPTIONAL_STOP\",\n                            \"id\": 10519\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_RESET\",\n                            \"id\": 10520\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_REPLY\",\n                            \"id\": 10530\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_STAT\",\n                            \"id\": 10599\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_INIT\",\n                            \"id\": 11101\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_HALT\",\n                            \"id\": 11102\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_ABORT\",\n                            \"id\": 11103\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_PREPARE\",\n                            \"id\": 11104\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_LOAD\",\n                            \"id\": 11105\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_UNLOAD\",\n                            \"id\": 11106\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_LOAD_TOOL_TABLE\",\n                            \"id\": 11107\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_SET_OFFSET\",\n                            \"id\": 11108\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_SET_NUMBER\",\n                            \"id\": 11109\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_UPDATE_TOOL_TABLE\",\n                            \"id\": 11110\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_STAT\",\n                            \"id\": 11199\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_ESTOP_ON\",\n                            \"id\": 11206\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_ESTOP_OFF\",\n                            \"id\": 11207\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_ESTOP_RESET\",\n                            \"id\": 11208\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_INPUT_WAIT\",\n                            \"id\": 11209\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_STAT\",\n                            \"id\": 11299\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_ON\",\n                            \"id\": 11304\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_OFF\",\n                            \"id\": 11305\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_INCREASE\",\n                            \"id\": 11309\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_DECREASE\",\n                            \"id\": 11310\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_CONSTANT\",\n                            \"id\": 11311\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_BRAKE_RELEASE\",\n                            \"id\": 11312\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_BRAKE_ENGAGE\",\n                            \"id\": 11313\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_SPEED\",\n                            \"id\": 11316\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_STAT\",\n                            \"id\": 11399\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_MIST_ON\",\n                            \"id\": 11404\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_MIST_OFF\",\n                            \"id\": 11405\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_FLOOD_ON\",\n                            \"id\": 11406\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_FLOOD_OFF\",\n                            \"id\": 11407\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_STAT\",\n                            \"id\": 11499\n                        },\n                        {\n                            \"name\": \"MT_EMC_LUBE_ON\",\n                            \"id\": 11504\n                        },\n                        {\n                            \"name\": \"MT_EMC_LUBE_OFF\",\n                            \"id\": 11505\n                        },\n                        {\n                            \"name\": \"MT_EMC_LUBE_STAT\",\n                            \"id\": 11599\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_INIT\",\n                            \"id\": 11601\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_HALT\",\n                            \"id\": 11602\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_ABORT\",\n                            \"id\": 11603\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_SET_CYCLE_TIME\",\n                            \"id\": 11604\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_STAT\",\n                            \"id\": 11699\n                        },\n                        {\n                            \"name\": \"MT_EMC_INIT\",\n                            \"id\": 11901\n                        },\n                        {\n                            \"name\": \"MT_EMC_HALT\",\n                            \"id\": 11902\n                        },\n                        {\n                            \"name\": \"MT_EMC_ABORT\",\n                            \"id\": 11903\n                        },\n                        {\n                            \"name\": \"MT_EMC_STAT\",\n                            \"id\": 11999\n                        },\n                        {\n                            \"name\": \"MT_EMCSTAT_FULL_UPDATE\",\n                            \"id\": 12500\n                        },\n                        {\n                            \"name\": \"MT_EMCSTAT_INCREMENTAL_UPDATE\",\n                            \"id\": 12501\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_ERROR\",\n                            \"id\": 12510\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_TEXT\",\n                            \"id\": 12511\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_DISPLAY\",\n                            \"id\": 12512\n                        },\n                        {\n                            \"name\": \"MT_EMCCMD_EXECUTED\",\n                            \"id\": 12520\n                        },\n                        {\n                            \"name\": \"MT_EMCCMD_COMPLETED\",\n                            \"id\": 12521\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_FULL_UPDATE\",\n                            \"id\": 12600\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_INCREMENTAL_UPDATE\",\n                            \"id\": 12601\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_ERROR\",\n                            \"id\": 12602\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_START\",\n                            \"id\": 12610\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_TERMINATE\",\n                            \"id\": 12611\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_KILL\",\n                            \"id\": 12612\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_WRITE_STDIN\",\n                            \"id\": 12613\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_CALL\",\n                            \"id\": 12614\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_SHUTDOWN\",\n                            \"id\": 12615\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"OriginIndex\",\n                    \"values\": [\n                        {\n                            \"name\": \"ORIGIN_UNKNOWN\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"ORIGIN_G54\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"ORIGIN_G55\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"ORIGIN_G56\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"ORIGIN_G57\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"ORIGIN_G58\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"ORIGIN_G59\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"ORIGIN_G59_1\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"ORIGIN_G59_2\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"ORIGIN_G59_3\",\n                            \"id\": 9\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"TermConditionType\",\n                    \"values\": [\n                        {\n                            \"name\": \"_EMC_TRAJ_TERM_COND_STOP\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"_EMC_TRAJ_TERM_COND_BLEND\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"CanonDirection\",\n                    \"values\": [\n                        {\n                            \"name\": \"_CANON_STOPPED\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"_CANON_CLOCKWISE\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"_CANON_COUNTERCLOCKWISE\",\n                            \"id\": 3\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"InputType\",\n                    \"values\": [\n                        {\n                            \"name\": \"_ANALOG_INPUT\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"_DIGITAL_INPUT\",\n                            \"id\": 1\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"WaitType\",\n                    \"values\": [\n                        {\n                            \"name\": \"IMMEDIATE\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"RISE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"FALL\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"BE_HIGH\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"BE_LOW\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"InterpreterStateType\",\n                    \"values\": [\n                        {\n                            \"name\": \"INTERP_IDLE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"INTERP_RUNNING\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"INTERP_SYNC_WAIT\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"INTERP_PAUSED\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"INTERP_QUEUE_WAIT\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"INTERP_ABORT_WAIT\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"INTERP_STATE_UNSET\",\n                            \"id\": 99\n                        }\n                    ]\n                }\n            ]\n        }\n    ],\n    \"enums\": [\n        {\n            \"name\": \"FieldType\",\n            \"values\": [\n                {\n                    \"name\": \"FT_DEFAULT\",\n                    \"id\": 0\n                },\n                {\n                    \"name\": \"FT_CALLBACK\",\n                    \"id\": 1\n                },\n                {\n                    \"name\": \"FT_POINTER\",\n                    \"id\": 4\n                },\n                {\n                    \"name\": \"FT_STATIC\",\n                    \"id\": 2\n                },\n                {\n                    \"name\": \"FT_IGNORE\",\n                    \"id\": 3\n                }\n            ]\n        },\n        {\n            \"name\": \"IntSize\",\n            \"values\": [\n                {\n                    \"name\": \"IS_DEFAULT\",\n                    \"id\": 0\n                },\n                {\n                    \"name\": \"IS_8\",\n                    \"id\": 8\n                },\n                {\n                    \"name\": \"IS_16\",\n                    \"id\": 16\n                },\n                {\n                    \"name\": \"IS_32\",\n                    \"id\": 32\n                },\n                {\n                    \"name\": \"IS_64\",\n                    \"id\": 64\n                }\n            ]\n        }\n    ]\n}).build();","module.exports = require(\"protobufjs\").newBuilder({})['import']({\n    \"package\": null,\n    \"options\": {\n        \"java_package\": \"fi.kapsi.koti.jpa.nanopb\"\n    },\n    \"messages\": [\n        {\n            \"name\": \"NanoPBOptions\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"max_size\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"max_count\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"IntSize\",\n                    \"name\": \"int_size\",\n                    \"id\": 7,\n                    \"options\": {\n                        \"default\": \"IS_DEFAULT\"\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"FieldType\",\n                    \"name\": \"type\",\n                    \"id\": 3,\n                    \"options\": {\n                        \"default\": \"FT_DEFAULT\"\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"long_names\",\n                    \"id\": 4,\n                    \"options\": {\n                        \"default\": true\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"packed_struct\",\n                    \"id\": 5,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"skip_message\",\n                    \"id\": 6,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"no_unions\",\n                    \"id\": 8,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"uint32\",\n                    \"name\": \"msgid\",\n                    \"id\": 9\n                }\n            ]\n        },\n        {\n            \"name\": \"machinetalk\",\n            \"fields\": [],\n            \"messages\": [\n                {\n                    \"name\": \"PmCartesian\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 300\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"x\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"y\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"z\",\n                            \"id\": 30\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcPose\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 301\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"PmCartesian\",\n                            \"name\": \"tran\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"a\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"b\",\n                            \"id\": 30\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"c\",\n                            \"id\": 40\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"u\",\n                            \"id\": 50\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"v\",\n                            \"id\": 60\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"w\",\n                            \"id\": 70\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Value\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1500\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"ValueType\",\n                            \"name\": \"type\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"halbit\",\n                            \"id\": 100\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"halfloat\",\n                            \"id\": 101\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"hals32\",\n                            \"id\": 102\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"halu32\",\n                            \"id\": 103\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bytes\",\n                            \"name\": \"v_bytes\",\n                            \"id\": 120\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"v_int32\",\n                            \"id\": 130\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed64\",\n                            \"name\": \"v_int64\",\n                            \"id\": 140\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"v_uint32\",\n                            \"id\": 150\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed64\",\n                            \"name\": \"v_uint64\",\n                            \"id\": 160\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"v_double\",\n                            \"id\": 170\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"v_string\",\n                            \"id\": 180,\n                            \"options\": {\n                                \"(nanopb).max_size\": 41\n                            }\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"v_bool\",\n                            \"id\": 190\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"PmCartesian\",\n                            \"name\": \"carte\",\n                            \"id\": 200\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcPose\",\n                            \"name\": \"pose\",\n                            \"id\": 220\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"RTAPI_Message\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1000\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"msglevel\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"string\",\n                            \"name\": \"format\",\n                            \"id\": 20,\n                            \"options\": {\n                                \"default\": \"*** uninitialized ***\",\n                                \"(nanopb).max_size\": 100\n                            }\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"Value\",\n                            \"name\": \"arg\",\n                            \"id\": 30,\n                            \"options\": {\n                                \"(nanopb).max_count\": 10\n                            }\n                        }\n                    ]\n                }\n            ],\n            \"enums\": [\n                {\n                    \"name\": \"ValueType\",\n                    \"values\": [\n                        {\n                            \"name\": \"HAL_BIT\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"HAL_FLOAT\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"HAL_S32\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"HAL_U32\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"STRING\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"BYTES\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"INT32\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"UINT32\",\n                            \"id\": 30\n                        },\n                        {\n                            \"name\": \"INT64\",\n                            \"id\": 40\n                        },\n                        {\n                            \"name\": \"UINT64\",\n                            \"id\": 50\n                        },\n                        {\n                            \"name\": \"DOUBLE\",\n                            \"id\": 60\n                        },\n                        {\n                            \"name\": \"BOOL\",\n                            \"id\": 80\n                        },\n                        {\n                            \"name\": \"CARTESIAN\",\n                            \"id\": 100\n                        },\n                        {\n                            \"name\": \"LEGACY_CARTESIAN\",\n                            \"id\": 110\n                        },\n                        {\n                            \"name\": \"POSE\",\n                            \"id\": 120\n                        },\n                        {\n                            \"name\": \"LEGACY_POSE\",\n                            \"id\": 130\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"HalPinDirection\",\n                    \"values\": [\n                        {\n                            \"name\": \"HAL_IN\",\n                            \"id\": 16\n                        },\n                        {\n                            \"name\": \"HAL_OUT\",\n                            \"id\": 32\n                        },\n                        {\n                            \"name\": \"HAL_IO\",\n                            \"id\": 48\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"HalParamDirection\",\n                    \"values\": [\n                        {\n                            \"name\": \"HAL_RO\",\n                            \"id\": 64\n                        },\n                        {\n                            \"name\": \"HAL_RW\",\n                            \"id\": 192\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ObjectType\",\n                    \"values\": [\n                        {\n                            \"name\": \"HAL_PIN\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"HAL_SIGNAL\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"HAL_PARAM\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"HAL_THREAD\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"HAL_FUNCT\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"HAL_ALIAS\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"HAL_COMP_RT\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"HAL_COMP_USER\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"HAL_COMP_REMOTE\",\n                            \"id\": 9\n                        },\n                        {\n                            \"name\": \"HAL_RING\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"HAL_GROUP\",\n                            \"id\": 11\n                        },\n                        {\n                            \"name\": \"HAL_MEMBER_SIGNAL\",\n                            \"id\": 12\n                        },\n                        {\n                            \"name\": \"HAL_MEMBER_GROUP\",\n                            \"id\": 13\n                        },\n                        {\n                            \"name\": \"HAL_MEMBER_PIN\",\n                            \"id\": 14\n                        },\n                        {\n                            \"name\": \"HAL_MEMBER_PARAM\",\n                            \"id\": 15\n                        },\n                        {\n                            \"name\": \"RING_RECORD\",\n                            \"id\": 16\n                        },\n                        {\n                            \"name\": \"RING_STREAM\",\n                            \"id\": 17\n                        },\n                        {\n                            \"name\": \"HAL_VTABLE\",\n                            \"id\": 18\n                        },\n                        {\n                            \"name\": \"HAL_INST\",\n                            \"id\": 19\n                        },\n                        {\n                            \"name\": \"RING_MULTIFRAME\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"VALUE\",\n                            \"id\": 120\n                        },\n                        {\n                            \"name\": \"INSTANCE\",\n                            \"id\": 121\n                        },\n                        {\n                            \"name\": \"ORIGINATOR\",\n                            \"id\": 122\n                        },\n                        {\n                            \"name\": \"NAMED_VALUE\",\n                            \"id\": 125\n                        },\n                        {\n                            \"name\": \"OT_ERROR\",\n                            \"id\": 130\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"RCS_STATUS\",\n                    \"values\": [\n                        {\n                            \"name\": \"UNINITIALIZED_STATUS\",\n                            \"id\": -1\n                        },\n                        {\n                            \"name\": \"RCS_DONE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"RCS_EXEC\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"RCS_ERROR\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"RCS_RECEIVED\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"MsgOrigin\",\n                    \"values\": [\n                        {\n                            \"name\": \"MSG_KERNEL\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"MSG_RTUSER\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"MSG_ULAPI\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"MsgLevel\",\n                    \"values\": [\n                        {\n                            \"name\": \"RTAPI_MSG_NONE\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_ERR\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_WARN\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_INFO\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_DBG\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_ALL\",\n                            \"id\": 5\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"OriginDetail\",\n                    \"values\": [\n                        {\n                            \"name\": \"UNIX_SIGNAL\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"INSTANCE_SHUTDOWN\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"ZMQ_SOCKET\",\n                            \"id\": 70\n                        },\n                        {\n                            \"name\": \"NML_LAYER\",\n                            \"id\": 80\n                        },\n                        {\n                            \"name\": \"RCS_LAYER\",\n                            \"id\": 90\n                        },\n                        {\n                            \"name\": \"CMS_LAYER\",\n                            \"id\": 100\n                        },\n                        {\n                            \"name\": \"IP_LAYER\",\n                            \"id\": 110\n                        },\n                        {\n                            \"name\": \"TCP_LAYER\",\n                            \"id\": 120\n                        },\n                        {\n                            \"name\": \"PGM_LAYER\",\n                            \"id\": 130\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"OriginType\",\n                    \"values\": [\n                        {\n                            \"name\": \"PROCESS\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"USER_THREAD\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"RT_THREAD\",\n                            \"id\": 30\n                        },\n                        {\n                            \"name\": \"COMPONENT\",\n                            \"id\": 40\n                        },\n                        {\n                            \"name\": \"THREAD_FUNCTION\",\n                            \"id\": 50\n                        },\n                        {\n                            \"name\": \"COMPONENT_INIT\",\n                            \"id\": 60\n                        },\n                        {\n                            \"name\": \"COMPONENT_EXIT\",\n                            \"id\": 70\n                        },\n                        {\n                            \"name\": \"GROUP\",\n                            \"id\": 80\n                        },\n                        {\n                            \"name\": \"PIN\",\n                            \"id\": 90\n                        },\n                        {\n                            \"name\": \"SIGNAL\",\n                            \"id\": 100\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Severity\",\n                    \"values\": [\n                        {\n                            \"name\": \"S_INFORMATIONAL\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"S_WARNING\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"S_FAIL\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"StatusType\",\n                    \"values\": [\n                        {\n                            \"name\": \"ENQUEUED\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"PROCESSING\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"COMPLETE\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"FAILED\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ReplyType\",\n                    \"values\": [\n                        {\n                            \"name\": \"NONE\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"ON_RECEPTION\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"ON_QUEUED\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"ON_COMPLETION\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"ALL_STEPS\",\n                            \"id\": 255\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ServiceType\",\n                    \"values\": [\n                        {\n                            \"name\": \"ST_LOGGING\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"ST_CONFIG\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"ST_REDIS\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"ST_HTTP\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"ST_HTTPS\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"ST_WEBSOCKET\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"ST_WEBSOCKETS\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"ST_RTAPI_COMMAND\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"ST_STP_HALGROUP\",\n                            \"id\": 9\n                        },\n                        {\n                            \"name\": \"ST_STP_HALRCOMP\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"ST_STP_INTERP\",\n                            \"id\": 11\n                        },\n                        {\n                            \"name\": \"ST_STP_TASK\",\n                            \"id\": 12\n                        },\n                        {\n                            \"name\": \"ST_HAL_RCOMMAND\",\n                            \"id\": 13\n                        },\n                        {\n                            \"name\": \"ST_TASK_COMMAND\",\n                            \"id\": 14\n                        },\n                        {\n                            \"name\": \"ST_INTERP_COMMAND\",\n                            \"id\": 15\n                        },\n                        {\n                            \"name\": \"ST_MESSAGEBUS_COMMAND\",\n                            \"id\": 16\n                        },\n                        {\n                            \"name\": \"ST_MESSAGEBUS_RESPONSE\",\n                            \"id\": 17\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ServiceAPI\",\n                    \"values\": [\n                        {\n                            \"name\": \"SA_ZMQ_PROTOBUF\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"SA_WS_JSON\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ContainerType\",\n                    \"values\": [\n                        {\n                            \"name\": \"MT_RTMESSAGE\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"MT_MOTCMD\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"MT_MOTSTATUS\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"MT_LEGACY_MOTCMD\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"MT_LEGACY_MOTSTATUS\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"MT_WOU\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"MT_HALUPDATE\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_MESSAGE\",\n                            \"id\": 9\n                        },\n                        {\n                            \"name\": \"MT_LOG_MESSAGE\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"MT_PREVIEW\",\n                            \"id\": 11\n                        },\n                        {\n                            \"name\": \"MT_PROGRESS\",\n                            \"id\": 12\n                        },\n                        {\n                            \"name\": \"MT_INTERP_STAT\",\n                            \"id\": 13\n                        },\n                        {\n                            \"name\": \"MT_SYSLOG\",\n                            \"id\": 18\n                        },\n                        {\n                            \"name\": \"MT_LEGACY_NML\",\n                            \"id\": 19\n                        },\n                        {\n                            \"name\": \"MT_LEGACY_MOTCONFIG\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"MT_STP_UPDATE_FULL\",\n                            \"id\": 26\n                        },\n                        {\n                            \"name\": \"MT_STP_UPDATE\",\n                            \"id\": 28\n                        },\n                        {\n                            \"name\": \"MT_STP_NOGROUP\",\n                            \"id\": 27\n                        },\n                        {\n                            \"name\": \"MT_SHUTDOWN\",\n                            \"id\": 45\n                        },\n                        {\n                            \"name\": \"MT_CONFIRM_SHUTDOWN\",\n                            \"id\": 50\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE0\",\n                            \"id\": 30\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE1\",\n                            \"id\": 31\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE2\",\n                            \"id\": 32\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE3\",\n                            \"id\": 33\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE4\",\n                            \"id\": 34\n                        },\n                        {\n                            \"name\": \"MT_ASCII\",\n                            \"id\": 100\n                        },\n                        {\n                            \"name\": \"MT_UNICODE\",\n                            \"id\": 101\n                        },\n                        {\n                            \"name\": \"MT_GCODE\",\n                            \"id\": 102\n                        },\n                        {\n                            \"name\": \"MT_PYTHON\",\n                            \"id\": 103\n                        },\n                        {\n                            \"name\": \"MT_PICKLE\",\n                            \"id\": 104\n                        },\n                        {\n                            \"name\": \"MT_TCL\",\n                            \"id\": 105\n                        },\n                        {\n                            \"name\": \"MT_XML\",\n                            \"id\": 106\n                        },\n                        {\n                            \"name\": \"MT_JSON\",\n                            \"id\": 107\n                        },\n                        {\n                            \"name\": \"MT_JPEG\",\n                            \"id\": 108\n                        },\n                        {\n                            \"name\": \"MT_PNG\",\n                            \"id\": 109\n                        },\n                        {\n                            \"name\": \"MT_TIFF\",\n                            \"id\": 110\n                        },\n                        {\n                            \"name\": \"MT_POSTSCRIPT\",\n                            \"id\": 111\n                        },\n                        {\n                            \"name\": \"MT_SVG\",\n                            \"id\": 112\n                        },\n                        {\n                            \"name\": \"MT_ZMQ_SUBSCRIBE\",\n                            \"id\": 150\n                        },\n                        {\n                            \"name\": \"MT_ZMQ_UNSUBSCRIBE\",\n                            \"id\": 151\n                        },\n                        {\n                            \"name\": \"MT_PING\",\n                            \"id\": 210\n                        },\n                        {\n                            \"name\": \"MT_PING_ACKNOWLEDGE\",\n                            \"id\": 215\n                        },\n                        {\n                            \"name\": \"MT_REJECT\",\n                            \"id\": 220\n                        },\n                        {\n                            \"name\": \"MT_DONE\",\n                            \"id\": 240\n                        },\n                        {\n                            \"name\": \"MT_SERVICE_REQUEST\",\n                            \"id\": 250\n                        },\n                        {\n                            \"name\": \"MT_SERVICE_ANNOUNCEMENT\",\n                            \"id\": 251\n                        },\n                        {\n                            \"name\": \"MT_SERVICE_PROBE\",\n                            \"id\": 252\n                        },\n                        {\n                            \"name\": \"MT_MESSAGEBUS_NO_DESTINATION\",\n                            \"id\": 255\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_BIND\",\n                            \"id\": 256\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_BIND_CONFIRM\",\n                            \"id\": 257\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_BIND_REJECT\",\n                            \"id\": 258\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_SET\",\n                            \"id\": 259\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_SET_REJECT\",\n                            \"id\": 260\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_ACK\",\n                            \"id\": 263\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_SET\",\n                            \"id\": 265\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_SET_REJECT\",\n                            \"id\": 266\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_GET\",\n                            \"id\": 267\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_GET_REJECT\",\n                            \"id\": 268\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_CREATE\",\n                            \"id\": 269\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_CREATE_REJECT\",\n                            \"id\": 270\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_DELETE\",\n                            \"id\": 271\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_DELETE_REJECT\",\n                            \"id\": 272\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_ACK\",\n                            \"id\": 273\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_ERROR\",\n                            \"id\": 274\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_DESCRIBE\",\n                            \"id\": 276\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_DESCRIPTION\",\n                            \"id\": 277\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_FULL_UPDATE\",\n                            \"id\": 288\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_INCREMENTAL_UPDATE\",\n                            \"id\": 289\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_ERROR\",\n                            \"id\": 290\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_BIND\",\n                            \"id\": 294\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_BIND_CONFIRM\",\n                            \"id\": 295\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_BIND_REJECT\",\n                            \"id\": 296\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_FULL_UPDATE\",\n                            \"id\": 297\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_INCREMENTAL_UPDATE\",\n                            \"id\": 298\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_ERROR\",\n                            \"id\": 299\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_EXIT\",\n                            \"id\": 300\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_PING\",\n                            \"id\": 301\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_LOADRT\",\n                            \"id\": 302\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_LOG\",\n                            \"id\": 303\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_UNLOADRT\",\n                            \"id\": 305\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_NEWINST\",\n                            \"id\": 306\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_NEWTHREAD\",\n                            \"id\": 307\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_DELTHREAD\",\n                            \"id\": 308\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_CALLFUNC\",\n                            \"id\": 309\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_REPLY\",\n                            \"id\": 310\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_DELINST\",\n                            \"id\": 311\n                        },\n                        {\n                            \"name\": \"MT_LIST_APPLICATIONS\",\n                            \"id\": 350\n                        },\n                        {\n                            \"name\": \"MT_DESCRIBE_APPLICATION\",\n                            \"id\": 351\n                        },\n                        {\n                            \"name\": \"MT_RETRIEVE_APPLICATION\",\n                            \"id\": 352\n                        },\n                        {\n                            \"name\": \"MT_APPLICATION_DETAIL\",\n                            \"id\": 353\n                        },\n                        {\n                            \"name\": \"MT_ERROR\",\n                            \"id\": 360\n                        },\n                        {\n                            \"name\": \"MT_FULL_UPDATE\",\n                            \"id\": 370\n                        },\n                        {\n                            \"name\": \"MT_INCREMENTAL_UPDATE\",\n                            \"id\": 371\n                        },\n                        {\n                            \"name\": \"MT_TASK_REPLY\",\n                            \"id\": 400\n                        },\n                        {\n                            \"name\": \"MT_TICKET_UPDATE\",\n                            \"id\": 401\n                        },\n                        {\n                            \"name\": \"MT_CREDIT_UPDATE\",\n                            \"id\": 450\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_LOWER\",\n                            \"id\": 1000\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_UPPER\",\n                            \"id\": 1100\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ABORT\",\n                            \"id\": 1001\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_AXIS_ABORT\",\n                            \"id\": 1002\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ENABLE\",\n                            \"id\": 1003\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_DISABLE\",\n                            \"id\": 1004\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ENABLE_AMPLIFIER\",\n                            \"id\": 1005\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_DISABLE_AMPLIFIER\",\n                            \"id\": 1006\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ENABLE_WATCHDOG\",\n                            \"id\": 1007\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_DISABLE_WATCHDOG\",\n                            \"id\": 1008\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ACTIVATE_JOINT\",\n                            \"id\": 1009\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_DEACTIVATE_JOINT\",\n                            \"id\": 1010\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_PAUSE\",\n                            \"id\": 1011\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_RESUME\",\n                            \"id\": 1012\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_STEP\",\n                            \"id\": 1013\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_FREE\",\n                            \"id\": 1014\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COORD\",\n                            \"id\": 1015\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_TELEOP\",\n                            \"id\": 1016\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_SCALE\",\n                            \"id\": 1017\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SS_ENABLE\",\n                            \"id\": 1018\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_FEED_SCALE\",\n                            \"id\": 1019\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_FS_ENABLE\",\n                            \"id\": 1020\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_FH_ENABLE\",\n                            \"id\": 1021\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_AF_ENABLE\",\n                            \"id\": 1022\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_OVERRIDE_LIMITS\",\n                            \"id\": 1023\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_HOME\",\n                            \"id\": 1024\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_UNHOME\",\n                            \"id\": 1025\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_JOG_CONT\",\n                            \"id\": 1026\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_JOG_INCR\",\n                            \"id\": 1027\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_JOG_ABS\",\n                            \"id\": 1028\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_LINE\",\n                            \"id\": 1029\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_CIRCLE\",\n                            \"id\": 1030\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_TELEOP_VECTOR\",\n                            \"id\": 1031\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_CLEAR_PROBE_FLAGS\",\n                            \"id\": 1032\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_PROBE\",\n                            \"id\": 1033\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_RIGID_TAP\",\n                            \"id\": 1034\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_POSITION_LIMITS\",\n                            \"id\": 1035\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_BACKLASH\",\n                            \"id\": 1036\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_MIN_FERROR\",\n                            \"id\": 1037\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_MAX_FERROR\",\n                            \"id\": 1038\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_VEL\",\n                            \"id\": 1039\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_VEL_LIMIT\",\n                            \"id\": 1040\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_JOINT_VEL_LIMIT\",\n                            \"id\": 1041\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_JOINT_ACC_LIMIT\",\n                            \"id\": 1042\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_ACC\",\n                            \"id\": 1043\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_TERM_COND\",\n                            \"id\": 1044\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_NUM_AXES\",\n                            \"id\": 1045\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_WORLD_HOME\",\n                            \"id\": 1046\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_HOMING_PARAMS\",\n                            \"id\": 1047\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_DEBUG\",\n                            \"id\": 1048\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_DOUT\",\n                            \"id\": 1049\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_AOUT\",\n                            \"id\": 1050\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_SPINDLESYNC\",\n                            \"id\": 1051\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_ON\",\n                            \"id\": 1052\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_OFF\",\n                            \"id\": 1053\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_INCREASE\",\n                            \"id\": 1054\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_DECREASE\",\n                            \"id\": 1055\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_BRAKE_ENGAGE\",\n                            \"id\": 1056\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_BRAKE_RELEASE\",\n                            \"id\": 1057\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_MOTOR_OFFSET\",\n                            \"id\": 1058\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_JOINT_COMP\",\n                            \"id\": 1059\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_OFFSET\",\n                            \"id\": 1060\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_OK\",\n                            \"id\": 1061\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_UNKNOWN_COMMAND\",\n                            \"id\": 1062\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_INVALID_COMMAND\",\n                            \"id\": 1063\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_INVALID_PARAMS\",\n                            \"id\": 1064\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_BAD_EXEC\",\n                            \"id\": 1065\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_DISABLED\",\n                            \"id\": 1066\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_FREE\",\n                            \"id\": 1067\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_TELEOP\",\n                            \"id\": 1068\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_COORD\",\n                            \"id\": 1069\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_JOINT_FLAG\",\n                            \"id\": 1070\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_FLAG\",\n                            \"id\": 1071\n                        },\n                        {\n                            \"name\": \"MT_PRU_FIRMWARE\",\n                            \"id\": 2048\n                        },\n                        {\n                            \"name\": \"MT_MESA_5I20_FIRMWARE\",\n                            \"id\": 3000\n                        },\n                        {\n                            \"name\": \"MT_BLOB\",\n                            \"id\": 4000\n                        },\n                        {\n                            \"name\": \"MT_TEST1\",\n                            \"id\": 5001\n                        },\n                        {\n                            \"name\": \"MT_TEST2\",\n                            \"id\": 5002\n                        },\n                        {\n                            \"name\": \"MT_TEST3\",\n                            \"id\": 5003\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_LOWER\",\n                            \"id\": 10000\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_UPPER\",\n                            \"id\": 13000\n                        },\n                        {\n                            \"name\": \"MT_EMC_OPERATOR_ERROR\",\n                            \"id\": 10011\n                        },\n                        {\n                            \"name\": \"MT_EMC_OPERATOR_TEXT\",\n                            \"id\": 10012\n                        },\n                        {\n                            \"name\": \"MT_EMC_OPERATOR_DISPLAY\",\n                            \"id\": 10013\n                        },\n                        {\n                            \"name\": \"MT_EMC_NULL\",\n                            \"id\": 10021\n                        },\n                        {\n                            \"name\": \"MT_EMC_SET_DEBUG\",\n                            \"id\": 10022\n                        },\n                        {\n                            \"name\": \"MT_EMC_SYSTEM_CMD\",\n                            \"id\": 10030\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_AXIS\",\n                            \"id\": 10101\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_UNITS\",\n                            \"id\": 10102\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_MIN_POSITION_LIMIT\",\n                            \"id\": 10107\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_MAX_POSITION_LIMIT\",\n                            \"id\": 10108\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_START_CHANGE\",\n                            \"id\": 1110\n                        },\n                        {\n                            \"name\": \"MT_EMC_EXEC_PLUGIN_CALL\",\n                            \"id\": 1112\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_PLUGIN_CALL\",\n                            \"id\": 1113\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_FERROR\",\n                            \"id\": 10111\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_HOMING_PARAMS\",\n                            \"id\": 10112\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_MIN_FERROR\",\n                            \"id\": 10115\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_MAX_VELOCITY\",\n                            \"id\": 10116\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_INIT\",\n                            \"id\": 10118\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_HALT\",\n                            \"id\": 10119\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_ABORT\",\n                            \"id\": 10120\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_ENABLE\",\n                            \"id\": 10121\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_DISABLE\",\n                            \"id\": 10122\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_HOME\",\n                            \"id\": 10123\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_UNHOME\",\n                            \"id\": 10135\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_JOG\",\n                            \"id\": 10124\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_INCR_JOG\",\n                            \"id\": 10125\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_ABS_JOG\",\n                            \"id\": 10126\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_ACTIVATE\",\n                            \"id\": 10127\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_DEACTIVATE\",\n                            \"id\": 10128\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_OVERRIDE_LIMITS\",\n                            \"id\": 10129\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_LOAD_COMP\",\n                            \"id\": 10131\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_BACKLASH\",\n                            \"id\": 10134\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_STAT\",\n                            \"id\": 10199\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_AXES\",\n                            \"id\": 10201\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_UNITS\",\n                            \"id\": 10202\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_CYCLE_TIME\",\n                            \"id\": 10203\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_MODE\",\n                            \"id\": 10204\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_VELOCITY\",\n                            \"id\": 10205\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_ACCELERATION\",\n                            \"id\": 10206\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_MAX_VELOCITY\",\n                            \"id\": 10207\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_MAX_ACCELERATION\",\n                            \"id\": 10208\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_SCALE\",\n                            \"id\": 10209\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_MOTION_ID\",\n                            \"id\": 10210\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_INIT\",\n                            \"id\": 10211\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_HALT\",\n                            \"id\": 10212\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_ENABLE\",\n                            \"id\": 10213\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_DISABLE\",\n                            \"id\": 10214\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_ABORT\",\n                            \"id\": 10215\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_PAUSE\",\n                            \"id\": 10216\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_STEP\",\n                            \"id\": 10217\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_RESUME\",\n                            \"id\": 10218\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_DELAY\",\n                            \"id\": 10219\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_LINEAR_MOVE\",\n                            \"id\": 10220\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_CIRCULAR_MOVE\",\n                            \"id\": 10221\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_TERM_COND\",\n                            \"id\": 10222\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_OFFSET\",\n                            \"id\": 10223\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_G5X\",\n                            \"id\": 10224\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_HOME\",\n                            \"id\": 10225\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_ROTATION\",\n                            \"id\": 10226\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_G92\",\n                            \"id\": 10227\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_CLEAR_PROBE_TRIPPED_FLAG\",\n                            \"id\": 10228\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_PROBE\",\n                            \"id\": 10229\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_TELEOP_ENABLE\",\n                            \"id\": 10230\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_TELEOP_VECTOR\",\n                            \"id\": 10231\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_SPINDLESYNC\",\n                            \"id\": 10232\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_SPINDLE_SCALE\",\n                            \"id\": 10233\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_FO_ENABLE\",\n                            \"id\": 10234\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_SO_ENABLE\",\n                            \"id\": 10235\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_FH_ENABLE\",\n                            \"id\": 10236\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_RIGID_TAP\",\n                            \"id\": 10237\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_STAT\",\n                            \"id\": 10299\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_INIT\",\n                            \"id\": 10301\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_HALT\",\n                            \"id\": 10302\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_ABORT\",\n                            \"id\": 10303\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_SET_AOUT\",\n                            \"id\": 10304\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_SET_DOUT\",\n                            \"id\": 10305\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_ADAPTIVE\",\n                            \"id\": 10306\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_ORIENT\",\n                            \"id\": 10317\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_WAIT_ORIENT_COMPLETE\",\n                            \"id\": 10318\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_STAT\",\n                            \"id\": 10399\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_INIT\",\n                            \"id\": 10501\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_HALT\",\n                            \"id\": 10502\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_ABORT\",\n                            \"id\": 10503\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_SET_MODE\",\n                            \"id\": 10504\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_SET_STATE\",\n                            \"id\": 10505\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_OPEN\",\n                            \"id\": 10506\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_RUN\",\n                            \"id\": 10507\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_READ\",\n                            \"id\": 10508\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_EXECUTE\",\n                            \"id\": 10509\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_PAUSE\",\n                            \"id\": 10510\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_STEP\",\n                            \"id\": 10511\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_RESUME\",\n                            \"id\": 10512\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_END\",\n                            \"id\": 10513\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_CLOSE\",\n                            \"id\": 10514\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_INIT\",\n                            \"id\": 10515\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_SYNCH\",\n                            \"id\": 10516\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_SET_OPTIONAL_STOP\",\n                            \"id\": 10517\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_SET_BLOCK_DELETE\",\n                            \"id\": 10518\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_OPTIONAL_STOP\",\n                            \"id\": 10519\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_RESET\",\n                            \"id\": 10520\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_REPLY\",\n                            \"id\": 10530\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_STAT\",\n                            \"id\": 10599\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_INIT\",\n                            \"id\": 11101\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_HALT\",\n                            \"id\": 11102\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_ABORT\",\n                            \"id\": 11103\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_PREPARE\",\n                            \"id\": 11104\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_LOAD\",\n                            \"id\": 11105\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_UNLOAD\",\n                            \"id\": 11106\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_LOAD_TOOL_TABLE\",\n                            \"id\": 11107\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_SET_OFFSET\",\n                            \"id\": 11108\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_SET_NUMBER\",\n                            \"id\": 11109\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_UPDATE_TOOL_TABLE\",\n                            \"id\": 11110\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_STAT\",\n                            \"id\": 11199\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_ESTOP_ON\",\n                            \"id\": 11206\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_ESTOP_OFF\",\n                            \"id\": 11207\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_ESTOP_RESET\",\n                            \"id\": 11208\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_INPUT_WAIT\",\n                            \"id\": 11209\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_STAT\",\n                            \"id\": 11299\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_ON\",\n                            \"id\": 11304\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_OFF\",\n                            \"id\": 11305\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_INCREASE\",\n                            \"id\": 11309\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_DECREASE\",\n                            \"id\": 11310\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_CONSTANT\",\n                            \"id\": 11311\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_BRAKE_RELEASE\",\n                            \"id\": 11312\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_BRAKE_ENGAGE\",\n                            \"id\": 11313\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_SPEED\",\n                            \"id\": 11316\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_STAT\",\n                            \"id\": 11399\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_MIST_ON\",\n                            \"id\": 11404\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_MIST_OFF\",\n                            \"id\": 11405\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_FLOOD_ON\",\n                            \"id\": 11406\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_FLOOD_OFF\",\n                            \"id\": 11407\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_STAT\",\n                            \"id\": 11499\n                        },\n                        {\n                            \"name\": \"MT_EMC_LUBE_ON\",\n                            \"id\": 11504\n                        },\n                        {\n                            \"name\": \"MT_EMC_LUBE_OFF\",\n                            \"id\": 11505\n                        },\n                        {\n                            \"name\": \"MT_EMC_LUBE_STAT\",\n                            \"id\": 11599\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_INIT\",\n                            \"id\": 11601\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_HALT\",\n                            \"id\": 11602\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_ABORT\",\n                            \"id\": 11603\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_SET_CYCLE_TIME\",\n                            \"id\": 11604\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_STAT\",\n                            \"id\": 11699\n                        },\n                        {\n                            \"name\": \"MT_EMC_INIT\",\n                            \"id\": 11901\n                        },\n                        {\n                            \"name\": \"MT_EMC_HALT\",\n                            \"id\": 11902\n                        },\n                        {\n                            \"name\": \"MT_EMC_ABORT\",\n                            \"id\": 11903\n                        },\n                        {\n                            \"name\": \"MT_EMC_STAT\",\n                            \"id\": 11999\n                        },\n                        {\n                            \"name\": \"MT_EMCSTAT_FULL_UPDATE\",\n                            \"id\": 12500\n                        },\n                        {\n                            \"name\": \"MT_EMCSTAT_INCREMENTAL_UPDATE\",\n                            \"id\": 12501\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_ERROR\",\n                            \"id\": 12510\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_TEXT\",\n                            \"id\": 12511\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_DISPLAY\",\n                            \"id\": 12512\n                        },\n                        {\n                            \"name\": \"MT_EMCCMD_EXECUTED\",\n                            \"id\": 12520\n                        },\n                        {\n                            \"name\": \"MT_EMCCMD_COMPLETED\",\n                            \"id\": 12521\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_FULL_UPDATE\",\n                            \"id\": 12600\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_INCREMENTAL_UPDATE\",\n                            \"id\": 12601\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_ERROR\",\n                            \"id\": 12602\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_START\",\n                            \"id\": 12610\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_TERMINATE\",\n                            \"id\": 12611\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_KILL\",\n                            \"id\": 12612\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_WRITE_STDIN\",\n                            \"id\": 12613\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_CALL\",\n                            \"id\": 12614\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_SHUTDOWN\",\n                            \"id\": 12615\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"OriginIndex\",\n                    \"values\": [\n                        {\n                            \"name\": \"ORIGIN_UNKNOWN\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"ORIGIN_G54\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"ORIGIN_G55\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"ORIGIN_G56\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"ORIGIN_G57\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"ORIGIN_G58\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"ORIGIN_G59\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"ORIGIN_G59_1\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"ORIGIN_G59_2\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"ORIGIN_G59_3\",\n                            \"id\": 9\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"TermConditionType\",\n                    \"values\": [\n                        {\n                            \"name\": \"_EMC_TRAJ_TERM_COND_STOP\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"_EMC_TRAJ_TERM_COND_BLEND\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"CanonDirection\",\n                    \"values\": [\n                        {\n                            \"name\": \"_CANON_STOPPED\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"_CANON_CLOCKWISE\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"_CANON_COUNTERCLOCKWISE\",\n                            \"id\": 3\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"InputType\",\n                    \"values\": [\n                        {\n                            \"name\": \"_ANALOG_INPUT\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"_DIGITAL_INPUT\",\n                            \"id\": 1\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"WaitType\",\n                    \"values\": [\n                        {\n                            \"name\": \"IMMEDIATE\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"RISE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"FALL\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"BE_HIGH\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"BE_LOW\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"InterpreterStateType\",\n                    \"values\": [\n                        {\n                            \"name\": \"INTERP_IDLE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"INTERP_RUNNING\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"INTERP_SYNC_WAIT\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"INTERP_PAUSED\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"INTERP_QUEUE_WAIT\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"INTERP_ABORT_WAIT\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"INTERP_STATE_UNSET\",\n                            \"id\": 99\n                        }\n                    ]\n                }\n            ]\n        }\n    ],\n    \"enums\": [\n        {\n            \"name\": \"FieldType\",\n            \"values\": [\n                {\n                    \"name\": \"FT_DEFAULT\",\n                    \"id\": 0\n                },\n                {\n                    \"name\": \"FT_CALLBACK\",\n                    \"id\": 1\n                },\n                {\n                    \"name\": \"FT_POINTER\",\n                    \"id\": 4\n                },\n                {\n                    \"name\": \"FT_STATIC\",\n                    \"id\": 2\n                },\n                {\n                    \"name\": \"FT_IGNORE\",\n                    \"id\": 3\n                }\n            ]\n        },\n        {\n            \"name\": \"IntSize\",\n            \"values\": [\n                {\n                    \"name\": \"IS_DEFAULT\",\n                    \"id\": 0\n                },\n                {\n                    \"name\": \"IS_8\",\n                    \"id\": 8\n                },\n                {\n                    \"name\": \"IS_16\",\n                    \"id\": 16\n                },\n                {\n                    \"name\": \"IS_32\",\n                    \"id\": 32\n                },\n                {\n                    \"name\": \"IS_64\",\n                    \"id\": 64\n                }\n            ]\n        }\n    ]\n}).build();","module.exports = require(\"protobufjs\").newBuilder({})['import']({\n    \"package\": null,\n    \"options\": {\n        \"java_package\": \"fi.kapsi.koti.jpa.nanopb\"\n    },\n    \"messages\": [\n        {\n            \"name\": \"NanoPBOptions\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"max_size\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"max_count\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"IntSize\",\n                    \"name\": \"int_size\",\n                    \"id\": 7,\n                    \"options\": {\n                        \"default\": \"IS_DEFAULT\"\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"FieldType\",\n                    \"name\": \"type\",\n                    \"id\": 3,\n                    \"options\": {\n                        \"default\": \"FT_DEFAULT\"\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"long_names\",\n                    \"id\": 4,\n                    \"options\": {\n                        \"default\": true\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"packed_struct\",\n                    \"id\": 5,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"skip_message\",\n                    \"id\": 6,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"no_unions\",\n                    \"id\": 8,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"uint32\",\n                    \"name\": \"msgid\",\n                    \"id\": 9\n                }\n            ]\n        },\n        {\n            \"name\": \"machinetalk\",\n            \"fields\": [],\n            \"messages\": [\n                {\n                    \"name\": \"Position\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 800\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"x\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"y\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"z\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"a\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"b\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"c\",\n                            \"id\": 8\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"u\",\n                            \"id\": 9\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"v\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"w\",\n                            \"id\": 11\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Preview\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 801\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"PreviewOpType\",\n                            \"name\": \"type\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"line_number\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Position\",\n                            \"name\": \"pos\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"first_end\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"second_end\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"first_axis\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"second_axis\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"rotation\",\n                            \"id\": 8\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"axis_end_point\",\n                            \"id\": 9\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"xy_rotation\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"plane\",\n                            \"id\": 11\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"rate\",\n                            \"id\": 12\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"feed_mode\",\n                            \"id\": 13\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"time\",\n                            \"id\": 14\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"text\",\n                            \"id\": 15\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"angular_units\",\n                            \"id\": 101\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"length_units\",\n                            \"id\": 102\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"probetype\",\n                            \"id\": 103\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"KinematicsType\",\n                            \"name\": \"kins\",\n                            \"id\": 104,\n                            \"options\": {\n                                \"default\": \"KT_JOINT\"\n                            }\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"axismask\",\n                            \"id\": 105\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"g5_index\",\n                            \"id\": 106\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"pocket\",\n                            \"id\": 107\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"SourceType\",\n                            \"name\": \"stype\",\n                            \"id\": 110\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"filename\",\n                            \"id\": 111\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"cmdstring\",\n                            \"id\": 112\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"call_level\",\n                            \"id\": 113\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"PmCartesian\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 300\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"x\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"y\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"z\",\n                            \"id\": 30\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcPose\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 301\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"PmCartesian\",\n                            \"name\": \"tran\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"a\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"b\",\n                            \"id\": 30\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"c\",\n                            \"id\": 40\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"u\",\n                            \"id\": 50\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"v\",\n                            \"id\": 60\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"w\",\n                            \"id\": 70\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"MotionCommand\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 600\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"cmd_code_t\",\n                            \"name\": \"command\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"commandNum\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"motor_offset\",\n                            \"id\": 30\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"maxLimit\",\n                            \"id\": 40\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"minLimit\",\n                            \"id\": 50\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcPose\",\n                            \"name\": \"pos\",\n                            \"id\": 60\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"PmCartesian\",\n                            \"name\": \"center\",\n                            \"id\": 70\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"PmCartesian\",\n                            \"name\": \"normal\",\n                            \"id\": 80\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"turn\",\n                            \"id\": 90\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"vel\",\n                            \"id\": 100\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"ini_maxvel\",\n                            \"id\": 110\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"MotionType\",\n                            \"name\": \"motion_type\",\n                            \"id\": 120\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"spindlesync\",\n                            \"id\": 130\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"acc\",\n                            \"id\": 140\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"backlash\",\n                            \"id\": 150\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"id\",\n                            \"id\": 160\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"termCond\",\n                            \"id\": 170\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"tolerance\",\n                            \"id\": 180\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"axis\",\n                            \"id\": 190\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"scale\",\n                            \"id\": 200\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"offset\",\n                            \"id\": 210\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"home\",\n                            \"id\": 220\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"home_final_vel\",\n                            \"id\": 230\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"search_vel\",\n                            \"id\": 240\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"latch_vel\",\n                            \"id\": 250\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"flags\",\n                            \"id\": 260\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"home_sequence\",\n                            \"id\": 270\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"volatile_home\",\n                            \"id\": 280\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"minFerror\",\n                            \"id\": 290\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"maxFerror\",\n                            \"id\": 300\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"wdWait\",\n                            \"id\": 310\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"debug\",\n                            \"id\": 320\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"now\",\n                            \"id\": 330\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"out\",\n                            \"id\": 340\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"start\",\n                            \"id\": 350\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"end\",\n                            \"id\": 360\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"mode\",\n                            \"id\": 370\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"comp_nominal\",\n                            \"id\": 380\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"comp_forward\",\n                            \"id\": 390\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"comp_reverse\",\n                            \"id\": 400\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"probe_type\",\n                            \"id\": 410\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcPose\",\n                            \"name\": \"tool_offset\",\n                            \"id\": 420\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"MotionStatus\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 601\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"cmd_code_t\",\n                            \"name\": \"commandEcho\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"commandNumEcho\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"cmd_status_t\",\n                            \"name\": \"commandStatus\",\n                            \"id\": 30\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcPose\",\n                            \"name\": \"carte_pos_fb\",\n                            \"id\": 40\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcToolData\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1100\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"index\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"id\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"diameter\",\n                            \"id\": 12\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"frontangle\",\n                            \"id\": 13\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"backangle\",\n                            \"id\": 14\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"orientation\",\n                            \"id\": 15\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Position\",\n                            \"name\": \"offset\",\n                            \"id\": 16\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"comment\",\n                            \"id\": 17\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"pocket\",\n                            \"id\": 18\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcStatusMotionAxis\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1101\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"index\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"enabled\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"fault\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"ferror_current\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"ferror_highmark\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"homed\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"homing\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"inpos\",\n                            \"id\": 8\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"input\",\n                            \"id\": 9\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"max_hard_limit\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"max_soft_limit\",\n                            \"id\": 11\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"min_hard_limit\",\n                            \"id\": 12\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"min_soft_limit\",\n                            \"id\": 13\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"output\",\n                            \"id\": 14\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"override_limits\",\n                            \"id\": 15\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"velocity\",\n                            \"id\": 16\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcStatusConfigAxis\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1102\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"index\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcAxisType\",\n                            \"name\": \"axis_type\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"backlash\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"max_ferror\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"max_position_limit\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"min_ferror\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"min_position_limit\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"home_sequence\",\n                            \"id\": 9\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"max_acceleration\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"max_velocity\",\n                            \"id\": 11\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"increments\",\n                            \"id\": 12\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcProgramExtension\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1103\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"index\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"extension\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcStatusAnalogIO\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1104\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"index\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"value\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcStatusDigitalIO\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1105\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"index\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"value\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcStatusLimit\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1106\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"index\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"value\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcStatusGCode\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1107\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"index\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"value\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcStatusMCode\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1108\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"index\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"value\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcStatusSetting\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1109\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"index\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"value\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcStatusConfig\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1110\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"default_acceleration\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"axes\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"EmcStatusConfigAxis\",\n                            \"name\": \"axis\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"axis_mask\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"cycle_time\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"debug\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcKinematicsType\",\n                            \"name\": \"kinematics_type\",\n                            \"id\": 8\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"max_acceleration\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"max_velocity\",\n                            \"id\": 11\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcLinearUnitsType\",\n                            \"name\": \"linear_units\",\n                            \"id\": 12\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"default_velocity\",\n                            \"id\": 13\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"EmcProgramExtension\",\n                            \"name\": \"program_extension\",\n                            \"id\": 14\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcPositionOffsetType\",\n                            \"name\": \"position_offset\",\n                            \"id\": 15\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcPositionFeedbackType\",\n                            \"name\": \"position_feedback\",\n                            \"id\": 16\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"max_feed_override\",\n                            \"id\": 17\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"min_feed_override\",\n                            \"id\": 18\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"max_spindle_override\",\n                            \"id\": 19\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"min_spindle_override\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"default_spindle_speed\",\n                            \"id\": 21\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"default_linear_velocity\",\n                            \"id\": 22\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"min_velocity\",\n                            \"id\": 23\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"max_linear_velocity\",\n                            \"id\": 24\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"min_linear_velocity\",\n                            \"id\": 25\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"default_angular_velocity\",\n                            \"id\": 26\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"max_angular_velocity\",\n                            \"id\": 27\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"min_angular_velocity\",\n                            \"id\": 28\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"increments\",\n                            \"id\": 29\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"grids\",\n                            \"id\": 30\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"lathe\",\n                            \"id\": 31\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"geometry\",\n                            \"id\": 32\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"uint32\",\n                            \"name\": \"arcdivision\",\n                            \"id\": 33\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"no_force_homing\",\n                            \"id\": 34\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"remote_path\",\n                            \"id\": 35\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcTimeUnitsType\",\n                            \"name\": \"time_units\",\n                            \"id\": 36\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"name\",\n                            \"id\": 37\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"EmcStatusUserCommand\",\n                            \"name\": \"user_command\",\n                            \"id\": 38\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcAngularUnitsType\",\n                            \"name\": \"angular_units\",\n                            \"id\": 39\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcStatusMotion\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1111\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"active_queue\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Position\",\n                            \"name\": \"actual_position\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"adaptive_feed_enabled\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"EmcStatusAnalogIO\",\n                            \"name\": \"ain\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"EmcStatusAnalogIO\",\n                            \"name\": \"aout\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"EmcStatusMotionAxis\",\n                            \"name\": \"axis\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"block_delete\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"current_line\",\n                            \"id\": 8\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"current_vel\",\n                            \"id\": 9\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"delay_left\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"EmcStatusDigitalIO\",\n                            \"name\": \"din\",\n                            \"id\": 11\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"distance_to_go\",\n                            \"id\": 12\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"EmcStatusDigitalIO\",\n                            \"name\": \"dout\",\n                            \"id\": 13\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Position\",\n                            \"name\": \"dtg\",\n                            \"id\": 14\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"enabled\",\n                            \"id\": 15\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"feed_hold_enabled\",\n                            \"id\": 16\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"feed_override_enabled\",\n                            \"id\": 17\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"feedrate\",\n                            \"id\": 18\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"OriginIndex\",\n                            \"name\": \"g5x_index\",\n                            \"id\": 19\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Position\",\n                            \"name\": \"g5x_offset\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Position\",\n                            \"name\": \"g92_offset\",\n                            \"id\": 21\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"id\",\n                            \"id\": 23\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"inpos\",\n                            \"id\": 24\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Position\",\n                            \"name\": \"joint_actual_position\",\n                            \"id\": 25\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Position\",\n                            \"name\": \"joint_position\",\n                            \"id\": 26\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"EmcStatusLimit\",\n                            \"name\": \"limit\",\n                            \"id\": 27\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"motion_line\",\n                            \"id\": 28\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"MotionType\",\n                            \"name\": \"motion_type\",\n                            \"id\": 29\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcTrajectoryModeType\",\n                            \"name\": \"motion_mode\",\n                            \"id\": 30\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"paused\",\n                            \"id\": 31\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Position\",\n                            \"name\": \"position\",\n                            \"id\": 32\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"probe_tripped\",\n                            \"id\": 33\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"probe_val\",\n                            \"id\": 34\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Position\",\n                            \"name\": \"probed_position\",\n                            \"id\": 35\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"probing\",\n                            \"id\": 36\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"queue\",\n                            \"id\": 37\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"queue_full\",\n                            \"id\": 38\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"rotation_xy\",\n                            \"id\": 39\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"spindle_brake\",\n                            \"id\": 40\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"spindle_direction\",\n                            \"id\": 41\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"spindle_enabled\",\n                            \"id\": 42\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"spindle_increasing\",\n                            \"id\": 43\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"spindle_override_enabled\",\n                            \"id\": 44\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"spindle_speed\",\n                            \"id\": 45\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"spindlerate\",\n                            \"id\": 46\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"RCS_STATUS\",\n                            \"name\": \"state\",\n                            \"id\": 47\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"max_velocity\",\n                            \"id\": 48\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"max_acceleration\",\n                            \"id\": 49\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcStatusIo\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1112\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"estop\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"flood\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"lube\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"lube_level\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"mist\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Position\",\n                            \"name\": \"tool_offset\",\n                            \"id\": 8\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"EmcToolData\",\n                            \"name\": \"tool_table\",\n                            \"id\": 9\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"pocket_prepped\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"tool_in_spindle\",\n                            \"id\": 11\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcStatusTask\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1113\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"echo_serial_number\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcTaskExecStateType\",\n                            \"name\": \"exec_state\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"file\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"input_timeout\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"optional_stop\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"read_line\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcTaskModeType\",\n                            \"name\": \"task_mode\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"task_paused\",\n                            \"id\": 8\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcTaskStateType\",\n                            \"name\": \"task_state\",\n                            \"id\": 9\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"total_lines\",\n                            \"id\": 10\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcStatusInterp\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1114\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"command\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"EmcStatusGCode\",\n                            \"name\": \"gcodes\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcInterpStateType\",\n                            \"name\": \"interp_state\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcInterpExitCodeType\",\n                            \"name\": \"interpreter_errcode\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"EmcStatusMCode\",\n                            \"name\": \"mcodes\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"EmcStatusSetting\",\n                            \"name\": \"settings\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcCanonUnitsType\",\n                            \"name\": \"program_units\",\n                            \"id\": 7\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcCommandParameters\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1115\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"uint32\",\n                            \"name\": \"index\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"uint32\",\n                            \"name\": \"debug_level\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"line_number\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"scale\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"velocity\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"distance\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"value\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"enable\",\n                            \"id\": 8\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"command\",\n                            \"id\": 9\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"path\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcTaskModeType\",\n                            \"name\": \"task_mode\",\n                            \"id\": 100\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcTaskStateType\",\n                            \"name\": \"task_state\",\n                            \"id\": 101\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcTrajectoryModeType\",\n                            \"name\": \"traj_mode\",\n                            \"id\": 102\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcPose\",\n                            \"name\": \"pose\",\n                            \"id\": 103\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcToolData\",\n                            \"name\": \"tool_data\",\n                            \"id\": 104\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"EmcToolData\",\n                            \"name\": \"tool_table\",\n                            \"id\": 105\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcStatusUserCommand\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1116\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"index\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"command\",\n                            \"id\": 2\n                        }\n                    ]\n                }\n            ],\n            \"enums\": [\n                {\n                    \"name\": \"ValueType\",\n                    \"values\": [\n                        {\n                            \"name\": \"HAL_BIT\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"HAL_FLOAT\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"HAL_S32\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"HAL_U32\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"STRING\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"BYTES\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"INT32\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"UINT32\",\n                            \"id\": 30\n                        },\n                        {\n                            \"name\": \"INT64\",\n                            \"id\": 40\n                        },\n                        {\n                            \"name\": \"UINT64\",\n                            \"id\": 50\n                        },\n                        {\n                            \"name\": \"DOUBLE\",\n                            \"id\": 60\n                        },\n                        {\n                            \"name\": \"BOOL\",\n                            \"id\": 80\n                        },\n                        {\n                            \"name\": \"CARTESIAN\",\n                            \"id\": 100\n                        },\n                        {\n                            \"name\": \"LEGACY_CARTESIAN\",\n                            \"id\": 110\n                        },\n                        {\n                            \"name\": \"POSE\",\n                            \"id\": 120\n                        },\n                        {\n                            \"name\": \"LEGACY_POSE\",\n                            \"id\": 130\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"HalPinDirection\",\n                    \"values\": [\n                        {\n                            \"name\": \"HAL_IN\",\n                            \"id\": 16\n                        },\n                        {\n                            \"name\": \"HAL_OUT\",\n                            \"id\": 32\n                        },\n                        {\n                            \"name\": \"HAL_IO\",\n                            \"id\": 48\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"HalParamDirection\",\n                    \"values\": [\n                        {\n                            \"name\": \"HAL_RO\",\n                            \"id\": 64\n                        },\n                        {\n                            \"name\": \"HAL_RW\",\n                            \"id\": 192\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ObjectType\",\n                    \"values\": [\n                        {\n                            \"name\": \"HAL_PIN\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"HAL_SIGNAL\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"HAL_PARAM\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"HAL_THREAD\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"HAL_FUNCT\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"HAL_ALIAS\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"HAL_COMP_RT\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"HAL_COMP_USER\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"HAL_COMP_REMOTE\",\n                            \"id\": 9\n                        },\n                        {\n                            \"name\": \"HAL_RING\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"HAL_GROUP\",\n                            \"id\": 11\n                        },\n                        {\n                            \"name\": \"HAL_MEMBER_SIGNAL\",\n                            \"id\": 12\n                        },\n                        {\n                            \"name\": \"HAL_MEMBER_GROUP\",\n                            \"id\": 13\n                        },\n                        {\n                            \"name\": \"HAL_MEMBER_PIN\",\n                            \"id\": 14\n                        },\n                        {\n                            \"name\": \"HAL_MEMBER_PARAM\",\n                            \"id\": 15\n                        },\n                        {\n                            \"name\": \"RING_RECORD\",\n                            \"id\": 16\n                        },\n                        {\n                            \"name\": \"RING_STREAM\",\n                            \"id\": 17\n                        },\n                        {\n                            \"name\": \"HAL_VTABLE\",\n                            \"id\": 18\n                        },\n                        {\n                            \"name\": \"HAL_INST\",\n                            \"id\": 19\n                        },\n                        {\n                            \"name\": \"RING_MULTIFRAME\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"VALUE\",\n                            \"id\": 120\n                        },\n                        {\n                            \"name\": \"INSTANCE\",\n                            \"id\": 121\n                        },\n                        {\n                            \"name\": \"ORIGINATOR\",\n                            \"id\": 122\n                        },\n                        {\n                            \"name\": \"NAMED_VALUE\",\n                            \"id\": 125\n                        },\n                        {\n                            \"name\": \"OT_ERROR\",\n                            \"id\": 130\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"RCS_STATUS\",\n                    \"values\": [\n                        {\n                            \"name\": \"UNINITIALIZED_STATUS\",\n                            \"id\": -1\n                        },\n                        {\n                            \"name\": \"RCS_DONE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"RCS_EXEC\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"RCS_ERROR\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"RCS_RECEIVED\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"MsgOrigin\",\n                    \"values\": [\n                        {\n                            \"name\": \"MSG_KERNEL\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"MSG_RTUSER\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"MSG_ULAPI\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"MsgLevel\",\n                    \"values\": [\n                        {\n                            \"name\": \"RTAPI_MSG_NONE\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_ERR\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_WARN\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_INFO\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_DBG\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_ALL\",\n                            \"id\": 5\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"OriginDetail\",\n                    \"values\": [\n                        {\n                            \"name\": \"UNIX_SIGNAL\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"INSTANCE_SHUTDOWN\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"ZMQ_SOCKET\",\n                            \"id\": 70\n                        },\n                        {\n                            \"name\": \"NML_LAYER\",\n                            \"id\": 80\n                        },\n                        {\n                            \"name\": \"RCS_LAYER\",\n                            \"id\": 90\n                        },\n                        {\n                            \"name\": \"CMS_LAYER\",\n                            \"id\": 100\n                        },\n                        {\n                            \"name\": \"IP_LAYER\",\n                            \"id\": 110\n                        },\n                        {\n                            \"name\": \"TCP_LAYER\",\n                            \"id\": 120\n                        },\n                        {\n                            \"name\": \"PGM_LAYER\",\n                            \"id\": 130\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"OriginType\",\n                    \"values\": [\n                        {\n                            \"name\": \"PROCESS\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"USER_THREAD\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"RT_THREAD\",\n                            \"id\": 30\n                        },\n                        {\n                            \"name\": \"COMPONENT\",\n                            \"id\": 40\n                        },\n                        {\n                            \"name\": \"THREAD_FUNCTION\",\n                            \"id\": 50\n                        },\n                        {\n                            \"name\": \"COMPONENT_INIT\",\n                            \"id\": 60\n                        },\n                        {\n                            \"name\": \"COMPONENT_EXIT\",\n                            \"id\": 70\n                        },\n                        {\n                            \"name\": \"GROUP\",\n                            \"id\": 80\n                        },\n                        {\n                            \"name\": \"PIN\",\n                            \"id\": 90\n                        },\n                        {\n                            \"name\": \"SIGNAL\",\n                            \"id\": 100\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Severity\",\n                    \"values\": [\n                        {\n                            \"name\": \"S_INFORMATIONAL\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"S_WARNING\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"S_FAIL\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"StatusType\",\n                    \"values\": [\n                        {\n                            \"name\": \"ENQUEUED\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"PROCESSING\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"COMPLETE\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"FAILED\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ReplyType\",\n                    \"values\": [\n                        {\n                            \"name\": \"NONE\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"ON_RECEPTION\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"ON_QUEUED\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"ON_COMPLETION\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"ALL_STEPS\",\n                            \"id\": 255\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ServiceType\",\n                    \"values\": [\n                        {\n                            \"name\": \"ST_LOGGING\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"ST_CONFIG\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"ST_REDIS\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"ST_HTTP\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"ST_HTTPS\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"ST_WEBSOCKET\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"ST_WEBSOCKETS\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"ST_RTAPI_COMMAND\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"ST_STP_HALGROUP\",\n                            \"id\": 9\n                        },\n                        {\n                            \"name\": \"ST_STP_HALRCOMP\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"ST_STP_INTERP\",\n                            \"id\": 11\n                        },\n                        {\n                            \"name\": \"ST_STP_TASK\",\n                            \"id\": 12\n                        },\n                        {\n                            \"name\": \"ST_HAL_RCOMMAND\",\n                            \"id\": 13\n                        },\n                        {\n                            \"name\": \"ST_TASK_COMMAND\",\n                            \"id\": 14\n                        },\n                        {\n                            \"name\": \"ST_INTERP_COMMAND\",\n                            \"id\": 15\n                        },\n                        {\n                            \"name\": \"ST_MESSAGEBUS_COMMAND\",\n                            \"id\": 16\n                        },\n                        {\n                            \"name\": \"ST_MESSAGEBUS_RESPONSE\",\n                            \"id\": 17\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ServiceAPI\",\n                    \"values\": [\n                        {\n                            \"name\": \"SA_ZMQ_PROTOBUF\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"SA_WS_JSON\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ContainerType\",\n                    \"values\": [\n                        {\n                            \"name\": \"MT_RTMESSAGE\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"MT_MOTCMD\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"MT_MOTSTATUS\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"MT_LEGACY_MOTCMD\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"MT_LEGACY_MOTSTATUS\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"MT_WOU\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"MT_HALUPDATE\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_MESSAGE\",\n                            \"id\": 9\n                        },\n                        {\n                            \"name\": \"MT_LOG_MESSAGE\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"MT_PREVIEW\",\n                            \"id\": 11\n                        },\n                        {\n                            \"name\": \"MT_PROGRESS\",\n                            \"id\": 12\n                        },\n                        {\n                            \"name\": \"MT_INTERP_STAT\",\n                            \"id\": 13\n                        },\n                        {\n                            \"name\": \"MT_SYSLOG\",\n                            \"id\": 18\n                        },\n                        {\n                            \"name\": \"MT_LEGACY_NML\",\n                            \"id\": 19\n                        },\n                        {\n                            \"name\": \"MT_LEGACY_MOTCONFIG\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"MT_STP_UPDATE_FULL\",\n                            \"id\": 26\n                        },\n                        {\n                            \"name\": \"MT_STP_UPDATE\",\n                            \"id\": 28\n                        },\n                        {\n                            \"name\": \"MT_STP_NOGROUP\",\n                            \"id\": 27\n                        },\n                        {\n                            \"name\": \"MT_SHUTDOWN\",\n                            \"id\": 45\n                        },\n                        {\n                            \"name\": \"MT_CONFIRM_SHUTDOWN\",\n                            \"id\": 50\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE0\",\n                            \"id\": 30\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE1\",\n                            \"id\": 31\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE2\",\n                            \"id\": 32\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE3\",\n                            \"id\": 33\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE4\",\n                            \"id\": 34\n                        },\n                        {\n                            \"name\": \"MT_ASCII\",\n                            \"id\": 100\n                        },\n                        {\n                            \"name\": \"MT_UNICODE\",\n                            \"id\": 101\n                        },\n                        {\n                            \"name\": \"MT_GCODE\",\n                            \"id\": 102\n                        },\n                        {\n                            \"name\": \"MT_PYTHON\",\n                            \"id\": 103\n                        },\n                        {\n                            \"name\": \"MT_PICKLE\",\n                            \"id\": 104\n                        },\n                        {\n                            \"name\": \"MT_TCL\",\n                            \"id\": 105\n                        },\n                        {\n                            \"name\": \"MT_XML\",\n                            \"id\": 106\n                        },\n                        {\n                            \"name\": \"MT_JSON\",\n                            \"id\": 107\n                        },\n                        {\n                            \"name\": \"MT_JPEG\",\n                            \"id\": 108\n                        },\n                        {\n                            \"name\": \"MT_PNG\",\n                            \"id\": 109\n                        },\n                        {\n                            \"name\": \"MT_TIFF\",\n                            \"id\": 110\n                        },\n                        {\n                            \"name\": \"MT_POSTSCRIPT\",\n                            \"id\": 111\n                        },\n                        {\n                            \"name\": \"MT_SVG\",\n                            \"id\": 112\n                        },\n                        {\n                            \"name\": \"MT_ZMQ_SUBSCRIBE\",\n                            \"id\": 150\n                        },\n                        {\n                            \"name\": \"MT_ZMQ_UNSUBSCRIBE\",\n                            \"id\": 151\n                        },\n                        {\n                            \"name\": \"MT_PING\",\n                            \"id\": 210\n                        },\n                        {\n                            \"name\": \"MT_PING_ACKNOWLEDGE\",\n                            \"id\": 215\n                        },\n                        {\n                            \"name\": \"MT_REJECT\",\n                            \"id\": 220\n                        },\n                        {\n                            \"name\": \"MT_DONE\",\n                            \"id\": 240\n                        },\n                        {\n                            \"name\": \"MT_SERVICE_REQUEST\",\n                            \"id\": 250\n                        },\n                        {\n                            \"name\": \"MT_SERVICE_ANNOUNCEMENT\",\n                            \"id\": 251\n                        },\n                        {\n                            \"name\": \"MT_SERVICE_PROBE\",\n                            \"id\": 252\n                        },\n                        {\n                            \"name\": \"MT_MESSAGEBUS_NO_DESTINATION\",\n                            \"id\": 255\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_BIND\",\n                            \"id\": 256\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_BIND_CONFIRM\",\n                            \"id\": 257\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_BIND_REJECT\",\n                            \"id\": 258\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_SET\",\n                            \"id\": 259\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_SET_REJECT\",\n                            \"id\": 260\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_ACK\",\n                            \"id\": 263\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_SET\",\n                            \"id\": 265\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_SET_REJECT\",\n                            \"id\": 266\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_GET\",\n                            \"id\": 267\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_GET_REJECT\",\n                            \"id\": 268\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_CREATE\",\n                            \"id\": 269\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_CREATE_REJECT\",\n                            \"id\": 270\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_DELETE\",\n                            \"id\": 271\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_DELETE_REJECT\",\n                            \"id\": 272\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_ACK\",\n                            \"id\": 273\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_ERROR\",\n                            \"id\": 274\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_DESCRIBE\",\n                            \"id\": 276\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_DESCRIPTION\",\n                            \"id\": 277\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_FULL_UPDATE\",\n                            \"id\": 288\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_INCREMENTAL_UPDATE\",\n                            \"id\": 289\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_ERROR\",\n                            \"id\": 290\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_BIND\",\n                            \"id\": 294\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_BIND_CONFIRM\",\n                            \"id\": 295\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_BIND_REJECT\",\n                            \"id\": 296\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_FULL_UPDATE\",\n                            \"id\": 297\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_INCREMENTAL_UPDATE\",\n                            \"id\": 298\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_ERROR\",\n                            \"id\": 299\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_EXIT\",\n                            \"id\": 300\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_PING\",\n                            \"id\": 301\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_LOADRT\",\n                            \"id\": 302\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_LOG\",\n                            \"id\": 303\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_UNLOADRT\",\n                            \"id\": 305\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_NEWINST\",\n                            \"id\": 306\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_NEWTHREAD\",\n                            \"id\": 307\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_DELTHREAD\",\n                            \"id\": 308\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_CALLFUNC\",\n                            \"id\": 309\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_REPLY\",\n                            \"id\": 310\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_DELINST\",\n                            \"id\": 311\n                        },\n                        {\n                            \"name\": \"MT_LIST_APPLICATIONS\",\n                            \"id\": 350\n                        },\n                        {\n                            \"name\": \"MT_DESCRIBE_APPLICATION\",\n                            \"id\": 351\n                        },\n                        {\n                            \"name\": \"MT_RETRIEVE_APPLICATION\",\n                            \"id\": 352\n                        },\n                        {\n                            \"name\": \"MT_APPLICATION_DETAIL\",\n                            \"id\": 353\n                        },\n                        {\n                            \"name\": \"MT_ERROR\",\n                            \"id\": 360\n                        },\n                        {\n                            \"name\": \"MT_FULL_UPDATE\",\n                            \"id\": 370\n                        },\n                        {\n                            \"name\": \"MT_INCREMENTAL_UPDATE\",\n                            \"id\": 371\n                        },\n                        {\n                            \"name\": \"MT_TASK_REPLY\",\n                            \"id\": 400\n                        },\n                        {\n                            \"name\": \"MT_TICKET_UPDATE\",\n                            \"id\": 401\n                        },\n                        {\n                            \"name\": \"MT_CREDIT_UPDATE\",\n                            \"id\": 450\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_LOWER\",\n                            \"id\": 1000\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_UPPER\",\n                            \"id\": 1100\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ABORT\",\n                            \"id\": 1001\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_AXIS_ABORT\",\n                            \"id\": 1002\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ENABLE\",\n                            \"id\": 1003\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_DISABLE\",\n                            \"id\": 1004\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ENABLE_AMPLIFIER\",\n                            \"id\": 1005\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_DISABLE_AMPLIFIER\",\n                            \"id\": 1006\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ENABLE_WATCHDOG\",\n                            \"id\": 1007\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_DISABLE_WATCHDOG\",\n                            \"id\": 1008\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ACTIVATE_JOINT\",\n                            \"id\": 1009\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_DEACTIVATE_JOINT\",\n                            \"id\": 1010\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_PAUSE\",\n                            \"id\": 1011\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_RESUME\",\n                            \"id\": 1012\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_STEP\",\n                            \"id\": 1013\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_FREE\",\n                            \"id\": 1014\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COORD\",\n                            \"id\": 1015\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_TELEOP\",\n                            \"id\": 1016\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_SCALE\",\n                            \"id\": 1017\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SS_ENABLE\",\n                            \"id\": 1018\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_FEED_SCALE\",\n                            \"id\": 1019\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_FS_ENABLE\",\n                            \"id\": 1020\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_FH_ENABLE\",\n                            \"id\": 1021\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_AF_ENABLE\",\n                            \"id\": 1022\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_OVERRIDE_LIMITS\",\n                            \"id\": 1023\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_HOME\",\n                            \"id\": 1024\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_UNHOME\",\n                            \"id\": 1025\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_JOG_CONT\",\n                            \"id\": 1026\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_JOG_INCR\",\n                            \"id\": 1027\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_JOG_ABS\",\n                            \"id\": 1028\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_LINE\",\n                            \"id\": 1029\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_CIRCLE\",\n                            \"id\": 1030\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_TELEOP_VECTOR\",\n                            \"id\": 1031\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_CLEAR_PROBE_FLAGS\",\n                            \"id\": 1032\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_PROBE\",\n                            \"id\": 1033\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_RIGID_TAP\",\n                            \"id\": 1034\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_POSITION_LIMITS\",\n                            \"id\": 1035\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_BACKLASH\",\n                            \"id\": 1036\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_MIN_FERROR\",\n                            \"id\": 1037\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_MAX_FERROR\",\n                            \"id\": 1038\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_VEL\",\n                            \"id\": 1039\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_VEL_LIMIT\",\n                            \"id\": 1040\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_JOINT_VEL_LIMIT\",\n                            \"id\": 1041\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_JOINT_ACC_LIMIT\",\n                            \"id\": 1042\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_ACC\",\n                            \"id\": 1043\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_TERM_COND\",\n                            \"id\": 1044\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_NUM_AXES\",\n                            \"id\": 1045\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_WORLD_HOME\",\n                            \"id\": 1046\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_HOMING_PARAMS\",\n                            \"id\": 1047\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_DEBUG\",\n                            \"id\": 1048\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_DOUT\",\n                            \"id\": 1049\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_AOUT\",\n                            \"id\": 1050\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_SPINDLESYNC\",\n                            \"id\": 1051\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_ON\",\n                            \"id\": 1052\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_OFF\",\n                            \"id\": 1053\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_INCREASE\",\n                            \"id\": 1054\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_DECREASE\",\n                            \"id\": 1055\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_BRAKE_ENGAGE\",\n                            \"id\": 1056\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_BRAKE_RELEASE\",\n                            \"id\": 1057\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_MOTOR_OFFSET\",\n                            \"id\": 1058\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_JOINT_COMP\",\n                            \"id\": 1059\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_OFFSET\",\n                            \"id\": 1060\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_OK\",\n                            \"id\": 1061\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_UNKNOWN_COMMAND\",\n                            \"id\": 1062\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_INVALID_COMMAND\",\n                            \"id\": 1063\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_INVALID_PARAMS\",\n                            \"id\": 1064\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_BAD_EXEC\",\n                            \"id\": 1065\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_DISABLED\",\n                            \"id\": 1066\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_FREE\",\n                            \"id\": 1067\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_TELEOP\",\n                            \"id\": 1068\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_COORD\",\n                            \"id\": 1069\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_JOINT_FLAG\",\n                            \"id\": 1070\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_FLAG\",\n                            \"id\": 1071\n                        },\n                        {\n                            \"name\": \"MT_PRU_FIRMWARE\",\n                            \"id\": 2048\n                        },\n                        {\n                            \"name\": \"MT_MESA_5I20_FIRMWARE\",\n                            \"id\": 3000\n                        },\n                        {\n                            \"name\": \"MT_BLOB\",\n                            \"id\": 4000\n                        },\n                        {\n                            \"name\": \"MT_TEST1\",\n                            \"id\": 5001\n                        },\n                        {\n                            \"name\": \"MT_TEST2\",\n                            \"id\": 5002\n                        },\n                        {\n                            \"name\": \"MT_TEST3\",\n                            \"id\": 5003\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_LOWER\",\n                            \"id\": 10000\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_UPPER\",\n                            \"id\": 13000\n                        },\n                        {\n                            \"name\": \"MT_EMC_OPERATOR_ERROR\",\n                            \"id\": 10011\n                        },\n                        {\n                            \"name\": \"MT_EMC_OPERATOR_TEXT\",\n                            \"id\": 10012\n                        },\n                        {\n                            \"name\": \"MT_EMC_OPERATOR_DISPLAY\",\n                            \"id\": 10013\n                        },\n                        {\n                            \"name\": \"MT_EMC_NULL\",\n                            \"id\": 10021\n                        },\n                        {\n                            \"name\": \"MT_EMC_SET_DEBUG\",\n                            \"id\": 10022\n                        },\n                        {\n                            \"name\": \"MT_EMC_SYSTEM_CMD\",\n                            \"id\": 10030\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_AXIS\",\n                            \"id\": 10101\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_UNITS\",\n                            \"id\": 10102\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_MIN_POSITION_LIMIT\",\n                            \"id\": 10107\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_MAX_POSITION_LIMIT\",\n                            \"id\": 10108\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_START_CHANGE\",\n                            \"id\": 1110\n                        },\n                        {\n                            \"name\": \"MT_EMC_EXEC_PLUGIN_CALL\",\n                            \"id\": 1112\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_PLUGIN_CALL\",\n                            \"id\": 1113\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_FERROR\",\n                            \"id\": 10111\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_HOMING_PARAMS\",\n                            \"id\": 10112\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_MIN_FERROR\",\n                            \"id\": 10115\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_MAX_VELOCITY\",\n                            \"id\": 10116\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_INIT\",\n                            \"id\": 10118\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_HALT\",\n                            \"id\": 10119\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_ABORT\",\n                            \"id\": 10120\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_ENABLE\",\n                            \"id\": 10121\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_DISABLE\",\n                            \"id\": 10122\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_HOME\",\n                            \"id\": 10123\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_UNHOME\",\n                            \"id\": 10135\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_JOG\",\n                            \"id\": 10124\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_INCR_JOG\",\n                            \"id\": 10125\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_ABS_JOG\",\n                            \"id\": 10126\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_ACTIVATE\",\n                            \"id\": 10127\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_DEACTIVATE\",\n                            \"id\": 10128\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_OVERRIDE_LIMITS\",\n                            \"id\": 10129\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_LOAD_COMP\",\n                            \"id\": 10131\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_BACKLASH\",\n                            \"id\": 10134\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_STAT\",\n                            \"id\": 10199\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_AXES\",\n                            \"id\": 10201\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_UNITS\",\n                            \"id\": 10202\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_CYCLE_TIME\",\n                            \"id\": 10203\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_MODE\",\n                            \"id\": 10204\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_VELOCITY\",\n                            \"id\": 10205\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_ACCELERATION\",\n                            \"id\": 10206\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_MAX_VELOCITY\",\n                            \"id\": 10207\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_MAX_ACCELERATION\",\n                            \"id\": 10208\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_SCALE\",\n                            \"id\": 10209\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_MOTION_ID\",\n                            \"id\": 10210\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_INIT\",\n                            \"id\": 10211\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_HALT\",\n                            \"id\": 10212\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_ENABLE\",\n                            \"id\": 10213\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_DISABLE\",\n                            \"id\": 10214\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_ABORT\",\n                            \"id\": 10215\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_PAUSE\",\n                            \"id\": 10216\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_STEP\",\n                            \"id\": 10217\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_RESUME\",\n                            \"id\": 10218\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_DELAY\",\n                            \"id\": 10219\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_LINEAR_MOVE\",\n                            \"id\": 10220\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_CIRCULAR_MOVE\",\n                            \"id\": 10221\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_TERM_COND\",\n                            \"id\": 10222\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_OFFSET\",\n                            \"id\": 10223\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_G5X\",\n                            \"id\": 10224\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_HOME\",\n                            \"id\": 10225\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_ROTATION\",\n                            \"id\": 10226\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_G92\",\n                            \"id\": 10227\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_CLEAR_PROBE_TRIPPED_FLAG\",\n                            \"id\": 10228\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_PROBE\",\n                            \"id\": 10229\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_TELEOP_ENABLE\",\n                            \"id\": 10230\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_TELEOP_VECTOR\",\n                            \"id\": 10231\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_SPINDLESYNC\",\n                            \"id\": 10232\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_SPINDLE_SCALE\",\n                            \"id\": 10233\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_FO_ENABLE\",\n                            \"id\": 10234\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_SO_ENABLE\",\n                            \"id\": 10235\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_FH_ENABLE\",\n                            \"id\": 10236\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_RIGID_TAP\",\n                            \"id\": 10237\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_STAT\",\n                            \"id\": 10299\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_INIT\",\n                            \"id\": 10301\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_HALT\",\n                            \"id\": 10302\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_ABORT\",\n                            \"id\": 10303\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_SET_AOUT\",\n                            \"id\": 10304\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_SET_DOUT\",\n                            \"id\": 10305\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_ADAPTIVE\",\n                            \"id\": 10306\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_ORIENT\",\n                            \"id\": 10317\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_WAIT_ORIENT_COMPLETE\",\n                            \"id\": 10318\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_STAT\",\n                            \"id\": 10399\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_INIT\",\n                            \"id\": 10501\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_HALT\",\n                            \"id\": 10502\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_ABORT\",\n                            \"id\": 10503\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_SET_MODE\",\n                            \"id\": 10504\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_SET_STATE\",\n                            \"id\": 10505\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_OPEN\",\n                            \"id\": 10506\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_RUN\",\n                            \"id\": 10507\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_READ\",\n                            \"id\": 10508\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_EXECUTE\",\n                            \"id\": 10509\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_PAUSE\",\n                            \"id\": 10510\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_STEP\",\n                            \"id\": 10511\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_RESUME\",\n                            \"id\": 10512\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_END\",\n                            \"id\": 10513\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_CLOSE\",\n                            \"id\": 10514\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_INIT\",\n                            \"id\": 10515\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_SYNCH\",\n                            \"id\": 10516\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_SET_OPTIONAL_STOP\",\n                            \"id\": 10517\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_SET_BLOCK_DELETE\",\n                            \"id\": 10518\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_OPTIONAL_STOP\",\n                            \"id\": 10519\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_RESET\",\n                            \"id\": 10520\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_REPLY\",\n                            \"id\": 10530\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_STAT\",\n                            \"id\": 10599\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_INIT\",\n                            \"id\": 11101\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_HALT\",\n                            \"id\": 11102\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_ABORT\",\n                            \"id\": 11103\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_PREPARE\",\n                            \"id\": 11104\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_LOAD\",\n                            \"id\": 11105\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_UNLOAD\",\n                            \"id\": 11106\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_LOAD_TOOL_TABLE\",\n                            \"id\": 11107\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_SET_OFFSET\",\n                            \"id\": 11108\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_SET_NUMBER\",\n                            \"id\": 11109\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_UPDATE_TOOL_TABLE\",\n                            \"id\": 11110\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_STAT\",\n                            \"id\": 11199\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_ESTOP_ON\",\n                            \"id\": 11206\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_ESTOP_OFF\",\n                            \"id\": 11207\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_ESTOP_RESET\",\n                            \"id\": 11208\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_INPUT_WAIT\",\n                            \"id\": 11209\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_STAT\",\n                            \"id\": 11299\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_ON\",\n                            \"id\": 11304\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_OFF\",\n                            \"id\": 11305\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_INCREASE\",\n                            \"id\": 11309\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_DECREASE\",\n                            \"id\": 11310\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_CONSTANT\",\n                            \"id\": 11311\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_BRAKE_RELEASE\",\n                            \"id\": 11312\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_BRAKE_ENGAGE\",\n                            \"id\": 11313\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_SPEED\",\n                            \"id\": 11316\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_STAT\",\n                            \"id\": 11399\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_MIST_ON\",\n                            \"id\": 11404\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_MIST_OFF\",\n                            \"id\": 11405\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_FLOOD_ON\",\n                            \"id\": 11406\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_FLOOD_OFF\",\n                            \"id\": 11407\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_STAT\",\n                            \"id\": 11499\n                        },\n                        {\n                            \"name\": \"MT_EMC_LUBE_ON\",\n                            \"id\": 11504\n                        },\n                        {\n                            \"name\": \"MT_EMC_LUBE_OFF\",\n                            \"id\": 11505\n                        },\n                        {\n                            \"name\": \"MT_EMC_LUBE_STAT\",\n                            \"id\": 11599\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_INIT\",\n                            \"id\": 11601\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_HALT\",\n                            \"id\": 11602\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_ABORT\",\n                            \"id\": 11603\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_SET_CYCLE_TIME\",\n                            \"id\": 11604\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_STAT\",\n                            \"id\": 11699\n                        },\n                        {\n                            \"name\": \"MT_EMC_INIT\",\n                            \"id\": 11901\n                        },\n                        {\n                            \"name\": \"MT_EMC_HALT\",\n                            \"id\": 11902\n                        },\n                        {\n                            \"name\": \"MT_EMC_ABORT\",\n                            \"id\": 11903\n                        },\n                        {\n                            \"name\": \"MT_EMC_STAT\",\n                            \"id\": 11999\n                        },\n                        {\n                            \"name\": \"MT_EMCSTAT_FULL_UPDATE\",\n                            \"id\": 12500\n                        },\n                        {\n                            \"name\": \"MT_EMCSTAT_INCREMENTAL_UPDATE\",\n                            \"id\": 12501\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_ERROR\",\n                            \"id\": 12510\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_TEXT\",\n                            \"id\": 12511\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_DISPLAY\",\n                            \"id\": 12512\n                        },\n                        {\n                            \"name\": \"MT_EMCCMD_EXECUTED\",\n                            \"id\": 12520\n                        },\n                        {\n                            \"name\": \"MT_EMCCMD_COMPLETED\",\n                            \"id\": 12521\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_FULL_UPDATE\",\n                            \"id\": 12600\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_INCREMENTAL_UPDATE\",\n                            \"id\": 12601\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_ERROR\",\n                            \"id\": 12602\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_START\",\n                            \"id\": 12610\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_TERMINATE\",\n                            \"id\": 12611\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_KILL\",\n                            \"id\": 12612\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_WRITE_STDIN\",\n                            \"id\": 12613\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_CALL\",\n                            \"id\": 12614\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_SHUTDOWN\",\n                            \"id\": 12615\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"OriginIndex\",\n                    \"values\": [\n                        {\n                            \"name\": \"ORIGIN_UNKNOWN\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"ORIGIN_G54\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"ORIGIN_G55\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"ORIGIN_G56\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"ORIGIN_G57\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"ORIGIN_G58\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"ORIGIN_G59\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"ORIGIN_G59_1\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"ORIGIN_G59_2\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"ORIGIN_G59_3\",\n                            \"id\": 9\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"TermConditionType\",\n                    \"values\": [\n                        {\n                            \"name\": \"_EMC_TRAJ_TERM_COND_STOP\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"_EMC_TRAJ_TERM_COND_BLEND\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"CanonDirection\",\n                    \"values\": [\n                        {\n                            \"name\": \"_CANON_STOPPED\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"_CANON_CLOCKWISE\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"_CANON_COUNTERCLOCKWISE\",\n                            \"id\": 3\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"InputType\",\n                    \"values\": [\n                        {\n                            \"name\": \"_ANALOG_INPUT\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"_DIGITAL_INPUT\",\n                            \"id\": 1\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"WaitType\",\n                    \"values\": [\n                        {\n                            \"name\": \"IMMEDIATE\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"RISE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"FALL\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"BE_HIGH\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"BE_LOW\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"InterpreterStateType\",\n                    \"values\": [\n                        {\n                            \"name\": \"INTERP_IDLE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"INTERP_RUNNING\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"INTERP_SYNC_WAIT\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"INTERP_PAUSED\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"INTERP_QUEUE_WAIT\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"INTERP_ABORT_WAIT\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"INTERP_STATE_UNSET\",\n                            \"id\": 99\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"KinematicsType\",\n                    \"values\": [\n                        {\n                            \"name\": \"KT_JOINT\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"KT_TRIVKINS\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"KT_DELTA\",\n                            \"id\": 3\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"PreviewOpType\",\n                    \"values\": [\n                        {\n                            \"name\": \"PV_STRAIGHT_PROBE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"PV_RIGID_TAP\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"PV_STRAIGHT_FEED\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"PV_ARC_FEED\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"PV_STRAIGHT_TRAVERSE\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"PV_SET_G5X_OFFSET\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"PV_SET_G92_OFFSET\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"PV_SET_XY_ROTATION\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"PV_SELECT_PLANE\",\n                            \"id\": 9\n                        },\n                        {\n                            \"name\": \"PV_SET_TRAVERSE_RATE\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"PV_SET_FEED_RATE\",\n                            \"id\": 11\n                        },\n                        {\n                            \"name\": \"PV_CHANGE_TOOL\",\n                            \"id\": 12\n                        },\n                        {\n                            \"name\": \"PV_CHANGE_TOOL_NUMBER\",\n                            \"id\": 13\n                        },\n                        {\n                            \"name\": \"PV_DWELL\",\n                            \"id\": 14\n                        },\n                        {\n                            \"name\": \"PV_MESSAGE\",\n                            \"id\": 15\n                        },\n                        {\n                            \"name\": \"PV_COMMENT\",\n                            \"id\": 16\n                        },\n                        {\n                            \"name\": \"PV_USE_TOOL_OFFSET\",\n                            \"id\": 17\n                        },\n                        {\n                            \"name\": \"PV_SET_PARAMS\",\n                            \"id\": 18\n                        },\n                        {\n                            \"name\": \"PV_SET_FEED_MODE\",\n                            \"id\": 19\n                        },\n                        {\n                            \"name\": \"PV_SOURCE_CONTEXT\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"PV_PREVIEW_START\",\n                            \"id\": 21\n                        },\n                        {\n                            \"name\": \"PV_PREVIEW_END\",\n                            \"id\": 22\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"SourceType\",\n                    \"values\": [\n                        {\n                            \"name\": \"ST_NGC_FILE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"ST_NGC_STRING\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"ST_PYTHON_METHOD\",\n                            \"id\": 3\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"MotionType\",\n                    \"values\": [\n                        {\n                            \"name\": \"_EMC_MOTION_TYPE_NONE\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"_EMC_MOTION_TYPE_TRAVERSE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"_EMC_MOTION_TYPE_FEED\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"_EMC_MOTION_TYPE_ARC\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"_EMC_MOTION_TYPE_TOOLCHANGE\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"_EMC_MOTION_TYPE_PROBING\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"_EMC_MOTION_TYPE_INDEXROTARY\",\n                            \"id\": 6\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"cmd_code_t\",\n                    \"values\": [\n                        {\n                            \"name\": \"EMCMOT_ABORT\",\n                            \"id\": 4000\n                        },\n                        {\n                            \"name\": \"EMCMOT_AXIS_ABORT\",\n                            \"id\": 4001\n                        },\n                        {\n                            \"name\": \"EMCMOT_ENABLE\",\n                            \"id\": 4002\n                        },\n                        {\n                            \"name\": \"EMCMOT_DISABLE\",\n                            \"id\": 4003\n                        },\n                        {\n                            \"name\": \"EMCMOT_ENABLE_AMPLIFIER\",\n                            \"id\": 4004\n                        },\n                        {\n                            \"name\": \"EMCMOT_DISABLE_AMPLIFIER\",\n                            \"id\": 4005\n                        },\n                        {\n                            \"name\": \"EMCMOT_ENABLE_WATCHDOG\",\n                            \"id\": 4006\n                        },\n                        {\n                            \"name\": \"EMCMOT_DISABLE_WATCHDOG\",\n                            \"id\": 4007\n                        },\n                        {\n                            \"name\": \"EMCMOT_ACTIVATE_JOINT\",\n                            \"id\": 4008\n                        },\n                        {\n                            \"name\": \"EMCMOT_DEACTIVATE_JOINT\",\n                            \"id\": 4009\n                        },\n                        {\n                            \"name\": \"EMCMOT_PAUSE\",\n                            \"id\": 4010\n                        },\n                        {\n                            \"name\": \"EMCMOT_RESUME\",\n                            \"id\": 4011\n                        },\n                        {\n                            \"name\": \"EMCMOT_STEP\",\n                            \"id\": 4012\n                        },\n                        {\n                            \"name\": \"EMCMOT_FREE\",\n                            \"id\": 4013\n                        },\n                        {\n                            \"name\": \"EMCMOT_COORD\",\n                            \"id\": 4014\n                        },\n                        {\n                            \"name\": \"EMCMOT_TELEOP\",\n                            \"id\": 4015\n                        },\n                        {\n                            \"name\": \"EMCMOT_SPINDLE_SCALE\",\n                            \"id\": 4016\n                        },\n                        {\n                            \"name\": \"EMCMOT_SS_ENABLE\",\n                            \"id\": 4017\n                        },\n                        {\n                            \"name\": \"EMCMOT_FEED_SCALE\",\n                            \"id\": 4018\n                        },\n                        {\n                            \"name\": \"EMCMOT_FS_ENABLE\",\n                            \"id\": 4019\n                        },\n                        {\n                            \"name\": \"EMCMOT_FH_ENABLE\",\n                            \"id\": 4020\n                        },\n                        {\n                            \"name\": \"EMCMOT_AF_ENABLE\",\n                            \"id\": 4021\n                        },\n                        {\n                            \"name\": \"EMCMOT_OVERRIDE_LIMITS\",\n                            \"id\": 4022\n                        },\n                        {\n                            \"name\": \"EMCMOT_HOME\",\n                            \"id\": 4023\n                        },\n                        {\n                            \"name\": \"EMCMOT_UNHOME\",\n                            \"id\": 4024\n                        },\n                        {\n                            \"name\": \"EMCMOT_JOG_CONT\",\n                            \"id\": 4025\n                        },\n                        {\n                            \"name\": \"EMCMOT_JOG_INCR\",\n                            \"id\": 4026\n                        },\n                        {\n                            \"name\": \"EMCMOT_JOG_ABS\",\n                            \"id\": 4027\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_LINE\",\n                            \"id\": 4028\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_CIRCLE\",\n                            \"id\": 4029\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_TELEOP_VECTOR\",\n                            \"id\": 4030\n                        },\n                        {\n                            \"name\": \"EMCMOT_CLEAR_PROBE_FLAGS\",\n                            \"id\": 4031\n                        },\n                        {\n                            \"name\": \"EMCMOT_PROBE\",\n                            \"id\": 4032\n                        },\n                        {\n                            \"name\": \"EMCMOT_RIGID_TAP\",\n                            \"id\": 4033\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_POSITION_LIMITS\",\n                            \"id\": 4034\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_BACKLASH\",\n                            \"id\": 4035\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_MIN_FERROR\",\n                            \"id\": 4036\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_MAX_FERROR\",\n                            \"id\": 4037\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_VEL\",\n                            \"id\": 4038\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_VEL_LIMIT\",\n                            \"id\": 4039\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_JOINT_VEL_LIMIT\",\n                            \"id\": 4040\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_JOINT_ACC_LIMIT\",\n                            \"id\": 4041\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_ACC\",\n                            \"id\": 4042\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_TERM_COND\",\n                            \"id\": 4043\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_NUM_AXES\",\n                            \"id\": 4044\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_WORLD_HOME\",\n                            \"id\": 4045\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_HOMING_PARAMS\",\n                            \"id\": 4046\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_DEBUG\",\n                            \"id\": 4047\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_DOUT\",\n                            \"id\": 4048\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_AOUT\",\n                            \"id\": 4049\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_SPINDLESYNC\",\n                            \"id\": 4050\n                        },\n                        {\n                            \"name\": \"EMCMOT_SPINDLE_ON\",\n                            \"id\": 4051\n                        },\n                        {\n                            \"name\": \"EMCMOT_SPINDLE_OFF\",\n                            \"id\": 4052\n                        },\n                        {\n                            \"name\": \"EMCMOT_SPINDLE_INCREASE\",\n                            \"id\": 4053\n                        },\n                        {\n                            \"name\": \"EMCMOT_SPINDLE_DECREASE\",\n                            \"id\": 4054\n                        },\n                        {\n                            \"name\": \"EMCMOT_SPINDLE_BRAKE_ENGAGE\",\n                            \"id\": 4055\n                        },\n                        {\n                            \"name\": \"EMCMOT_SPINDLE_BRAKE_RELEASE\",\n                            \"id\": 4056\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_MOTOR_OFFSET\",\n                            \"id\": 4057\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_JOINT_COMP\",\n                            \"id\": 4058\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_OFFSET\",\n                            \"id\": 4059\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"cmd_status_t\",\n                    \"values\": [\n                        {\n                            \"name\": \"EMCMOT_COMMAND_OK\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"EMCMOT_COMMAND_UNKNOWN_COMMAND\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"EMCMOT_COMMAND_INVALID_COMMAND\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"EMCMOT_COMMAND_INVALID_PARAMS\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"EMCMOT_COMMAND_BAD_EXEC\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcTaskExecStateType\",\n                    \"values\": [\n                        {\n                            \"name\": \"EMC_TASK_EXEC_ERROR\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"EMC_TASK_EXEC_DONE\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"EMC_TASK_EXEC_WAITING_FOR_MOTION\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"EMC_TASK_EXEC_WAITING_FOR_MOTION_QUEUE\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"EMC_TASK_EXEC_WAITING_FOR_IO\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"EMC_TASK_EXEC_WAITING_FOR_MOTION_AND_IO\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"EMC_TASK_EXEC_WAITING_FOR_DELAY\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"EMC_TASK_EXEC_WAITING_FOR_SYSTEM_CMD\",\n                            \"id\": 9\n                        },\n                        {\n                            \"name\": \"EMC_TASK_EXEC_WAITING_FOR_SPINDLE_ORIENTED\",\n                            \"id\": 10\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcInterpStateType\",\n                    \"values\": [\n                        {\n                            \"name\": \"EMC_TASK_INTERP_IDLE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"EMC_TASK_INTERP_READING\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"EMC_TASK_INTERP_PAUSED\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"EMC_TASK_INTERP_WAITING\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcInterpExitCodeType\",\n                    \"values\": [\n                        {\n                            \"name\": \"EMC_INTERP_EXIT_OK\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"EMC_INTERP_EXIT_EXIT\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"EMC_INTERP_EXIT_EXECUTE_FINISH\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"EMC_INTERP_EXIT_ENDFILE\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"EMC_INTERP_EXIT_FILE_NOT_OPEN\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"EMC_INTERP_EXIT_ERROR\",\n                            \"id\": 5\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcKinematicsType\",\n                    \"values\": [\n                        {\n                            \"name\": \"KINEMATICS_IDENTITY\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"KINEMATICS_FORWARD_ONLY\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"KINEMATICS_INVERSE_ONLY\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"KINEMATICS_BOTH\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcTrajectoryModeType\",\n                    \"values\": [\n                        {\n                            \"name\": \"EMC_TRAJ_MODE_FREE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"EMC_TRAJ_MODE_COORD\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"EMC_TRAJ_MODE_TELEOP\",\n                            \"id\": 3\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcCanonUnitsType\",\n                    \"values\": [\n                        {\n                            \"name\": \"CANON_UNITS_INCH\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"CANON_UNITS_MM\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"CANON_UNITS_CM\",\n                            \"id\": 3\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcLinearUnitsType\",\n                    \"values\": [\n                        {\n                            \"name\": \"LINEAR_UNITS_INCH\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"LINEAR_UNITS_MM\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"LINEAR_UNITS_CM\",\n                            \"id\": 3\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcAngularUnitsType\",\n                    \"values\": [\n                        {\n                            \"name\": \"ANGULAR_UNITS_DEGREES\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"ANGULAR_UNITS_RADIAN\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"ANGULAR_UNITS_GRAD\",\n                            \"id\": 3\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcTimeUnitsType\",\n                    \"values\": [\n                        {\n                            \"name\": \"TIME_UNITS_MINUTE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"TIME_UNITS_SECOND\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcTaskModeType\",\n                    \"values\": [\n                        {\n                            \"name\": \"EMC_TASK_MODE_MANUAL\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"EMC_TASK_MODE_AUTO\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"EMC_TASK_MODE_MDI\",\n                            \"id\": 3\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcTaskStateType\",\n                    \"values\": [\n                        {\n                            \"name\": \"EMC_TASK_STATE_ESTOP\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"EMC_TASK_STATE_ESTOP_RESET\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"EMC_TASK_STATE_OFF\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"EMC_TASK_STATE_ON\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcAxisType\",\n                    \"values\": [\n                        {\n                            \"name\": \"EMC_AXIS_LINEAR\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"EMC_AXIS_ANGULAR\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcPositionOffsetType\",\n                    \"values\": [\n                        {\n                            \"name\": \"EMC_CONFIG_RELATIVE_OFFSET\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"EMC_CONFIG_MACHINE_OFFSET\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcPositionFeedbackType\",\n                    \"values\": [\n                        {\n                            \"name\": \"EMC_CONFIG_ACTUAL_FEEDBACK\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"EMC_CONFIG_COMMANDED_FEEDBACK\",\n                            \"id\": 2\n                        }\n                    ]\n                }\n            ]\n        }\n    ],\n    \"enums\": [\n        {\n            \"name\": \"FieldType\",\n            \"values\": [\n                {\n                    \"name\": \"FT_DEFAULT\",\n                    \"id\": 0\n                },\n                {\n                    \"name\": \"FT_CALLBACK\",\n                    \"id\": 1\n                },\n                {\n                    \"name\": \"FT_POINTER\",\n                    \"id\": 4\n                },\n                {\n                    \"name\": \"FT_STATIC\",\n                    \"id\": 2\n                },\n                {\n                    \"name\": \"FT_IGNORE\",\n                    \"id\": 3\n                }\n            ]\n        },\n        {\n            \"name\": \"IntSize\",\n            \"values\": [\n                {\n                    \"name\": \"IS_DEFAULT\",\n                    \"id\": 0\n                },\n                {\n                    \"name\": \"IS_8\",\n                    \"id\": 8\n                },\n                {\n                    \"name\": \"IS_16\",\n                    \"id\": 16\n                },\n                {\n                    \"name\": \"IS_32\",\n                    \"id\": 32\n                },\n                {\n                    \"name\": \"IS_64\",\n                    \"id\": 64\n                }\n            ]\n        }\n    ]\n}).build();","module.exports = require(\"protobufjs\").newBuilder({})['import']({\n    \"package\": null,\n    \"options\": {\n        \"java_package\": \"fi.kapsi.koti.jpa.nanopb\"\n    },\n    \"messages\": [\n        {\n            \"name\": \"NanoPBOptions\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"max_size\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"max_count\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"IntSize\",\n                    \"name\": \"int_size\",\n                    \"id\": 7,\n                    \"options\": {\n                        \"default\": \"IS_DEFAULT\"\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"FieldType\",\n                    \"name\": \"type\",\n                    \"id\": 3,\n                    \"options\": {\n                        \"default\": \"FT_DEFAULT\"\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"long_names\",\n                    \"id\": 4,\n                    \"options\": {\n                        \"default\": true\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"packed_struct\",\n                    \"id\": 5,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"skip_message\",\n                    \"id\": 6,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"no_unions\",\n                    \"id\": 8,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"uint32\",\n                    \"name\": \"msgid\",\n                    \"id\": 9\n                }\n            ]\n        },\n        {\n            \"name\": \"machinetalk\",\n            \"fields\": [],\n            \"messages\": [\n                {\n                    \"name\": \"Instance\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 700\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"name\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"id\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ServiceAnnouncement\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 701\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"ServiceType\",\n                            \"name\": \"stype\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"version\",\n                            \"id\": 2,\n                            \"options\": {\n                                \"default\": 0\n                            }\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"instance\",\n                            \"id\": 3,\n                            \"options\": {\n                                \"default\": 0\n                            }\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"ServiceAPI\",\n                            \"name\": \"api\",\n                            \"id\": 8\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"string\",\n                            \"name\": \"uri\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"description\",\n                            \"id\": 7\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Originator\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 702\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"OriginType\",\n                            \"name\": \"origin\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"OriginDetail\",\n                            \"name\": \"detail\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"name\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"id\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Instance\",\n                            \"name\": \"instance\",\n                            \"id\": 5\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"AnError\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 703\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"error_code\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Severity\",\n                            \"name\": \"severity\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"error_text\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Originator\",\n                            \"name\": \"origin\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Pin\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 704\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"ValueType\",\n                            \"name\": \"type\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"name\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"handle\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"HalPinDirection\",\n                            \"name\": \"dir\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"halbit\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"halfloat\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"hals32\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"halu32\",\n                            \"id\": 8\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"owner\",\n                            \"id\": 9\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"linked\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"oldname\",\n                            \"id\": 11\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"epsilon\",\n                            \"id\": 12\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"flags\",\n                            \"id\": 13\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Signal\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 705\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"ValueType\",\n                            \"name\": \"type\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"name\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"handle\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"halbit\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"halfloat\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"hals32\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"halu32\",\n                            \"id\": 8\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"strval\",\n                            \"id\": 9\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bytes\",\n                            \"name\": \"blob\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"readers\",\n                            \"id\": 11\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"writers\",\n                            \"id\": 12\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"bidirs\",\n                            \"id\": 13\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Param\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 706\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"ValueType\",\n                            \"name\": \"type\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"name\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"handle\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"halbit\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"halfloat\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"hals32\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"halu32\",\n                            \"id\": 8\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"strval\",\n                            \"id\": 9\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bytes\",\n                            \"name\": \"blob\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"HalParamDirection\",\n                            \"name\": \"dir\",\n                            \"id\": 11\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"oldname\",\n                            \"id\": 12\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"owner\",\n                            \"id\": 13\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"runtime\",\n                            \"id\": 14\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"maytime\",\n                            \"id\": 15\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Function\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 707\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"name\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"handle\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"owner_id\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"users\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"runtime\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"maxtime\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"reentrant\",\n                            \"id\": 7\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Thread\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 708\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"name\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"handle\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"uses_fp\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"period\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"priority\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"task_id\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"cpu_id\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"string\",\n                            \"name\": \"function\",\n                            \"id\": 8\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Component\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 709\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"name\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"ninst\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"comp_id\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"type\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"state\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"last_update\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"last_bound\",\n                            \"id\": 8\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"last_unbound\",\n                            \"id\": 9\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"pid\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"args\",\n                            \"id\": 11\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"timer\",\n                            \"id\": 12\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"userarg1\",\n                            \"id\": 14\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"userarg2\",\n                            \"id\": 15\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"Pin\",\n                            \"name\": \"pin\",\n                            \"id\": 16\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"Param\",\n                            \"name\": \"param\",\n                            \"id\": 17\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"no_create\",\n                            \"id\": 18\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Ring\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 710\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"name\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"handle\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"owner\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"stream\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"wmutex\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"rmutex\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"rtapi_shm\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"reader\",\n                            \"id\": 8\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"writer\",\n                            \"id\": 9\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"size\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"scratchpad\",\n                            \"id\": 11\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Member\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 711\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"ObjectType\",\n                            \"name\": \"mtype\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"userarg1\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"epsilon\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Signal\",\n                            \"name\": \"signal\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"groupname\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"handle\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Pin\",\n                            \"name\": \"pin\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Param\",\n                            \"name\": \"param\",\n                            \"id\": 8\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Group\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 712\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"name\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"handle\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"userarg1\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"userarg2\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"refcount\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"Member\",\n                            \"name\": \"member\",\n                            \"id\": 7\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ProtocolParameters\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 713\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"keepalive_timer\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"group_timer\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"rcomp_timer\",\n                            \"id\": 3\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Vtable\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 714\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"name\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"context\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"comp_id\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"instance_id\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"handle\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"refcount\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"version\",\n                            \"id\": 8\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed64\",\n                            \"name\": \"vtable\",\n                            \"id\": 9\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Inst\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 715\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"name\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"comp_id\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"inst_id\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"inst_size\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed64\",\n                            \"name\": \"vtable\",\n                            \"id\": 5\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"LogMessage\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 400\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"MsgOrigin\",\n                            \"name\": \"origin\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"pid\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"MsgLevel\",\n                            \"name\": \"level\",\n                            \"id\": 30\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"string\",\n                            \"name\": \"tag\",\n                            \"id\": 40\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"string\",\n                            \"name\": \"text\",\n                            \"id\": 50\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"PmCartesian\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 300\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"x\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"y\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"z\",\n                            \"id\": 30\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcPose\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 301\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"PmCartesian\",\n                            \"name\": \"tran\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"a\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"b\",\n                            \"id\": 30\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"c\",\n                            \"id\": 40\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"u\",\n                            \"id\": 50\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"v\",\n                            \"id\": 60\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"w\",\n                            \"id\": 70\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"MotionCommand\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 600\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"cmd_code_t\",\n                            \"name\": \"command\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"commandNum\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"motor_offset\",\n                            \"id\": 30\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"maxLimit\",\n                            \"id\": 40\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"minLimit\",\n                            \"id\": 50\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcPose\",\n                            \"name\": \"pos\",\n                            \"id\": 60\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"PmCartesian\",\n                            \"name\": \"center\",\n                            \"id\": 70\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"PmCartesian\",\n                            \"name\": \"normal\",\n                            \"id\": 80\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"turn\",\n                            \"id\": 90\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"vel\",\n                            \"id\": 100\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"ini_maxvel\",\n                            \"id\": 110\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"MotionType\",\n                            \"name\": \"motion_type\",\n                            \"id\": 120\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"spindlesync\",\n                            \"id\": 130\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"acc\",\n                            \"id\": 140\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"backlash\",\n                            \"id\": 150\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"id\",\n                            \"id\": 160\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"termCond\",\n                            \"id\": 170\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"tolerance\",\n                            \"id\": 180\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"axis\",\n                            \"id\": 190\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"scale\",\n                            \"id\": 200\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"offset\",\n                            \"id\": 210\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"home\",\n                            \"id\": 220\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"home_final_vel\",\n                            \"id\": 230\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"search_vel\",\n                            \"id\": 240\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"latch_vel\",\n                            \"id\": 250\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"flags\",\n                            \"id\": 260\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"home_sequence\",\n                            \"id\": 270\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"volatile_home\",\n                            \"id\": 280\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"minFerror\",\n                            \"id\": 290\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"maxFerror\",\n                            \"id\": 300\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"wdWait\",\n                            \"id\": 310\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"debug\",\n                            \"id\": 320\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"now\",\n                            \"id\": 330\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"out\",\n                            \"id\": 340\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"start\",\n                            \"id\": 350\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"end\",\n                            \"id\": 360\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"mode\",\n                            \"id\": 370\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"comp_nominal\",\n                            \"id\": 380\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"comp_forward\",\n                            \"id\": 390\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"comp_reverse\",\n                            \"id\": 400\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"probe_type\",\n                            \"id\": 410\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcPose\",\n                            \"name\": \"tool_offset\",\n                            \"id\": 420\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"MotionStatus\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 601\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"cmd_code_t\",\n                            \"name\": \"commandEcho\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"commandNumEcho\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"cmd_status_t\",\n                            \"name\": \"commandStatus\",\n                            \"id\": 30\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcPose\",\n                            \"name\": \"carte_pos_fb\",\n                            \"id\": 40\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"TaskPlanExecute\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1200\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"command\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"line\",\n                            \"id\": 30\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"TaskPlanBlockDelete\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1201\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"bool\",\n                            \"name\": \"state\",\n                            \"id\": 10\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"TaskPlanOptionalStop\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1202\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"bool\",\n                            \"name\": \"state\",\n                            \"id\": 10\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"TaskPlanOpen\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1203\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"string\",\n                            \"name\": \"filename\",\n                            \"id\": 10\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"TaskPlanReply\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1204\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"ContainerType\",\n                            \"name\": \"cmd\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"errormsg\",\n                            \"id\": 20\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"TaskReply\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1205\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"ticket\",\n                            \"id\": 10\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"TicketUpdate\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1206\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"cticket\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"RCS_STATUS\",\n                            \"name\": \"status\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"text\",\n                            \"id\": 30\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Traj_Set_G5x\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 100\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"EmcPose\",\n                            \"name\": \"origin\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"OriginIndex\",\n                            \"name\": \"g5x_index\",\n                            \"id\": 20\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Traj_Set_G92\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 101\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"EmcPose\",\n                            \"name\": \"origin\",\n                            \"id\": 10\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Traj_Set_Rotation\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 102\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"rotation\",\n                            \"id\": 10\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Traj_Linear_Move\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 103\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"MotionType\",\n                            \"name\": \"type\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"EmcPose\",\n                            \"name\": \"end\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"vel\",\n                            \"id\": 30\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"ini_maxvel\",\n                            \"id\": 40\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"acc\",\n                            \"id\": 50\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"bool\",\n                            \"name\": \"feed_mode\",\n                            \"id\": 60\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"indexrotary\",\n                            \"id\": 70\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Traj_Probe\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 104\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"MotionType\",\n                            \"name\": \"type\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"EmcPose\",\n                            \"name\": \"pos\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"vel\",\n                            \"id\": 30\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"ini_maxvel\",\n                            \"id\": 40\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"acc\",\n                            \"id\": 50\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"uint32\",\n                            \"name\": \"probe_type\",\n                            \"id\": 60\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Traj_Circular_Move\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 105\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"MotionType\",\n                            \"name\": \"type\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"EmcPose\",\n                            \"name\": \"end\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"PmCartesian\",\n                            \"name\": \"center\",\n                            \"id\": 25\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"PmCartesian\",\n                            \"name\": \"normal\",\n                            \"id\": 27\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"vel\",\n                            \"id\": 30\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"ini_maxvel\",\n                            \"id\": 40\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"acc\",\n                            \"id\": 50\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"bool\",\n                            \"name\": \"feed_mode\",\n                            \"id\": 60\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"turn\",\n                            \"id\": 70\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Traj_Rigid_Tap\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 106\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"EmcPose\",\n                            \"name\": \"pos\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"vel\",\n                            \"id\": 30\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"ini_maxvel\",\n                            \"id\": 40\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"acc\",\n                            \"id\": 50\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Traj_Set_Term_Cond\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 107\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"TermConditionType\",\n                            \"name\": \"cond\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"tolerance\",\n                            \"id\": 20\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Traj_Set_Spindlesync\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 108\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"feed_per_revolution\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"bool\",\n                            \"name\": \"velocity_mode\",\n                            \"id\": 20\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Traj_Delay\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 109\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"delay\",\n                            \"id\": 10\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Spindle_On\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 110\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"speed\",\n                            \"id\": 10,\n                            \"options\": {\n                                \"default\": 0\n                            }\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"factor\",\n                            \"id\": 20,\n                            \"options\": {\n                                \"default\": 0\n                            }\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"xoffset\",\n                            \"id\": 30,\n                            \"options\": {\n                                \"default\": 0\n                            }\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Spindle_Speed\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 111\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"speed\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"factor\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"xoffset\",\n                            \"id\": 30\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Spindle_Orient\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 112\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"orientation\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"CanonDirection\",\n                            \"name\": \"mode\",\n                            \"id\": 20\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Spindle_Wait_Orient_Complete\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 113\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"timeout\",\n                            \"id\": 10\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Tool_Set_Offset\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 114\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"pocket\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"toolno\",\n                            \"id\": 15\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"EmcPose\",\n                            \"name\": \"offset\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"diameter\",\n                            \"id\": 30\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"frontangle\",\n                            \"id\": 40\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"backangle\",\n                            \"id\": 50\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"orientation\",\n                            \"id\": 60\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Traj_Set_Offset\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 115\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"EmcPose\",\n                            \"name\": \"offset\",\n                            \"id\": 10\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Tool_Prepare\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 116\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"pocket\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"tool\",\n                            \"id\": 20\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Tool_Set_Number\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 117\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"tool\",\n                            \"id\": 10\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Traj_Set_Fo_Enable\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 118\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"bool\",\n                            \"name\": \"mode\",\n                            \"id\": 10\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Traj_Set_So_Enable\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 119\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"bool\",\n                            \"name\": \"mode\",\n                            \"id\": 10\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Traj_Set_Fh_Enable\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 120\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"bool\",\n                            \"name\": \"mode\",\n                            \"id\": 10\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Motion_Adaptive\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 121\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"bool\",\n                            \"name\": \"status\",\n                            \"id\": 10\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Operator_Display\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 122\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"id\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"string\",\n                            \"name\": \"display\",\n                            \"id\": 20\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Operator_Text\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 123\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"id\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"string\",\n                            \"name\": \"text\",\n                            \"id\": 20\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Operator_Error\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 124\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"id\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"string\",\n                            \"name\": \"error\",\n                            \"id\": 20\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Motion_Set_Dout\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 125\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"uint32\",\n                            \"name\": \"index\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"bool\",\n                            \"name\": \"start\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"bool\",\n                            \"name\": \"end\",\n                            \"id\": 30\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"bool\",\n                            \"name\": \"now\",\n                            \"id\": 40\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Motion_Set_Aout\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 126\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"uint32\",\n                            \"name\": \"index\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"start\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"end\",\n                            \"id\": 30\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"bool\",\n                            \"name\": \"now\",\n                            \"id\": 40\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Aux_Input_Wait\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 127\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"uint32\",\n                            \"name\": \"index\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"InputType\",\n                            \"name\": \"input_type\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"WaitType\",\n                            \"name\": \"wait_type\",\n                            \"id\": 30\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"timeout\",\n                            \"id\": 40\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Exec_Plugin_Ca1l\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 128\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"bytes\",\n                            \"name\": \"call\",\n                            \"id\": 20\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Io_Plugin_Call\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 129\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"bytes\",\n                            \"name\": \"call\",\n                            \"id\": 20\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Value\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1500\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"ValueType\",\n                            \"name\": \"type\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"halbit\",\n                            \"id\": 100\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"halfloat\",\n                            \"id\": 101\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"hals32\",\n                            \"id\": 102\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"halu32\",\n                            \"id\": 103\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bytes\",\n                            \"name\": \"v_bytes\",\n                            \"id\": 120\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"v_int32\",\n                            \"id\": 130\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed64\",\n                            \"name\": \"v_int64\",\n                            \"id\": 140\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"v_uint32\",\n                            \"id\": 150\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed64\",\n                            \"name\": \"v_uint64\",\n                            \"id\": 160\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"v_double\",\n                            \"id\": 170\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"v_string\",\n                            \"id\": 180,\n                            \"options\": {\n                                \"(nanopb).max_size\": 41\n                            }\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"v_bool\",\n                            \"id\": 190\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"PmCartesian\",\n                            \"name\": \"carte\",\n                            \"id\": 200\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcPose\",\n                            \"name\": \"pose\",\n                            \"id\": 220\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"RTAPICommand\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 900\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"instance\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"modname\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"rt_msglevel\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"user_msglevel\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"string\",\n                            \"name\": \"argv\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"threadname\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"threadperiod\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"use_fp\",\n                            \"id\": 8\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"cpu\",\n                            \"id\": 9\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"comp\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"func\",\n                            \"id\": 11\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"instname\",\n                            \"id\": 12\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"flags\",\n                            \"id\": 13\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"RTAPI_Message\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1000\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"msglevel\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"string\",\n                            \"name\": \"format\",\n                            \"id\": 20,\n                            \"options\": {\n                                \"default\": \"*** uninitialized ***\",\n                                \"(nanopb).max_size\": 100\n                            }\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"Value\",\n                            \"name\": \"arg\",\n                            \"id\": 30,\n                            \"options\": {\n                                \"(nanopb).max_count\": 10\n                            }\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"File\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 200\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"string\",\n                            \"name\": \"name\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"FileContent\",\n                            \"name\": \"encoding\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bytes\",\n                            \"name\": \"blob\",\n                            \"id\": 3\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Application\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 201\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"string\",\n                            \"name\": \"name\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"description\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"ApplicationType\",\n                            \"name\": \"type\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"weburi\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"File\",\n                            \"name\": \"file\",\n                            \"id\": 5\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"StdoutLine\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 202\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"index\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"line\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"MachineInfo\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 203\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"type\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"manufacturer\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"model\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"variant\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Launcher\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 204\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"index\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"name\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"description\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"File\",\n                            \"name\": \"image\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"MachineInfo\",\n                            \"name\": \"info\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"running\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"terminating\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"command\",\n                            \"id\": 8\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"shell\",\n                            \"id\": 9\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"StdoutLine\",\n                            \"name\": \"output\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"returncode\",\n                            \"id\": 11\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"workdir\",\n                            \"id\": 12\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"uint32\",\n                            \"name\": \"priority\",\n                            \"id\": 13\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Position\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 800\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"x\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"y\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"z\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"a\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"b\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"c\",\n                            \"id\": 8\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"u\",\n                            \"id\": 9\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"v\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"w\",\n                            \"id\": 11\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Preview\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 801\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"PreviewOpType\",\n                            \"name\": \"type\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"line_number\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Position\",\n                            \"name\": \"pos\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"first_end\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"second_end\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"first_axis\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"second_axis\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"rotation\",\n                            \"id\": 8\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"axis_end_point\",\n                            \"id\": 9\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"xy_rotation\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"plane\",\n                            \"id\": 11\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"rate\",\n                            \"id\": 12\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"feed_mode\",\n                            \"id\": 13\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"time\",\n                            \"id\": 14\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"text\",\n                            \"id\": 15\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"angular_units\",\n                            \"id\": 101\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"length_units\",\n                            \"id\": 102\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"probetype\",\n                            \"id\": 103\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"KinematicsType\",\n                            \"name\": \"kins\",\n                            \"id\": 104,\n                            \"options\": {\n                                \"default\": \"KT_JOINT\"\n                            }\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"axismask\",\n                            \"id\": 105\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"g5_index\",\n                            \"id\": 106\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"pocket\",\n                            \"id\": 107\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"SourceType\",\n                            \"name\": \"stype\",\n                            \"id\": 110\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"filename\",\n                            \"id\": 111\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"cmdstring\",\n                            \"id\": 112\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"call_level\",\n                            \"id\": 113\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcToolData\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1100\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"index\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"id\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"diameter\",\n                            \"id\": 12\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"frontangle\",\n                            \"id\": 13\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"backangle\",\n                            \"id\": 14\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"orientation\",\n                            \"id\": 15\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Position\",\n                            \"name\": \"offset\",\n                            \"id\": 16\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"comment\",\n                            \"id\": 17\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"pocket\",\n                            \"id\": 18\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcStatusMotionAxis\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1101\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"index\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"enabled\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"fault\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"ferror_current\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"ferror_highmark\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"homed\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"homing\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"inpos\",\n                            \"id\": 8\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"input\",\n                            \"id\": 9\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"max_hard_limit\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"max_soft_limit\",\n                            \"id\": 11\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"min_hard_limit\",\n                            \"id\": 12\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"min_soft_limit\",\n                            \"id\": 13\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"output\",\n                            \"id\": 14\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"override_limits\",\n                            \"id\": 15\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"velocity\",\n                            \"id\": 16\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcStatusConfigAxis\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1102\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"index\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcAxisType\",\n                            \"name\": \"axis_type\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"backlash\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"max_ferror\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"max_position_limit\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"min_ferror\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"min_position_limit\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"home_sequence\",\n                            \"id\": 9\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"max_acceleration\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"max_velocity\",\n                            \"id\": 11\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"increments\",\n                            \"id\": 12\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcProgramExtension\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1103\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"index\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"extension\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcStatusAnalogIO\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1104\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"index\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"value\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcStatusDigitalIO\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1105\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"index\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"value\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcStatusLimit\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1106\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"index\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"value\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcStatusGCode\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1107\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"index\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"value\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcStatusMCode\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1108\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"index\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"value\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcStatusSetting\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1109\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"index\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"value\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcStatusConfig\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1110\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"default_acceleration\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"axes\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"EmcStatusConfigAxis\",\n                            \"name\": \"axis\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"axis_mask\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"cycle_time\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"debug\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcKinematicsType\",\n                            \"name\": \"kinematics_type\",\n                            \"id\": 8\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"max_acceleration\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"max_velocity\",\n                            \"id\": 11\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcLinearUnitsType\",\n                            \"name\": \"linear_units\",\n                            \"id\": 12\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"default_velocity\",\n                            \"id\": 13\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"EmcProgramExtension\",\n                            \"name\": \"program_extension\",\n                            \"id\": 14\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcPositionOffsetType\",\n                            \"name\": \"position_offset\",\n                            \"id\": 15\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcPositionFeedbackType\",\n                            \"name\": \"position_feedback\",\n                            \"id\": 16\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"max_feed_override\",\n                            \"id\": 17\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"min_feed_override\",\n                            \"id\": 18\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"max_spindle_override\",\n                            \"id\": 19\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"min_spindle_override\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"default_spindle_speed\",\n                            \"id\": 21\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"default_linear_velocity\",\n                            \"id\": 22\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"min_velocity\",\n                            \"id\": 23\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"max_linear_velocity\",\n                            \"id\": 24\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"min_linear_velocity\",\n                            \"id\": 25\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"default_angular_velocity\",\n                            \"id\": 26\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"max_angular_velocity\",\n                            \"id\": 27\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"min_angular_velocity\",\n                            \"id\": 28\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"increments\",\n                            \"id\": 29\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"grids\",\n                            \"id\": 30\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"lathe\",\n                            \"id\": 31\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"geometry\",\n                            \"id\": 32\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"uint32\",\n                            \"name\": \"arcdivision\",\n                            \"id\": 33\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"no_force_homing\",\n                            \"id\": 34\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"remote_path\",\n                            \"id\": 35\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcTimeUnitsType\",\n                            \"name\": \"time_units\",\n                            \"id\": 36\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"name\",\n                            \"id\": 37\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"EmcStatusUserCommand\",\n                            \"name\": \"user_command\",\n                            \"id\": 38\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcAngularUnitsType\",\n                            \"name\": \"angular_units\",\n                            \"id\": 39\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcStatusMotion\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1111\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"active_queue\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Position\",\n                            \"name\": \"actual_position\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"adaptive_feed_enabled\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"EmcStatusAnalogIO\",\n                            \"name\": \"ain\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"EmcStatusAnalogIO\",\n                            \"name\": \"aout\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"EmcStatusMotionAxis\",\n                            \"name\": \"axis\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"block_delete\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"current_line\",\n                            \"id\": 8\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"current_vel\",\n                            \"id\": 9\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"delay_left\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"EmcStatusDigitalIO\",\n                            \"name\": \"din\",\n                            \"id\": 11\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"distance_to_go\",\n                            \"id\": 12\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"EmcStatusDigitalIO\",\n                            \"name\": \"dout\",\n                            \"id\": 13\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Position\",\n                            \"name\": \"dtg\",\n                            \"id\": 14\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"enabled\",\n                            \"id\": 15\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"feed_hold_enabled\",\n                            \"id\": 16\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"feed_override_enabled\",\n                            \"id\": 17\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"feedrate\",\n                            \"id\": 18\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"OriginIndex\",\n                            \"name\": \"g5x_index\",\n                            \"id\": 19\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Position\",\n                            \"name\": \"g5x_offset\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Position\",\n                            \"name\": \"g92_offset\",\n                            \"id\": 21\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"id\",\n                            \"id\": 23\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"inpos\",\n                            \"id\": 24\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Position\",\n                            \"name\": \"joint_actual_position\",\n                            \"id\": 25\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Position\",\n                            \"name\": \"joint_position\",\n                            \"id\": 26\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"EmcStatusLimit\",\n                            \"name\": \"limit\",\n                            \"id\": 27\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"motion_line\",\n                            \"id\": 28\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"MotionType\",\n                            \"name\": \"motion_type\",\n                            \"id\": 29\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcTrajectoryModeType\",\n                            \"name\": \"motion_mode\",\n                            \"id\": 30\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"paused\",\n                            \"id\": 31\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Position\",\n                            \"name\": \"position\",\n                            \"id\": 32\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"probe_tripped\",\n                            \"id\": 33\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"probe_val\",\n                            \"id\": 34\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Position\",\n                            \"name\": \"probed_position\",\n                            \"id\": 35\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"probing\",\n                            \"id\": 36\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"queue\",\n                            \"id\": 37\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"queue_full\",\n                            \"id\": 38\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"rotation_xy\",\n                            \"id\": 39\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"spindle_brake\",\n                            \"id\": 40\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"spindle_direction\",\n                            \"id\": 41\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"spindle_enabled\",\n                            \"id\": 42\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"spindle_increasing\",\n                            \"id\": 43\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"spindle_override_enabled\",\n                            \"id\": 44\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"spindle_speed\",\n                            \"id\": 45\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"spindlerate\",\n                            \"id\": 46\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"RCS_STATUS\",\n                            \"name\": \"state\",\n                            \"id\": 47\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"max_velocity\",\n                            \"id\": 48\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"max_acceleration\",\n                            \"id\": 49\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcStatusIo\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1112\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"estop\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"flood\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"lube\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"lube_level\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"mist\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Position\",\n                            \"name\": \"tool_offset\",\n                            \"id\": 8\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"EmcToolData\",\n                            \"name\": \"tool_table\",\n                            \"id\": 9\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"pocket_prepped\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"tool_in_spindle\",\n                            \"id\": 11\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcStatusTask\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1113\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"echo_serial_number\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcTaskExecStateType\",\n                            \"name\": \"exec_state\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"file\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"input_timeout\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"optional_stop\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"read_line\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcTaskModeType\",\n                            \"name\": \"task_mode\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"task_paused\",\n                            \"id\": 8\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcTaskStateType\",\n                            \"name\": \"task_state\",\n                            \"id\": 9\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"total_lines\",\n                            \"id\": 10\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcStatusInterp\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1114\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"command\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"EmcStatusGCode\",\n                            \"name\": \"gcodes\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcInterpStateType\",\n                            \"name\": \"interp_state\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcInterpExitCodeType\",\n                            \"name\": \"interpreter_errcode\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"EmcStatusMCode\",\n                            \"name\": \"mcodes\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"EmcStatusSetting\",\n                            \"name\": \"settings\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcCanonUnitsType\",\n                            \"name\": \"program_units\",\n                            \"id\": 7\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcCommandParameters\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1115\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"uint32\",\n                            \"name\": \"index\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"uint32\",\n                            \"name\": \"debug_level\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"line_number\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"scale\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"velocity\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"distance\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"value\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"enable\",\n                            \"id\": 8\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"command\",\n                            \"id\": 9\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"path\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcTaskModeType\",\n                            \"name\": \"task_mode\",\n                            \"id\": 100\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcTaskStateType\",\n                            \"name\": \"task_state\",\n                            \"id\": 101\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcTrajectoryModeType\",\n                            \"name\": \"traj_mode\",\n                            \"id\": 102\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcPose\",\n                            \"name\": \"pose\",\n                            \"id\": 103\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcToolData\",\n                            \"name\": \"tool_data\",\n                            \"id\": 104\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"EmcToolData\",\n                            \"name\": \"tool_table\",\n                            \"id\": 105\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcStatusUserCommand\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1116\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"index\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"command\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Container\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 500\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"ContainerType\",\n                            \"name\": \"type\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed64\",\n                            \"name\": \"tsc\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"Preview\",\n                            \"name\": \"preview\",\n                            \"id\": 8,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"MotionCommand\",\n                            \"name\": \"motcmd\",\n                            \"id\": 9\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"MotionStatus\",\n                            \"name\": \"motstat\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bytes\",\n                            \"name\": \"legacy_motcmd\",\n                            \"id\": 11,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bytes\",\n                            \"name\": \"legacy_motstat\",\n                            \"id\": 12,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"RTAPI_Message\",\n                            \"name\": \"rtapi_message\",\n                            \"id\": 13\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"TaskReply\",\n                            \"name\": \"task_reply\",\n                            \"id\": 14,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"TicketUpdate\",\n                            \"name\": \"ticket_update\",\n                            \"id\": 15\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bytes\",\n                            \"name\": \"syslog\",\n                            \"id\": 18,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bytes\",\n                            \"name\": \"legacy_nml\",\n                            \"id\": 19,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bytes\",\n                            \"name\": \"legacy_motconfig\",\n                            \"id\": 20,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"tv_sec\",\n                            \"id\": 21\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"tv_nsec\",\n                            \"id\": 22\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"topic\",\n                            \"id\": 23\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"reply_required\",\n                            \"id\": 24\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"InterpreterStateType\",\n                            \"name\": \"interp_state\",\n                            \"id\": 25,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"interp_name\",\n                            \"id\": 26\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"rsvp\",\n                            \"id\": 30\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"ContainerType\",\n                            \"name\": \"in_reply_to\",\n                            \"id\": 33\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"RCS_STATUS\",\n                            \"name\": \"rcs_status\",\n                            \"id\": 35\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"StatusType\",\n                            \"name\": \"status\",\n                            \"id\": 40\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"serial\",\n                            \"id\": 45\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"reply_serial\",\n                            \"id\": 50\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"ticket\",\n                            \"id\": 55\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"reply_ticket\",\n                            \"id\": 60\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"sequence\",\n                            \"id\": 62\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"credit\",\n                            \"id\": 65\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"line_number\",\n                            \"id\": 66\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"name\",\n                            \"id\": 67,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"string\",\n                            \"name\": \"note\",\n                            \"id\": 68\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"retcode\",\n                            \"id\": 69\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bytes\",\n                            \"name\": \"uuid\",\n                            \"id\": 72,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"trace\",\n                            \"id\": 75\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"instance\",\n                            \"id\": 77\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"Value\",\n                            \"name\": \"value\",\n                            \"id\": 85,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"RTAPICommand\",\n                            \"name\": \"rtapicmd\",\n                            \"id\": 86,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"ServiceAnnouncement\",\n                            \"name\": \"service_announcement\",\n                            \"id\": 88,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"Component\",\n                            \"name\": \"comp\",\n                            \"id\": 100,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"Pin\",\n                            \"name\": \"pin\",\n                            \"id\": 2,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"Signal\",\n                            \"name\": \"signal\",\n                            \"id\": 3,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"Param\",\n                            \"name\": \"param\",\n                            \"id\": 103,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"Thread\",\n                            \"name\": \"thread\",\n                            \"id\": 104,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"Ring\",\n                            \"name\": \"ring\",\n                            \"id\": 105,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"Group\",\n                            \"name\": \"group\",\n                            \"id\": 106,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"Member\",\n                            \"name\": \"member\",\n                            \"id\": 107,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"Function\",\n                            \"name\": \"function\",\n                            \"id\": 108,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"ProtocolParameters\",\n                            \"name\": \"pparams\",\n                            \"id\": 109,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"Vtable\",\n                            \"name\": \"vtable\",\n                            \"id\": 110,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"Inst\",\n                            \"name\": \"inst\",\n                            \"id\": 111,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"Application\",\n                            \"name\": \"app\",\n                            \"id\": 120,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"Launcher\",\n                            \"name\": \"launcher\",\n                            \"id\": 130,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"index\",\n                            \"id\": 131,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"LogMessage\",\n                            \"name\": \"log_message\",\n                            \"id\": 87,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"TaskPlanExecute\",\n                            \"name\": \"tpexecute\",\n                            \"id\": 200,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"TaskPlanBlockDelete\",\n                            \"name\": \"tpblockdelete\",\n                            \"id\": 201,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"TaskPlanOptionalStop\",\n                            \"name\": \"tpoptionalstop\",\n                            \"id\": 202,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"TaskPlanOpen\",\n                            \"name\": \"tpopen\",\n                            \"id\": 203,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"TaskPlanReply\",\n                            \"name\": \"taskplan_reply\",\n                            \"id\": 210,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Emc_Traj_Set_G5x\",\n                            \"name\": \"traj_set_g5x\",\n                            \"id\": 300\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Emc_Traj_Set_G92\",\n                            \"name\": \"traj_set_g92\",\n                            \"id\": 310\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Emc_Traj_Set_Rotation\",\n                            \"name\": \"traj_set_rotation\",\n                            \"id\": 320\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Emc_Traj_Linear_Move\",\n                            \"name\": \"traj_linear_move\",\n                            \"id\": 330\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Emc_Traj_Probe\",\n                            \"name\": \"traj_probe\",\n                            \"id\": 340\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Emc_Traj_Circular_Move\",\n                            \"name\": \"traj_circular_move\",\n                            \"id\": 350\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Emc_Traj_Rigid_Tap\",\n                            \"name\": \"traj_rigid_tap\",\n                            \"id\": 360\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Emc_Traj_Set_Term_Cond\",\n                            \"name\": \"traj_set_term_cond\",\n                            \"id\": 370\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Emc_Traj_Set_Spindlesync\",\n                            \"name\": \"traj_set_spindlesync\",\n                            \"id\": 380\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Emc_Traj_Delay\",\n                            \"name\": \"traj_delay\",\n                            \"id\": 390\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Emc_Spindle_On\",\n                            \"name\": \"spindle_on\",\n                            \"id\": 400\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Emc_Spindle_Speed\",\n                            \"name\": \"spindle_speed\",\n                            \"id\": 410\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Emc_Spindle_Orient\",\n                            \"name\": \"spindle_orient\",\n                            \"id\": 420\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Emc_Spindle_Wait_Orient_Complete\",\n                            \"name\": \"spindle_wait_orient_complete\",\n                            \"id\": 430\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Emc_Tool_Set_Offset\",\n                            \"name\": \"tool_set_offet\",\n                            \"id\": 440\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Emc_Traj_Set_Offset\",\n                            \"name\": \"traj_set_offset\",\n                            \"id\": 450\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Emc_Tool_Prepare\",\n                            \"name\": \"tool_prepare\",\n                            \"id\": 460\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Emc_Tool_Set_Number\",\n                            \"name\": \"tool_set_number\",\n                            \"id\": 470\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Emc_Traj_Set_Fo_Enable\",\n                            \"name\": \"traj_set_fo_enable\",\n                            \"id\": 480\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Emc_Traj_Set_So_Enable\",\n                            \"name\": \"traj_set_so_enable\",\n                            \"id\": 490\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Emc_Traj_Set_Fh_Enable\",\n                            \"name\": \"traj_set_fh_enable\",\n                            \"id\": 500\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Emc_Motion_Adaptive\",\n                            \"name\": \"motion_adaptive\",\n                            \"id\": 510\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Emc_Operator_Display\",\n                            \"name\": \"operator_display\",\n                            \"id\": 520\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Emc_Operator_Text\",\n                            \"name\": \"operator_text\",\n                            \"id\": 530\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Emc_Operator_Error\",\n                            \"name\": \"operator_error\",\n                            \"id\": 540\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Emc_Motion_Set_Dout\",\n                            \"name\": \"motion_set_dout\",\n                            \"id\": 550\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Emc_Motion_Set_Aout\",\n                            \"name\": \"motion_set_aout\",\n                            \"id\": 560\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Emc_Aux_Input_Wait\",\n                            \"name\": \"aux_input_wait\",\n                            \"id\": 570\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Emc_Exec_Plugin_Ca1l\",\n                            \"name\": \"exec_plugin_call\",\n                            \"id\": 580\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Emc_Io_Plugin_Call\",\n                            \"name\": \"io_plugin_call\",\n                            \"id\": 590\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcStatusConfig\",\n                            \"name\": \"emc_status_config\",\n                            \"id\": 600,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcStatusMotion\",\n                            \"name\": \"emc_status_motion\",\n                            \"id\": 601,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcStatusIo\",\n                            \"name\": \"emc_status_io\",\n                            \"id\": 602,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcStatusTask\",\n                            \"name\": \"emc_status_task\",\n                            \"id\": 603,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcStatusInterp\",\n                            \"name\": \"emc_status_interp\",\n                            \"id\": 604,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcCommandParameters\",\n                            \"name\": \"emc_command_params\",\n                            \"id\": 610,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        }\n                    ]\n                }\n            ],\n            \"enums\": [\n                {\n                    \"name\": \"ValueType\",\n                    \"values\": [\n                        {\n                            \"name\": \"HAL_BIT\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"HAL_FLOAT\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"HAL_S32\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"HAL_U32\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"STRING\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"BYTES\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"INT32\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"UINT32\",\n                            \"id\": 30\n                        },\n                        {\n                            \"name\": \"INT64\",\n                            \"id\": 40\n                        },\n                        {\n                            \"name\": \"UINT64\",\n                            \"id\": 50\n                        },\n                        {\n                            \"name\": \"DOUBLE\",\n                            \"id\": 60\n                        },\n                        {\n                            \"name\": \"BOOL\",\n                            \"id\": 80\n                        },\n                        {\n                            \"name\": \"CARTESIAN\",\n                            \"id\": 100\n                        },\n                        {\n                            \"name\": \"LEGACY_CARTESIAN\",\n                            \"id\": 110\n                        },\n                        {\n                            \"name\": \"POSE\",\n                            \"id\": 120\n                        },\n                        {\n                            \"name\": \"LEGACY_POSE\",\n                            \"id\": 130\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"HalPinDirection\",\n                    \"values\": [\n                        {\n                            \"name\": \"HAL_IN\",\n                            \"id\": 16\n                        },\n                        {\n                            \"name\": \"HAL_OUT\",\n                            \"id\": 32\n                        },\n                        {\n                            \"name\": \"HAL_IO\",\n                            \"id\": 48\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"HalParamDirection\",\n                    \"values\": [\n                        {\n                            \"name\": \"HAL_RO\",\n                            \"id\": 64\n                        },\n                        {\n                            \"name\": \"HAL_RW\",\n                            \"id\": 192\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ObjectType\",\n                    \"values\": [\n                        {\n                            \"name\": \"HAL_PIN\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"HAL_SIGNAL\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"HAL_PARAM\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"HAL_THREAD\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"HAL_FUNCT\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"HAL_ALIAS\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"HAL_COMP_RT\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"HAL_COMP_USER\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"HAL_COMP_REMOTE\",\n                            \"id\": 9\n                        },\n                        {\n                            \"name\": \"HAL_RING\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"HAL_GROUP\",\n                            \"id\": 11\n                        },\n                        {\n                            \"name\": \"HAL_MEMBER_SIGNAL\",\n                            \"id\": 12\n                        },\n                        {\n                            \"name\": \"HAL_MEMBER_GROUP\",\n                            \"id\": 13\n                        },\n                        {\n                            \"name\": \"HAL_MEMBER_PIN\",\n                            \"id\": 14\n                        },\n                        {\n                            \"name\": \"HAL_MEMBER_PARAM\",\n                            \"id\": 15\n                        },\n                        {\n                            \"name\": \"RING_RECORD\",\n                            \"id\": 16\n                        },\n                        {\n                            \"name\": \"RING_STREAM\",\n                            \"id\": 17\n                        },\n                        {\n                            \"name\": \"HAL_VTABLE\",\n                            \"id\": 18\n                        },\n                        {\n                            \"name\": \"HAL_INST\",\n                            \"id\": 19\n                        },\n                        {\n                            \"name\": \"RING_MULTIFRAME\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"VALUE\",\n                            \"id\": 120\n                        },\n                        {\n                            \"name\": \"INSTANCE\",\n                            \"id\": 121\n                        },\n                        {\n                            \"name\": \"ORIGINATOR\",\n                            \"id\": 122\n                        },\n                        {\n                            \"name\": \"NAMED_VALUE\",\n                            \"id\": 125\n                        },\n                        {\n                            \"name\": \"OT_ERROR\",\n                            \"id\": 130\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"RCS_STATUS\",\n                    \"values\": [\n                        {\n                            \"name\": \"UNINITIALIZED_STATUS\",\n                            \"id\": -1\n                        },\n                        {\n                            \"name\": \"RCS_DONE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"RCS_EXEC\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"RCS_ERROR\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"RCS_RECEIVED\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"MsgOrigin\",\n                    \"values\": [\n                        {\n                            \"name\": \"MSG_KERNEL\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"MSG_RTUSER\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"MSG_ULAPI\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"MsgLevel\",\n                    \"values\": [\n                        {\n                            \"name\": \"RTAPI_MSG_NONE\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_ERR\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_WARN\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_INFO\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_DBG\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_ALL\",\n                            \"id\": 5\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"OriginDetail\",\n                    \"values\": [\n                        {\n                            \"name\": \"UNIX_SIGNAL\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"INSTANCE_SHUTDOWN\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"ZMQ_SOCKET\",\n                            \"id\": 70\n                        },\n                        {\n                            \"name\": \"NML_LAYER\",\n                            \"id\": 80\n                        },\n                        {\n                            \"name\": \"RCS_LAYER\",\n                            \"id\": 90\n                        },\n                        {\n                            \"name\": \"CMS_LAYER\",\n                            \"id\": 100\n                        },\n                        {\n                            \"name\": \"IP_LAYER\",\n                            \"id\": 110\n                        },\n                        {\n                            \"name\": \"TCP_LAYER\",\n                            \"id\": 120\n                        },\n                        {\n                            \"name\": \"PGM_LAYER\",\n                            \"id\": 130\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"OriginType\",\n                    \"values\": [\n                        {\n                            \"name\": \"PROCESS\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"USER_THREAD\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"RT_THREAD\",\n                            \"id\": 30\n                        },\n                        {\n                            \"name\": \"COMPONENT\",\n                            \"id\": 40\n                        },\n                        {\n                            \"name\": \"THREAD_FUNCTION\",\n                            \"id\": 50\n                        },\n                        {\n                            \"name\": \"COMPONENT_INIT\",\n                            \"id\": 60\n                        },\n                        {\n                            \"name\": \"COMPONENT_EXIT\",\n                            \"id\": 70\n                        },\n                        {\n                            \"name\": \"GROUP\",\n                            \"id\": 80\n                        },\n                        {\n                            \"name\": \"PIN\",\n                            \"id\": 90\n                        },\n                        {\n                            \"name\": \"SIGNAL\",\n                            \"id\": 100\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Severity\",\n                    \"values\": [\n                        {\n                            \"name\": \"S_INFORMATIONAL\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"S_WARNING\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"S_FAIL\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"StatusType\",\n                    \"values\": [\n                        {\n                            \"name\": \"ENQUEUED\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"PROCESSING\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"COMPLETE\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"FAILED\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ReplyType\",\n                    \"values\": [\n                        {\n                            \"name\": \"NONE\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"ON_RECEPTION\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"ON_QUEUED\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"ON_COMPLETION\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"ALL_STEPS\",\n                            \"id\": 255\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ServiceType\",\n                    \"values\": [\n                        {\n                            \"name\": \"ST_LOGGING\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"ST_CONFIG\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"ST_REDIS\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"ST_HTTP\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"ST_HTTPS\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"ST_WEBSOCKET\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"ST_WEBSOCKETS\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"ST_RTAPI_COMMAND\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"ST_STP_HALGROUP\",\n                            \"id\": 9\n                        },\n                        {\n                            \"name\": \"ST_STP_HALRCOMP\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"ST_STP_INTERP\",\n                            \"id\": 11\n                        },\n                        {\n                            \"name\": \"ST_STP_TASK\",\n                            \"id\": 12\n                        },\n                        {\n                            \"name\": \"ST_HAL_RCOMMAND\",\n                            \"id\": 13\n                        },\n                        {\n                            \"name\": \"ST_TASK_COMMAND\",\n                            \"id\": 14\n                        },\n                        {\n                            \"name\": \"ST_INTERP_COMMAND\",\n                            \"id\": 15\n                        },\n                        {\n                            \"name\": \"ST_MESSAGEBUS_COMMAND\",\n                            \"id\": 16\n                        },\n                        {\n                            \"name\": \"ST_MESSAGEBUS_RESPONSE\",\n                            \"id\": 17\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ServiceAPI\",\n                    \"values\": [\n                        {\n                            \"name\": \"SA_ZMQ_PROTOBUF\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"SA_WS_JSON\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ContainerType\",\n                    \"values\": [\n                        {\n                            \"name\": \"MT_RTMESSAGE\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"MT_MOTCMD\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"MT_MOTSTATUS\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"MT_LEGACY_MOTCMD\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"MT_LEGACY_MOTSTATUS\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"MT_WOU\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"MT_HALUPDATE\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_MESSAGE\",\n                            \"id\": 9\n                        },\n                        {\n                            \"name\": \"MT_LOG_MESSAGE\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"MT_PREVIEW\",\n                            \"id\": 11\n                        },\n                        {\n                            \"name\": \"MT_PROGRESS\",\n                            \"id\": 12\n                        },\n                        {\n                            \"name\": \"MT_INTERP_STAT\",\n                            \"id\": 13\n                        },\n                        {\n                            \"name\": \"MT_SYSLOG\",\n                            \"id\": 18\n                        },\n                        {\n                            \"name\": \"MT_LEGACY_NML\",\n                            \"id\": 19\n                        },\n                        {\n                            \"name\": \"MT_LEGACY_MOTCONFIG\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"MT_STP_UPDATE_FULL\",\n                            \"id\": 26\n                        },\n                        {\n                            \"name\": \"MT_STP_UPDATE\",\n                            \"id\": 28\n                        },\n                        {\n                            \"name\": \"MT_STP_NOGROUP\",\n                            \"id\": 27\n                        },\n                        {\n                            \"name\": \"MT_SHUTDOWN\",\n                            \"id\": 45\n                        },\n                        {\n                            \"name\": \"MT_CONFIRM_SHUTDOWN\",\n                            \"id\": 50\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE0\",\n                            \"id\": 30\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE1\",\n                            \"id\": 31\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE2\",\n                            \"id\": 32\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE3\",\n                            \"id\": 33\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE4\",\n                            \"id\": 34\n                        },\n                        {\n                            \"name\": \"MT_ASCII\",\n                            \"id\": 100\n                        },\n                        {\n                            \"name\": \"MT_UNICODE\",\n                            \"id\": 101\n                        },\n                        {\n                            \"name\": \"MT_GCODE\",\n                            \"id\": 102\n                        },\n                        {\n                            \"name\": \"MT_PYTHON\",\n                            \"id\": 103\n                        },\n                        {\n                            \"name\": \"MT_PICKLE\",\n                            \"id\": 104\n                        },\n                        {\n                            \"name\": \"MT_TCL\",\n                            \"id\": 105\n                        },\n                        {\n                            \"name\": \"MT_XML\",\n                            \"id\": 106\n                        },\n                        {\n                            \"name\": \"MT_JSON\",\n                            \"id\": 107\n                        },\n                        {\n                            \"name\": \"MT_JPEG\",\n                            \"id\": 108\n                        },\n                        {\n                            \"name\": \"MT_PNG\",\n                            \"id\": 109\n                        },\n                        {\n                            \"name\": \"MT_TIFF\",\n                            \"id\": 110\n                        },\n                        {\n                            \"name\": \"MT_POSTSCRIPT\",\n                            \"id\": 111\n                        },\n                        {\n                            \"name\": \"MT_SVG\",\n                            \"id\": 112\n                        },\n                        {\n                            \"name\": \"MT_ZMQ_SUBSCRIBE\",\n                            \"id\": 150\n                        },\n                        {\n                            \"name\": \"MT_ZMQ_UNSUBSCRIBE\",\n                            \"id\": 151\n                        },\n                        {\n                            \"name\": \"MT_PING\",\n                            \"id\": 210\n                        },\n                        {\n                            \"name\": \"MT_PING_ACKNOWLEDGE\",\n                            \"id\": 215\n                        },\n                        {\n                            \"name\": \"MT_REJECT\",\n                            \"id\": 220\n                        },\n                        {\n                            \"name\": \"MT_DONE\",\n                            \"id\": 240\n                        },\n                        {\n                            \"name\": \"MT_SERVICE_REQUEST\",\n                            \"id\": 250\n                        },\n                        {\n                            \"name\": \"MT_SERVICE_ANNOUNCEMENT\",\n                            \"id\": 251\n                        },\n                        {\n                            \"name\": \"MT_SERVICE_PROBE\",\n                            \"id\": 252\n                        },\n                        {\n                            \"name\": \"MT_MESSAGEBUS_NO_DESTINATION\",\n                            \"id\": 255\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_BIND\",\n                            \"id\": 256\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_BIND_CONFIRM\",\n                            \"id\": 257\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_BIND_REJECT\",\n                            \"id\": 258\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_SET\",\n                            \"id\": 259\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_SET_REJECT\",\n                            \"id\": 260\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_ACK\",\n                            \"id\": 263\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_SET\",\n                            \"id\": 265\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_SET_REJECT\",\n                            \"id\": 266\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_GET\",\n                            \"id\": 267\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_GET_REJECT\",\n                            \"id\": 268\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_CREATE\",\n                            \"id\": 269\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_CREATE_REJECT\",\n                            \"id\": 270\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_DELETE\",\n                            \"id\": 271\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_DELETE_REJECT\",\n                            \"id\": 272\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_ACK\",\n                            \"id\": 273\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_ERROR\",\n                            \"id\": 274\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_DESCRIBE\",\n                            \"id\": 276\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_DESCRIPTION\",\n                            \"id\": 277\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_FULL_UPDATE\",\n                            \"id\": 288\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_INCREMENTAL_UPDATE\",\n                            \"id\": 289\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_ERROR\",\n                            \"id\": 290\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_BIND\",\n                            \"id\": 294\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_BIND_CONFIRM\",\n                            \"id\": 295\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_BIND_REJECT\",\n                            \"id\": 296\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_FULL_UPDATE\",\n                            \"id\": 297\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_INCREMENTAL_UPDATE\",\n                            \"id\": 298\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_ERROR\",\n                            \"id\": 299\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_EXIT\",\n                            \"id\": 300\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_PING\",\n                            \"id\": 301\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_LOADRT\",\n                            \"id\": 302\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_LOG\",\n                            \"id\": 303\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_UNLOADRT\",\n                            \"id\": 305\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_NEWINST\",\n                            \"id\": 306\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_NEWTHREAD\",\n                            \"id\": 307\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_DELTHREAD\",\n                            \"id\": 308\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_CALLFUNC\",\n                            \"id\": 309\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_REPLY\",\n                            \"id\": 310\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_DELINST\",\n                            \"id\": 311\n                        },\n                        {\n                            \"name\": \"MT_LIST_APPLICATIONS\",\n                            \"id\": 350\n                        },\n                        {\n                            \"name\": \"MT_DESCRIBE_APPLICATION\",\n                            \"id\": 351\n                        },\n                        {\n                            \"name\": \"MT_RETRIEVE_APPLICATION\",\n                            \"id\": 352\n                        },\n                        {\n                            \"name\": \"MT_APPLICATION_DETAIL\",\n                            \"id\": 353\n                        },\n                        {\n                            \"name\": \"MT_ERROR\",\n                            \"id\": 360\n                        },\n                        {\n                            \"name\": \"MT_FULL_UPDATE\",\n                            \"id\": 370\n                        },\n                        {\n                            \"name\": \"MT_INCREMENTAL_UPDATE\",\n                            \"id\": 371\n                        },\n                        {\n                            \"name\": \"MT_TASK_REPLY\",\n                            \"id\": 400\n                        },\n                        {\n                            \"name\": \"MT_TICKET_UPDATE\",\n                            \"id\": 401\n                        },\n                        {\n                            \"name\": \"MT_CREDIT_UPDATE\",\n                            \"id\": 450\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_LOWER\",\n                            \"id\": 1000\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_UPPER\",\n                            \"id\": 1100\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ABORT\",\n                            \"id\": 1001\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_AXIS_ABORT\",\n                            \"id\": 1002\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ENABLE\",\n                            \"id\": 1003\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_DISABLE\",\n                            \"id\": 1004\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ENABLE_AMPLIFIER\",\n                            \"id\": 1005\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_DISABLE_AMPLIFIER\",\n                            \"id\": 1006\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ENABLE_WATCHDOG\",\n                            \"id\": 1007\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_DISABLE_WATCHDOG\",\n                            \"id\": 1008\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ACTIVATE_JOINT\",\n                            \"id\": 1009\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_DEACTIVATE_JOINT\",\n                            \"id\": 1010\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_PAUSE\",\n                            \"id\": 1011\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_RESUME\",\n                            \"id\": 1012\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_STEP\",\n                            \"id\": 1013\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_FREE\",\n                            \"id\": 1014\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COORD\",\n                            \"id\": 1015\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_TELEOP\",\n                            \"id\": 1016\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_SCALE\",\n                            \"id\": 1017\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SS_ENABLE\",\n                            \"id\": 1018\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_FEED_SCALE\",\n                            \"id\": 1019\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_FS_ENABLE\",\n                            \"id\": 1020\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_FH_ENABLE\",\n                            \"id\": 1021\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_AF_ENABLE\",\n                            \"id\": 1022\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_OVERRIDE_LIMITS\",\n                            \"id\": 1023\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_HOME\",\n                            \"id\": 1024\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_UNHOME\",\n                            \"id\": 1025\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_JOG_CONT\",\n                            \"id\": 1026\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_JOG_INCR\",\n                            \"id\": 1027\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_JOG_ABS\",\n                            \"id\": 1028\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_LINE\",\n                            \"id\": 1029\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_CIRCLE\",\n                            \"id\": 1030\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_TELEOP_VECTOR\",\n                            \"id\": 1031\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_CLEAR_PROBE_FLAGS\",\n                            \"id\": 1032\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_PROBE\",\n                            \"id\": 1033\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_RIGID_TAP\",\n                            \"id\": 1034\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_POSITION_LIMITS\",\n                            \"id\": 1035\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_BACKLASH\",\n                            \"id\": 1036\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_MIN_FERROR\",\n                            \"id\": 1037\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_MAX_FERROR\",\n                            \"id\": 1038\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_VEL\",\n                            \"id\": 1039\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_VEL_LIMIT\",\n                            \"id\": 1040\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_JOINT_VEL_LIMIT\",\n                            \"id\": 1041\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_JOINT_ACC_LIMIT\",\n                            \"id\": 1042\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_ACC\",\n                            \"id\": 1043\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_TERM_COND\",\n                            \"id\": 1044\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_NUM_AXES\",\n                            \"id\": 1045\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_WORLD_HOME\",\n                            \"id\": 1046\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_HOMING_PARAMS\",\n                            \"id\": 1047\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_DEBUG\",\n                            \"id\": 1048\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_DOUT\",\n                            \"id\": 1049\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_AOUT\",\n                            \"id\": 1050\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_SPINDLESYNC\",\n                            \"id\": 1051\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_ON\",\n                            \"id\": 1052\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_OFF\",\n                            \"id\": 1053\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_INCREASE\",\n                            \"id\": 1054\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_DECREASE\",\n                            \"id\": 1055\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_BRAKE_ENGAGE\",\n                            \"id\": 1056\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_BRAKE_RELEASE\",\n                            \"id\": 1057\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_MOTOR_OFFSET\",\n                            \"id\": 1058\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_JOINT_COMP\",\n                            \"id\": 1059\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_OFFSET\",\n                            \"id\": 1060\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_OK\",\n                            \"id\": 1061\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_UNKNOWN_COMMAND\",\n                            \"id\": 1062\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_INVALID_COMMAND\",\n                            \"id\": 1063\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_INVALID_PARAMS\",\n                            \"id\": 1064\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_BAD_EXEC\",\n                            \"id\": 1065\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_DISABLED\",\n                            \"id\": 1066\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_FREE\",\n                            \"id\": 1067\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_TELEOP\",\n                            \"id\": 1068\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_COORD\",\n                            \"id\": 1069\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_JOINT_FLAG\",\n                            \"id\": 1070\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_FLAG\",\n                            \"id\": 1071\n                        },\n                        {\n                            \"name\": \"MT_PRU_FIRMWARE\",\n                            \"id\": 2048\n                        },\n                        {\n                            \"name\": \"MT_MESA_5I20_FIRMWARE\",\n                            \"id\": 3000\n                        },\n                        {\n                            \"name\": \"MT_BLOB\",\n                            \"id\": 4000\n                        },\n                        {\n                            \"name\": \"MT_TEST1\",\n                            \"id\": 5001\n                        },\n                        {\n                            \"name\": \"MT_TEST2\",\n                            \"id\": 5002\n                        },\n                        {\n                            \"name\": \"MT_TEST3\",\n                            \"id\": 5003\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_LOWER\",\n                            \"id\": 10000\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_UPPER\",\n                            \"id\": 13000\n                        },\n                        {\n                            \"name\": \"MT_EMC_OPERATOR_ERROR\",\n                            \"id\": 10011\n                        },\n                        {\n                            \"name\": \"MT_EMC_OPERATOR_TEXT\",\n                            \"id\": 10012\n                        },\n                        {\n                            \"name\": \"MT_EMC_OPERATOR_DISPLAY\",\n                            \"id\": 10013\n                        },\n                        {\n                            \"name\": \"MT_EMC_NULL\",\n                            \"id\": 10021\n                        },\n                        {\n                            \"name\": \"MT_EMC_SET_DEBUG\",\n                            \"id\": 10022\n                        },\n                        {\n                            \"name\": \"MT_EMC_SYSTEM_CMD\",\n                            \"id\": 10030\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_AXIS\",\n                            \"id\": 10101\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_UNITS\",\n                            \"id\": 10102\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_MIN_POSITION_LIMIT\",\n                            \"id\": 10107\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_MAX_POSITION_LIMIT\",\n                            \"id\": 10108\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_START_CHANGE\",\n                            \"id\": 1110\n                        },\n                        {\n                            \"name\": \"MT_EMC_EXEC_PLUGIN_CALL\",\n                            \"id\": 1112\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_PLUGIN_CALL\",\n                            \"id\": 1113\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_FERROR\",\n                            \"id\": 10111\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_HOMING_PARAMS\",\n                            \"id\": 10112\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_MIN_FERROR\",\n                            \"id\": 10115\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_MAX_VELOCITY\",\n                            \"id\": 10116\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_INIT\",\n                            \"id\": 10118\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_HALT\",\n                            \"id\": 10119\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_ABORT\",\n                            \"id\": 10120\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_ENABLE\",\n                            \"id\": 10121\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_DISABLE\",\n                            \"id\": 10122\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_HOME\",\n                            \"id\": 10123\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_UNHOME\",\n                            \"id\": 10135\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_JOG\",\n                            \"id\": 10124\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_INCR_JOG\",\n                            \"id\": 10125\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_ABS_JOG\",\n                            \"id\": 10126\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_ACTIVATE\",\n                            \"id\": 10127\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_DEACTIVATE\",\n                            \"id\": 10128\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_OVERRIDE_LIMITS\",\n                            \"id\": 10129\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_LOAD_COMP\",\n                            \"id\": 10131\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_BACKLASH\",\n                            \"id\": 10134\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_STAT\",\n                            \"id\": 10199\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_AXES\",\n                            \"id\": 10201\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_UNITS\",\n                            \"id\": 10202\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_CYCLE_TIME\",\n                            \"id\": 10203\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_MODE\",\n                            \"id\": 10204\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_VELOCITY\",\n                            \"id\": 10205\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_ACCELERATION\",\n                            \"id\": 10206\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_MAX_VELOCITY\",\n                            \"id\": 10207\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_MAX_ACCELERATION\",\n                            \"id\": 10208\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_SCALE\",\n                            \"id\": 10209\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_MOTION_ID\",\n                            \"id\": 10210\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_INIT\",\n                            \"id\": 10211\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_HALT\",\n                            \"id\": 10212\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_ENABLE\",\n                            \"id\": 10213\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_DISABLE\",\n                            \"id\": 10214\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_ABORT\",\n                            \"id\": 10215\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_PAUSE\",\n                            \"id\": 10216\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_STEP\",\n                            \"id\": 10217\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_RESUME\",\n                            \"id\": 10218\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_DELAY\",\n                            \"id\": 10219\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_LINEAR_MOVE\",\n                            \"id\": 10220\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_CIRCULAR_MOVE\",\n                            \"id\": 10221\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_TERM_COND\",\n                            \"id\": 10222\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_OFFSET\",\n                            \"id\": 10223\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_G5X\",\n                            \"id\": 10224\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_HOME\",\n                            \"id\": 10225\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_ROTATION\",\n                            \"id\": 10226\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_G92\",\n                            \"id\": 10227\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_CLEAR_PROBE_TRIPPED_FLAG\",\n                            \"id\": 10228\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_PROBE\",\n                            \"id\": 10229\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_TELEOP_ENABLE\",\n                            \"id\": 10230\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_TELEOP_VECTOR\",\n                            \"id\": 10231\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_SPINDLESYNC\",\n                            \"id\": 10232\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_SPINDLE_SCALE\",\n                            \"id\": 10233\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_FO_ENABLE\",\n                            \"id\": 10234\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_SO_ENABLE\",\n                            \"id\": 10235\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_FH_ENABLE\",\n                            \"id\": 10236\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_RIGID_TAP\",\n                            \"id\": 10237\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_STAT\",\n                            \"id\": 10299\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_INIT\",\n                            \"id\": 10301\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_HALT\",\n                            \"id\": 10302\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_ABORT\",\n                            \"id\": 10303\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_SET_AOUT\",\n                            \"id\": 10304\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_SET_DOUT\",\n                            \"id\": 10305\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_ADAPTIVE\",\n                            \"id\": 10306\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_ORIENT\",\n                            \"id\": 10317\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_WAIT_ORIENT_COMPLETE\",\n                            \"id\": 10318\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_STAT\",\n                            \"id\": 10399\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_INIT\",\n                            \"id\": 10501\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_HALT\",\n                            \"id\": 10502\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_ABORT\",\n                            \"id\": 10503\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_SET_MODE\",\n                            \"id\": 10504\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_SET_STATE\",\n                            \"id\": 10505\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_OPEN\",\n                            \"id\": 10506\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_RUN\",\n                            \"id\": 10507\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_READ\",\n                            \"id\": 10508\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_EXECUTE\",\n                            \"id\": 10509\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_PAUSE\",\n                            \"id\": 10510\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_STEP\",\n                            \"id\": 10511\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_RESUME\",\n                            \"id\": 10512\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_END\",\n                            \"id\": 10513\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_CLOSE\",\n                            \"id\": 10514\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_INIT\",\n                            \"id\": 10515\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_SYNCH\",\n                            \"id\": 10516\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_SET_OPTIONAL_STOP\",\n                            \"id\": 10517\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_SET_BLOCK_DELETE\",\n                            \"id\": 10518\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_OPTIONAL_STOP\",\n                            \"id\": 10519\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_RESET\",\n                            \"id\": 10520\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_REPLY\",\n                            \"id\": 10530\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_STAT\",\n                            \"id\": 10599\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_INIT\",\n                            \"id\": 11101\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_HALT\",\n                            \"id\": 11102\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_ABORT\",\n                            \"id\": 11103\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_PREPARE\",\n                            \"id\": 11104\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_LOAD\",\n                            \"id\": 11105\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_UNLOAD\",\n                            \"id\": 11106\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_LOAD_TOOL_TABLE\",\n                            \"id\": 11107\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_SET_OFFSET\",\n                            \"id\": 11108\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_SET_NUMBER\",\n                            \"id\": 11109\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_UPDATE_TOOL_TABLE\",\n                            \"id\": 11110\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_STAT\",\n                            \"id\": 11199\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_ESTOP_ON\",\n                            \"id\": 11206\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_ESTOP_OFF\",\n                            \"id\": 11207\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_ESTOP_RESET\",\n                            \"id\": 11208\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_INPUT_WAIT\",\n                            \"id\": 11209\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_STAT\",\n                            \"id\": 11299\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_ON\",\n                            \"id\": 11304\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_OFF\",\n                            \"id\": 11305\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_INCREASE\",\n                            \"id\": 11309\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_DECREASE\",\n                            \"id\": 11310\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_CONSTANT\",\n                            \"id\": 11311\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_BRAKE_RELEASE\",\n                            \"id\": 11312\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_BRAKE_ENGAGE\",\n                            \"id\": 11313\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_SPEED\",\n                            \"id\": 11316\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_STAT\",\n                            \"id\": 11399\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_MIST_ON\",\n                            \"id\": 11404\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_MIST_OFF\",\n                            \"id\": 11405\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_FLOOD_ON\",\n                            \"id\": 11406\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_FLOOD_OFF\",\n                            \"id\": 11407\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_STAT\",\n                            \"id\": 11499\n                        },\n                        {\n                            \"name\": \"MT_EMC_LUBE_ON\",\n                            \"id\": 11504\n                        },\n                        {\n                            \"name\": \"MT_EMC_LUBE_OFF\",\n                            \"id\": 11505\n                        },\n                        {\n                            \"name\": \"MT_EMC_LUBE_STAT\",\n                            \"id\": 11599\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_INIT\",\n                            \"id\": 11601\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_HALT\",\n                            \"id\": 11602\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_ABORT\",\n                            \"id\": 11603\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_SET_CYCLE_TIME\",\n                            \"id\": 11604\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_STAT\",\n                            \"id\": 11699\n                        },\n                        {\n                            \"name\": \"MT_EMC_INIT\",\n                            \"id\": 11901\n                        },\n                        {\n                            \"name\": \"MT_EMC_HALT\",\n                            \"id\": 11902\n                        },\n                        {\n                            \"name\": \"MT_EMC_ABORT\",\n                            \"id\": 11903\n                        },\n                        {\n                            \"name\": \"MT_EMC_STAT\",\n                            \"id\": 11999\n                        },\n                        {\n                            \"name\": \"MT_EMCSTAT_FULL_UPDATE\",\n                            \"id\": 12500\n                        },\n                        {\n                            \"name\": \"MT_EMCSTAT_INCREMENTAL_UPDATE\",\n                            \"id\": 12501\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_ERROR\",\n                            \"id\": 12510\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_TEXT\",\n                            \"id\": 12511\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_DISPLAY\",\n                            \"id\": 12512\n                        },\n                        {\n                            \"name\": \"MT_EMCCMD_EXECUTED\",\n                            \"id\": 12520\n                        },\n                        {\n                            \"name\": \"MT_EMCCMD_COMPLETED\",\n                            \"id\": 12521\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_FULL_UPDATE\",\n                            \"id\": 12600\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_INCREMENTAL_UPDATE\",\n                            \"id\": 12601\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_ERROR\",\n                            \"id\": 12602\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_START\",\n                            \"id\": 12610\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_TERMINATE\",\n                            \"id\": 12611\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_KILL\",\n                            \"id\": 12612\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_WRITE_STDIN\",\n                            \"id\": 12613\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_CALL\",\n                            \"id\": 12614\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_SHUTDOWN\",\n                            \"id\": 12615\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"OriginIndex\",\n                    \"values\": [\n                        {\n                            \"name\": \"ORIGIN_UNKNOWN\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"ORIGIN_G54\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"ORIGIN_G55\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"ORIGIN_G56\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"ORIGIN_G57\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"ORIGIN_G58\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"ORIGIN_G59\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"ORIGIN_G59_1\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"ORIGIN_G59_2\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"ORIGIN_G59_3\",\n                            \"id\": 9\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"TermConditionType\",\n                    \"values\": [\n                        {\n                            \"name\": \"_EMC_TRAJ_TERM_COND_STOP\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"_EMC_TRAJ_TERM_COND_BLEND\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"CanonDirection\",\n                    \"values\": [\n                        {\n                            \"name\": \"_CANON_STOPPED\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"_CANON_CLOCKWISE\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"_CANON_COUNTERCLOCKWISE\",\n                            \"id\": 3\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"InputType\",\n                    \"values\": [\n                        {\n                            \"name\": \"_ANALOG_INPUT\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"_DIGITAL_INPUT\",\n                            \"id\": 1\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"WaitType\",\n                    \"values\": [\n                        {\n                            \"name\": \"IMMEDIATE\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"RISE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"FALL\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"BE_HIGH\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"BE_LOW\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"InterpreterStateType\",\n                    \"values\": [\n                        {\n                            \"name\": \"INTERP_IDLE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"INTERP_RUNNING\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"INTERP_SYNC_WAIT\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"INTERP_PAUSED\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"INTERP_QUEUE_WAIT\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"INTERP_ABORT_WAIT\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"INTERP_STATE_UNSET\",\n                            \"id\": 99\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"MotionType\",\n                    \"values\": [\n                        {\n                            \"name\": \"_EMC_MOTION_TYPE_NONE\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"_EMC_MOTION_TYPE_TRAVERSE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"_EMC_MOTION_TYPE_FEED\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"_EMC_MOTION_TYPE_ARC\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"_EMC_MOTION_TYPE_TOOLCHANGE\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"_EMC_MOTION_TYPE_PROBING\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"_EMC_MOTION_TYPE_INDEXROTARY\",\n                            \"id\": 6\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"cmd_code_t\",\n                    \"values\": [\n                        {\n                            \"name\": \"EMCMOT_ABORT\",\n                            \"id\": 4000\n                        },\n                        {\n                            \"name\": \"EMCMOT_AXIS_ABORT\",\n                            \"id\": 4001\n                        },\n                        {\n                            \"name\": \"EMCMOT_ENABLE\",\n                            \"id\": 4002\n                        },\n                        {\n                            \"name\": \"EMCMOT_DISABLE\",\n                            \"id\": 4003\n                        },\n                        {\n                            \"name\": \"EMCMOT_ENABLE_AMPLIFIER\",\n                            \"id\": 4004\n                        },\n                        {\n                            \"name\": \"EMCMOT_DISABLE_AMPLIFIER\",\n                            \"id\": 4005\n                        },\n                        {\n                            \"name\": \"EMCMOT_ENABLE_WATCHDOG\",\n                            \"id\": 4006\n                        },\n                        {\n                            \"name\": \"EMCMOT_DISABLE_WATCHDOG\",\n                            \"id\": 4007\n                        },\n                        {\n                            \"name\": \"EMCMOT_ACTIVATE_JOINT\",\n                            \"id\": 4008\n                        },\n                        {\n                            \"name\": \"EMCMOT_DEACTIVATE_JOINT\",\n                            \"id\": 4009\n                        },\n                        {\n                            \"name\": \"EMCMOT_PAUSE\",\n                            \"id\": 4010\n                        },\n                        {\n                            \"name\": \"EMCMOT_RESUME\",\n                            \"id\": 4011\n                        },\n                        {\n                            \"name\": \"EMCMOT_STEP\",\n                            \"id\": 4012\n                        },\n                        {\n                            \"name\": \"EMCMOT_FREE\",\n                            \"id\": 4013\n                        },\n                        {\n                            \"name\": \"EMCMOT_COORD\",\n                            \"id\": 4014\n                        },\n                        {\n                            \"name\": \"EMCMOT_TELEOP\",\n                            \"id\": 4015\n                        },\n                        {\n                            \"name\": \"EMCMOT_SPINDLE_SCALE\",\n                            \"id\": 4016\n                        },\n                        {\n                            \"name\": \"EMCMOT_SS_ENABLE\",\n                            \"id\": 4017\n                        },\n                        {\n                            \"name\": \"EMCMOT_FEED_SCALE\",\n                            \"id\": 4018\n                        },\n                        {\n                            \"name\": \"EMCMOT_FS_ENABLE\",\n                            \"id\": 4019\n                        },\n                        {\n                            \"name\": \"EMCMOT_FH_ENABLE\",\n                            \"id\": 4020\n                        },\n                        {\n                            \"name\": \"EMCMOT_AF_ENABLE\",\n                            \"id\": 4021\n                        },\n                        {\n                            \"name\": \"EMCMOT_OVERRIDE_LIMITS\",\n                            \"id\": 4022\n                        },\n                        {\n                            \"name\": \"EMCMOT_HOME\",\n                            \"id\": 4023\n                        },\n                        {\n                            \"name\": \"EMCMOT_UNHOME\",\n                            \"id\": 4024\n                        },\n                        {\n                            \"name\": \"EMCMOT_JOG_CONT\",\n                            \"id\": 4025\n                        },\n                        {\n                            \"name\": \"EMCMOT_JOG_INCR\",\n                            \"id\": 4026\n                        },\n                        {\n                            \"name\": \"EMCMOT_JOG_ABS\",\n                            \"id\": 4027\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_LINE\",\n                            \"id\": 4028\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_CIRCLE\",\n                            \"id\": 4029\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_TELEOP_VECTOR\",\n                            \"id\": 4030\n                        },\n                        {\n                            \"name\": \"EMCMOT_CLEAR_PROBE_FLAGS\",\n                            \"id\": 4031\n                        },\n                        {\n                            \"name\": \"EMCMOT_PROBE\",\n                            \"id\": 4032\n                        },\n                        {\n                            \"name\": \"EMCMOT_RIGID_TAP\",\n                            \"id\": 4033\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_POSITION_LIMITS\",\n                            \"id\": 4034\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_BACKLASH\",\n                            \"id\": 4035\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_MIN_FERROR\",\n                            \"id\": 4036\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_MAX_FERROR\",\n                            \"id\": 4037\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_VEL\",\n                            \"id\": 4038\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_VEL_LIMIT\",\n                            \"id\": 4039\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_JOINT_VEL_LIMIT\",\n                            \"id\": 4040\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_JOINT_ACC_LIMIT\",\n                            \"id\": 4041\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_ACC\",\n                            \"id\": 4042\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_TERM_COND\",\n                            \"id\": 4043\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_NUM_AXES\",\n                            \"id\": 4044\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_WORLD_HOME\",\n                            \"id\": 4045\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_HOMING_PARAMS\",\n                            \"id\": 4046\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_DEBUG\",\n                            \"id\": 4047\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_DOUT\",\n                            \"id\": 4048\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_AOUT\",\n                            \"id\": 4049\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_SPINDLESYNC\",\n                            \"id\": 4050\n                        },\n                        {\n                            \"name\": \"EMCMOT_SPINDLE_ON\",\n                            \"id\": 4051\n                        },\n                        {\n                            \"name\": \"EMCMOT_SPINDLE_OFF\",\n                            \"id\": 4052\n                        },\n                        {\n                            \"name\": \"EMCMOT_SPINDLE_INCREASE\",\n                            \"id\": 4053\n                        },\n                        {\n                            \"name\": \"EMCMOT_SPINDLE_DECREASE\",\n                            \"id\": 4054\n                        },\n                        {\n                            \"name\": \"EMCMOT_SPINDLE_BRAKE_ENGAGE\",\n                            \"id\": 4055\n                        },\n                        {\n                            \"name\": \"EMCMOT_SPINDLE_BRAKE_RELEASE\",\n                            \"id\": 4056\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_MOTOR_OFFSET\",\n                            \"id\": 4057\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_JOINT_COMP\",\n                            \"id\": 4058\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_OFFSET\",\n                            \"id\": 4059\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"cmd_status_t\",\n                    \"values\": [\n                        {\n                            \"name\": \"EMCMOT_COMMAND_OK\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"EMCMOT_COMMAND_UNKNOWN_COMMAND\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"EMCMOT_COMMAND_INVALID_COMMAND\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"EMCMOT_COMMAND_INVALID_PARAMS\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"EMCMOT_COMMAND_BAD_EXEC\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ApplicationType\",\n                    \"values\": [\n                        {\n                            \"name\": \"QT5_QML\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"GLADEVCP\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"JAVASCRIPT\",\n                            \"id\": 3\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"FileContent\",\n                    \"values\": [\n                        {\n                            \"name\": \"CLEARTEXT\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"ZLIB\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"KinematicsType\",\n                    \"values\": [\n                        {\n                            \"name\": \"KT_JOINT\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"KT_TRIVKINS\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"KT_DELTA\",\n                            \"id\": 3\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"PreviewOpType\",\n                    \"values\": [\n                        {\n                            \"name\": \"PV_STRAIGHT_PROBE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"PV_RIGID_TAP\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"PV_STRAIGHT_FEED\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"PV_ARC_FEED\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"PV_STRAIGHT_TRAVERSE\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"PV_SET_G5X_OFFSET\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"PV_SET_G92_OFFSET\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"PV_SET_XY_ROTATION\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"PV_SELECT_PLANE\",\n                            \"id\": 9\n                        },\n                        {\n                            \"name\": \"PV_SET_TRAVERSE_RATE\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"PV_SET_FEED_RATE\",\n                            \"id\": 11\n                        },\n                        {\n                            \"name\": \"PV_CHANGE_TOOL\",\n                            \"id\": 12\n                        },\n                        {\n                            \"name\": \"PV_CHANGE_TOOL_NUMBER\",\n                            \"id\": 13\n                        },\n                        {\n                            \"name\": \"PV_DWELL\",\n                            \"id\": 14\n                        },\n                        {\n                            \"name\": \"PV_MESSAGE\",\n                            \"id\": 15\n                        },\n                        {\n                            \"name\": \"PV_COMMENT\",\n                            \"id\": 16\n                        },\n                        {\n                            \"name\": \"PV_USE_TOOL_OFFSET\",\n                            \"id\": 17\n                        },\n                        {\n                            \"name\": \"PV_SET_PARAMS\",\n                            \"id\": 18\n                        },\n                        {\n                            \"name\": \"PV_SET_FEED_MODE\",\n                            \"id\": 19\n                        },\n                        {\n                            \"name\": \"PV_SOURCE_CONTEXT\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"PV_PREVIEW_START\",\n                            \"id\": 21\n                        },\n                        {\n                            \"name\": \"PV_PREVIEW_END\",\n                            \"id\": 22\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"SourceType\",\n                    \"values\": [\n                        {\n                            \"name\": \"ST_NGC_FILE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"ST_NGC_STRING\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"ST_PYTHON_METHOD\",\n                            \"id\": 3\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcTaskExecStateType\",\n                    \"values\": [\n                        {\n                            \"name\": \"EMC_TASK_EXEC_ERROR\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"EMC_TASK_EXEC_DONE\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"EMC_TASK_EXEC_WAITING_FOR_MOTION\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"EMC_TASK_EXEC_WAITING_FOR_MOTION_QUEUE\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"EMC_TASK_EXEC_WAITING_FOR_IO\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"EMC_TASK_EXEC_WAITING_FOR_MOTION_AND_IO\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"EMC_TASK_EXEC_WAITING_FOR_DELAY\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"EMC_TASK_EXEC_WAITING_FOR_SYSTEM_CMD\",\n                            \"id\": 9\n                        },\n                        {\n                            \"name\": \"EMC_TASK_EXEC_WAITING_FOR_SPINDLE_ORIENTED\",\n                            \"id\": 10\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcInterpStateType\",\n                    \"values\": [\n                        {\n                            \"name\": \"EMC_TASK_INTERP_IDLE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"EMC_TASK_INTERP_READING\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"EMC_TASK_INTERP_PAUSED\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"EMC_TASK_INTERP_WAITING\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcInterpExitCodeType\",\n                    \"values\": [\n                        {\n                            \"name\": \"EMC_INTERP_EXIT_OK\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"EMC_INTERP_EXIT_EXIT\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"EMC_INTERP_EXIT_EXECUTE_FINISH\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"EMC_INTERP_EXIT_ENDFILE\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"EMC_INTERP_EXIT_FILE_NOT_OPEN\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"EMC_INTERP_EXIT_ERROR\",\n                            \"id\": 5\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcKinematicsType\",\n                    \"values\": [\n                        {\n                            \"name\": \"KINEMATICS_IDENTITY\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"KINEMATICS_FORWARD_ONLY\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"KINEMATICS_INVERSE_ONLY\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"KINEMATICS_BOTH\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcTrajectoryModeType\",\n                    \"values\": [\n                        {\n                            \"name\": \"EMC_TRAJ_MODE_FREE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"EMC_TRAJ_MODE_COORD\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"EMC_TRAJ_MODE_TELEOP\",\n                            \"id\": 3\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcCanonUnitsType\",\n                    \"values\": [\n                        {\n                            \"name\": \"CANON_UNITS_INCH\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"CANON_UNITS_MM\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"CANON_UNITS_CM\",\n                            \"id\": 3\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcLinearUnitsType\",\n                    \"values\": [\n                        {\n                            \"name\": \"LINEAR_UNITS_INCH\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"LINEAR_UNITS_MM\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"LINEAR_UNITS_CM\",\n                            \"id\": 3\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcAngularUnitsType\",\n                    \"values\": [\n                        {\n                            \"name\": \"ANGULAR_UNITS_DEGREES\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"ANGULAR_UNITS_RADIAN\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"ANGULAR_UNITS_GRAD\",\n                            \"id\": 3\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcTimeUnitsType\",\n                    \"values\": [\n                        {\n                            \"name\": \"TIME_UNITS_MINUTE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"TIME_UNITS_SECOND\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcTaskModeType\",\n                    \"values\": [\n                        {\n                            \"name\": \"EMC_TASK_MODE_MANUAL\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"EMC_TASK_MODE_AUTO\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"EMC_TASK_MODE_MDI\",\n                            \"id\": 3\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcTaskStateType\",\n                    \"values\": [\n                        {\n                            \"name\": \"EMC_TASK_STATE_ESTOP\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"EMC_TASK_STATE_ESTOP_RESET\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"EMC_TASK_STATE_OFF\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"EMC_TASK_STATE_ON\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcAxisType\",\n                    \"values\": [\n                        {\n                            \"name\": \"EMC_AXIS_LINEAR\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"EMC_AXIS_ANGULAR\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcPositionOffsetType\",\n                    \"values\": [\n                        {\n                            \"name\": \"EMC_CONFIG_RELATIVE_OFFSET\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"EMC_CONFIG_MACHINE_OFFSET\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcPositionFeedbackType\",\n                    \"values\": [\n                        {\n                            \"name\": \"EMC_CONFIG_ACTUAL_FEEDBACK\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"EMC_CONFIG_COMMANDED_FEEDBACK\",\n                            \"id\": 2\n                        }\n                    ]\n                }\n            ]\n        }\n    ],\n    \"enums\": [\n        {\n            \"name\": \"FieldType\",\n            \"values\": [\n                {\n                    \"name\": \"FT_DEFAULT\",\n                    \"id\": 0\n                },\n                {\n                    \"name\": \"FT_CALLBACK\",\n                    \"id\": 1\n                },\n                {\n                    \"name\": \"FT_POINTER\",\n                    \"id\": 4\n                },\n                {\n                    \"name\": \"FT_STATIC\",\n                    \"id\": 2\n                },\n                {\n                    \"name\": \"FT_IGNORE\",\n                    \"id\": 3\n                }\n            ]\n        },\n        {\n            \"name\": \"IntSize\",\n            \"values\": [\n                {\n                    \"name\": \"IS_DEFAULT\",\n                    \"id\": 0\n                },\n                {\n                    \"name\": \"IS_8\",\n                    \"id\": 8\n                },\n                {\n                    \"name\": \"IS_16\",\n                    \"id\": 16\n                },\n                {\n                    \"name\": \"IS_32\",\n                    \"id\": 32\n                },\n                {\n                    \"name\": \"IS_64\",\n                    \"id\": 64\n                }\n            ]\n        }\n    ]\n}).build();","/*\r\n Copyright 2013 Daniel Wirtz <dcode@dcode.io>\r\n\r\n Licensed under the Apache License, Version 2.0 (the \"License\");\r\n you may not use this file except in compliance with the License.\r\n You may obtain a copy of the License at\r\n\r\n http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n Unless required by applicable law or agreed to in writing, software\r\n distributed under the License is distributed on an \"AS IS\" BASIS,\r\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n See the License for the specific language governing permissions and\r\n limitations under the License.\r\n */\r\n\r\n/**\r\n * @license protobuf.js (c) 2013 Daniel Wirtz <dcode@dcode.io>\r\n * Released under the Apache License, Version 2.0\r\n * see: https://github.com/dcodeIO/protobuf.js for details\r\n */\r\n(function(global, factory) {\r\n\r\n    /* AMD */ if (typeof define === 'function' && define[\"amd\"])\r\n        define([\"bytebuffer\"], factory);\r\n    /* CommonJS */ else if (typeof require === \"function\" && typeof module === \"object\" && module && module[\"exports\"])\r\n        module[\"exports\"] = factory(require(\"bytebuffer\"), true);\r\n    /* Global */ else\r\n        (global[\"dcodeIO\"] = global[\"dcodeIO\"] || {})[\"ProtoBuf\"] = factory(global[\"dcodeIO\"][\"ByteBuffer\"]);\r\n\r\n})(this, function(ByteBuffer, isCommonJS) {\r\n    \"use strict\";\r\n\r\n    /**\r\n     * The ProtoBuf namespace.\r\n     * @exports ProtoBuf\r\n     * @namespace\r\n     * @expose\r\n     */\r\n    var ProtoBuf = {};\r\n\r\n    /**\r\n     * @type {!function(new: ByteBuffer, ...[*])}\r\n     * @expose\r\n     */\r\n    ProtoBuf.ByteBuffer = ByteBuffer;\r\n\r\n    /**\r\n     * @type {?function(new: Long, ...[*])}\r\n     * @expose\r\n     */\r\n    ProtoBuf.Long = ByteBuffer.Long || null;\r\n\r\n    /**\r\n     * ProtoBuf.js version.\r\n     * @type {string}\r\n     * @const\r\n     * @expose\r\n     */\r\n    ProtoBuf.VERSION = \"5.0.0\";\r\n\r\n    /**\r\n     * Wire types.\r\n     * @type {Object.<string,number>}\r\n     * @const\r\n     * @expose\r\n     */\r\n    ProtoBuf.WIRE_TYPES = {};\r\n\r\n    /**\r\n     * Varint wire type.\r\n     * @type {number}\r\n     * @expose\r\n     */\r\n    ProtoBuf.WIRE_TYPES.VARINT = 0;\r\n\r\n    /**\r\n     * Fixed 64 bits wire type.\r\n     * @type {number}\r\n     * @const\r\n     * @expose\r\n     */\r\n    ProtoBuf.WIRE_TYPES.BITS64 = 1;\r\n\r\n    /**\r\n     * Length delimited wire type.\r\n     * @type {number}\r\n     * @const\r\n     * @expose\r\n     */\r\n    ProtoBuf.WIRE_TYPES.LDELIM = 2;\r\n\r\n    /**\r\n     * Start group wire type.\r\n     * @type {number}\r\n     * @const\r\n     * @expose\r\n     */\r\n    ProtoBuf.WIRE_TYPES.STARTGROUP = 3;\r\n\r\n    /**\r\n     * End group wire type.\r\n     * @type {number}\r\n     * @const\r\n     * @expose\r\n     */\r\n    ProtoBuf.WIRE_TYPES.ENDGROUP = 4;\r\n\r\n    /**\r\n     * Fixed 32 bits wire type.\r\n     * @type {number}\r\n     * @const\r\n     * @expose\r\n     */\r\n    ProtoBuf.WIRE_TYPES.BITS32 = 5;\r\n\r\n    /**\r\n     * Packable wire types.\r\n     * @type {!Array.<number>}\r\n     * @const\r\n     * @expose\r\n     */\r\n    ProtoBuf.PACKABLE_WIRE_TYPES = [\r\n        ProtoBuf.WIRE_TYPES.VARINT,\r\n        ProtoBuf.WIRE_TYPES.BITS64,\r\n        ProtoBuf.WIRE_TYPES.BITS32\r\n    ];\r\n\r\n    /**\r\n     * Types.\r\n     * @dict\r\n     * @type {!Object.<string,{name: string, wireType: number, defaultValue: *}>}\r\n     * @const\r\n     * @expose\r\n     */\r\n    ProtoBuf.TYPES = {\r\n        // According to the protobuf spec.\r\n        \"int32\": {\r\n            name: \"int32\",\r\n            wireType: ProtoBuf.WIRE_TYPES.VARINT,\r\n            defaultValue: 0\r\n        },\r\n        \"uint32\": {\r\n            name: \"uint32\",\r\n            wireType: ProtoBuf.WIRE_TYPES.VARINT,\r\n            defaultValue: 0\r\n        },\r\n        \"sint32\": {\r\n            name: \"sint32\",\r\n            wireType: ProtoBuf.WIRE_TYPES.VARINT,\r\n            defaultValue: 0\r\n        },\r\n        \"int64\": {\r\n            name: \"int64\",\r\n            wireType: ProtoBuf.WIRE_TYPES.VARINT,\r\n            defaultValue: ProtoBuf.Long ? ProtoBuf.Long.ZERO : undefined\r\n        },\r\n        \"uint64\": {\r\n            name: \"uint64\",\r\n            wireType: ProtoBuf.WIRE_TYPES.VARINT,\r\n            defaultValue: ProtoBuf.Long ? ProtoBuf.Long.UZERO : undefined\r\n        },\r\n        \"sint64\": {\r\n            name: \"sint64\",\r\n            wireType: ProtoBuf.WIRE_TYPES.VARINT,\r\n            defaultValue: ProtoBuf.Long ? ProtoBuf.Long.ZERO : undefined\r\n        },\r\n        \"bool\": {\r\n            name: \"bool\",\r\n            wireType: ProtoBuf.WIRE_TYPES.VARINT,\r\n            defaultValue: false\r\n        },\r\n        \"double\": {\r\n            name: \"double\",\r\n            wireType: ProtoBuf.WIRE_TYPES.BITS64,\r\n            defaultValue: 0\r\n        },\r\n        \"string\": {\r\n            name: \"string\",\r\n            wireType: ProtoBuf.WIRE_TYPES.LDELIM,\r\n            defaultValue: \"\"\r\n        },\r\n        \"bytes\": {\r\n            name: \"bytes\",\r\n            wireType: ProtoBuf.WIRE_TYPES.LDELIM,\r\n            defaultValue: null // overridden in the code, must be a unique instance\r\n        },\r\n        \"fixed32\": {\r\n            name: \"fixed32\",\r\n            wireType: ProtoBuf.WIRE_TYPES.BITS32,\r\n            defaultValue: 0\r\n        },\r\n        \"sfixed32\": {\r\n            name: \"sfixed32\",\r\n            wireType: ProtoBuf.WIRE_TYPES.BITS32,\r\n            defaultValue: 0\r\n        },\r\n        \"fixed64\": {\r\n            name: \"fixed64\",\r\n            wireType: ProtoBuf.WIRE_TYPES.BITS64,\r\n            defaultValue:  ProtoBuf.Long ? ProtoBuf.Long.UZERO : undefined\r\n        },\r\n        \"sfixed64\": {\r\n            name: \"sfixed64\",\r\n            wireType: ProtoBuf.WIRE_TYPES.BITS64,\r\n            defaultValue: ProtoBuf.Long ? ProtoBuf.Long.ZERO : undefined\r\n        },\r\n        \"float\": {\r\n            name: \"float\",\r\n            wireType: ProtoBuf.WIRE_TYPES.BITS32,\r\n            defaultValue: 0\r\n        },\r\n        \"enum\": {\r\n            name: \"enum\",\r\n            wireType: ProtoBuf.WIRE_TYPES.VARINT,\r\n            defaultValue: 0\r\n        },\r\n        \"message\": {\r\n            name: \"message\",\r\n            wireType: ProtoBuf.WIRE_TYPES.LDELIM,\r\n            defaultValue: null\r\n        },\r\n        \"group\": {\r\n            name: \"group\",\r\n            wireType: ProtoBuf.WIRE_TYPES.STARTGROUP,\r\n            defaultValue: null\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Valid map key types.\r\n     * @type {!Array.<!Object.<string,{name: string, wireType: number, defaultValue: *}>>}\r\n     * @const\r\n     * @expose\r\n     */\r\n    ProtoBuf.MAP_KEY_TYPES = [\r\n        ProtoBuf.TYPES[\"int32\"],\r\n        ProtoBuf.TYPES[\"sint32\"],\r\n        ProtoBuf.TYPES[\"sfixed32\"],\r\n        ProtoBuf.TYPES[\"uint32\"],\r\n        ProtoBuf.TYPES[\"fixed32\"],\r\n        ProtoBuf.TYPES[\"int64\"],\r\n        ProtoBuf.TYPES[\"sint64\"],\r\n        ProtoBuf.TYPES[\"sfixed64\"],\r\n        ProtoBuf.TYPES[\"uint64\"],\r\n        ProtoBuf.TYPES[\"fixed64\"],\r\n        ProtoBuf.TYPES[\"bool\"],\r\n        ProtoBuf.TYPES[\"string\"],\r\n        ProtoBuf.TYPES[\"bytes\"]\r\n    ];\r\n\r\n    /**\r\n     * Minimum field id.\r\n     * @type {number}\r\n     * @const\r\n     * @expose\r\n     */\r\n    ProtoBuf.ID_MIN = 1;\r\n\r\n    /**\r\n     * Maximum field id.\r\n     * @type {number}\r\n     * @const\r\n     * @expose\r\n     */\r\n    ProtoBuf.ID_MAX = 0x1FFFFFFF;\r\n\r\n    /**\r\n     * If set to `true`, field names will be converted from underscore notation to camel case. Defaults to `false`.\r\n     *  Must be set prior to parsing.\r\n     * @type {boolean}\r\n     * @expose\r\n     */\r\n    ProtoBuf.convertFieldsToCamelCase = false;\r\n\r\n    /**\r\n     * By default, messages are populated with (setX, set_x) accessors for each field. This can be disabled by\r\n     *  setting this to `false` prior to building messages.\r\n     * @type {boolean}\r\n     * @expose\r\n     */\r\n    ProtoBuf.populateAccessors = true;\r\n\r\n    /**\r\n     * By default, messages are populated with default values if a field is not present on the wire. To disable\r\n     *  this behavior, set this setting to `false`.\r\n     * @type {boolean}\r\n     * @expose\r\n     */\r\n    ProtoBuf.populateDefaults = true;\r\n\r\n    /**\n     * @alias ProtoBuf.Util\n     * @expose\n     */\n    ProtoBuf.Util = (function() {\n        \"use strict\";\n\n        /**\n         * ProtoBuf utilities.\n         * @exports ProtoBuf.Util\n         * @namespace\n         */\n        var Util = {};\n\n        /**\n         * Flag if running in node or not.\n         * @type {boolean}\n         * @const\n         * @expose\n         */\n        Util.IS_NODE = !!(\n            typeof process === 'object' && process+'' === '[object process]' && !process['browser']\n        );\n\n        /**\n         * Constructs a XMLHttpRequest object.\n         * @return {XMLHttpRequest}\n         * @throws {Error} If XMLHttpRequest is not supported\n         * @expose\n         */\n        Util.XHR = function() {\n            // No dependencies please, ref: http://www.quirksmode.org/js/xmlhttp.html\n            var XMLHttpFactories = [\n                function () {return new XMLHttpRequest()},\n                function () {return new ActiveXObject(\"Msxml2.XMLHTTP\")},\n                function () {return new ActiveXObject(\"Msxml3.XMLHTTP\")},\n                function () {return new ActiveXObject(\"Microsoft.XMLHTTP\")}\n            ];\n            /** @type {?XMLHttpRequest} */\n            var xhr = null;\n            for (var i=0;i<XMLHttpFactories.length;i++) {\n                try { xhr = XMLHttpFactories[i](); }\n                catch (e) { continue; }\n                break;\n            }\n            if (!xhr)\n                throw Error(\"XMLHttpRequest is not supported\");\n            return xhr;\n        };\n\n        /**\n         * Fetches a resource.\n         * @param {string} path Resource path\n         * @param {function(?string)=} callback Callback receiving the resource's contents. If omitted the resource will\n         *   be fetched synchronously. If the request failed, contents will be null.\n         * @return {?string|undefined} Resource contents if callback is omitted (null if the request failed), else undefined.\n         * @expose\n         */\n        Util.fetch = function(path, callback) {\n            if (callback && typeof callback != 'function')\n                callback = null;\n            if (Util.IS_NODE) {\n                var fs = require(\"fs\");\n                if (callback) {\n                    fs.readFile(path, function(err, data) {\n                        if (err)\n                            callback(null);\n                        else\n                            callback(\"\"+data);\n                    });\n                } else\n                    try {\n                        return fs.readFileSync(path);\n                    } catch (e) {\n                        return null;\n                    }\n            } else {\n                var xhr = Util.XHR();\n                xhr.open('GET', path, callback ? true : false);\n                // xhr.setRequestHeader('User-Agent', 'XMLHTTP/1.0');\n                xhr.setRequestHeader('Accept', 'text/plain');\n                if (typeof xhr.overrideMimeType === 'function') xhr.overrideMimeType('text/plain');\n                if (callback) {\n                    xhr.onreadystatechange = function() {\n                        if (xhr.readyState != 4) return;\n                        if (/* remote */ xhr.status == 200 || /* local */ (xhr.status == 0 && typeof xhr.responseText === 'string'))\n                            callback(xhr.responseText);\n                        else\n                            callback(null);\n                    };\n                    if (xhr.readyState == 4)\n                        return;\n                    xhr.send(null);\n                } else {\n                    xhr.send(null);\n                    if (/* remote */ xhr.status == 200 || /* local */ (xhr.status == 0 && typeof xhr.responseText === 'string'))\n                        return xhr.responseText;\n                    return null;\n                }\n            }\n        };\n\n        /**\n         * Converts a string to camel case.\n         * @param {string} str\n         * @returns {string}\n         * @expose\n         */\n        Util.toCamelCase = function(str) {\n            return str.replace(/_([a-zA-Z])/g, function ($0, $1) {\n                return $1.toUpperCase();\n            });\n        };\n\n        return Util;\n    })();\n\r\n    /**\r\n     * Language expressions.\r\n     * @type {!Object.<string,!RegExp>}\r\n     * @expose\r\n     */\r\n    ProtoBuf.Lang = {\r\n\r\n        // Characters always ending a statement\r\n        DELIM: /[\\s\\{\\}=;:\\[\\],'\"\\(\\)<>]/g,\r\n\r\n        // Field rules\r\n        RULE: /^(?:required|optional|repeated|map)$/,\r\n\r\n        // Field types\r\n        TYPE: /^(?:double|float|int32|uint32|sint32|int64|uint64|sint64|fixed32|sfixed32|fixed64|sfixed64|bool|string|bytes)$/,\r\n\r\n        // Names\r\n        NAME: /^[a-zA-Z_][a-zA-Z_0-9]*$/,\r\n\r\n        // Type definitions\r\n        TYPEDEF: /^[a-zA-Z][a-zA-Z_0-9]*$/,\r\n\r\n        // Type references\r\n        TYPEREF: /^(?:\\.?[a-zA-Z_][a-zA-Z_0-9]*)+$/,\r\n\r\n        // Fully qualified type references\r\n        FQTYPEREF: /^(?:\\.[a-zA-Z][a-zA-Z_0-9]*)+$/,\r\n\r\n        // All numbers\r\n        NUMBER: /^-?(?:[1-9][0-9]*|0|0[xX][0-9a-fA-F]+|0[0-7]+|([0-9]*(\\.[0-9]*)?([Ee][+-]?[0-9]+)?)|inf|nan)$/,\r\n\r\n        // Decimal numbers\r\n        NUMBER_DEC: /^(?:[1-9][0-9]*|0)$/,\r\n\r\n        // Hexadecimal numbers\r\n        NUMBER_HEX: /^0[xX][0-9a-fA-F]+$/,\r\n\r\n        // Octal numbers\r\n        NUMBER_OCT: /^0[0-7]+$/,\r\n\r\n        // Floating point numbers\r\n        NUMBER_FLT: /^([0-9]*(\\.[0-9]*)?([Ee][+-]?[0-9]+)?|inf|nan)$/,\r\n\r\n        // Booleans\r\n        BOOL: /^(?:true|false)$/i,\r\n\r\n        // Id numbers\r\n        ID: /^(?:[1-9][0-9]*|0|0[xX][0-9a-fA-F]+|0[0-7]+)$/,\r\n\r\n        // Negative id numbers (enum values)\r\n        NEGID: /^\\-?(?:[1-9][0-9]*|0|0[xX][0-9a-fA-F]+|0[0-7]+)$/,\r\n\r\n        // Whitespaces\r\n        WHITESPACE: /\\s/,\r\n\r\n        // All strings\r\n        STRING: /(?:\"([^\"\\\\]*(?:\\\\.[^\"\\\\]*)*)\")|(?:'([^'\\\\]*(?:\\\\.[^'\\\\]*)*)')/g,\r\n\r\n        // Double quoted strings\r\n        STRING_DQ: /(?:\"([^\"\\\\]*(?:\\\\.[^\"\\\\]*)*)\")/g,\r\n\r\n        // Single quoted strings\r\n        STRING_SQ: /(?:'([^'\\\\]*(?:\\\\.[^'\\\\]*)*)')/g\r\n    };\r\n\r\n    /**\r\n     * @alias ProtoBuf.DotProto\r\n     * @expose\r\n     */\r\n    ProtoBuf.DotProto = (function(ProtoBuf, Lang) {\r\n        \"use strict\";\r\n\r\n        /**\r\n         * Utilities to parse .proto files.\r\n         * @exports ProtoBuf.DotProto\r\n         * @namespace\r\n         */\r\n        var DotProto = {};\r\n\r\n        /**\r\n         * Constructs a new Tokenizer.\r\n         * @exports ProtoBuf.DotProto.Tokenizer\r\n         * @class prototype tokenizer\r\n         * @param {string} proto Proto to tokenize\r\n         * @constructor\r\n         */\r\n        var Tokenizer = function(proto) {\r\n\r\n            /**\r\n             * Source to parse.\r\n             * @type {string}\r\n             * @expose\r\n             */\r\n            this.source = proto+\"\";\r\n\r\n            /**\r\n             * Current index.\r\n             * @type {number}\r\n             * @expose\r\n             */\r\n            this.index = 0;\r\n\r\n            /**\r\n             * Current line.\r\n             * @type {number}\r\n             * @expose\r\n             */\r\n            this.line = 1;\r\n\r\n            /**\r\n             * Token stack.\r\n             * @type {!Array.<string>}\r\n             * @expose\r\n             */\r\n            this.stack = [];\r\n\r\n            /**\r\n             * Opening character of the current string read, if any.\r\n             * @type {?string}\r\n             * @private\r\n             */\r\n            this._stringOpen = null;\r\n        };\r\n\r\n        /**\r\n         * @alias ProtoBuf.DotProto.Tokenizer.prototype\r\n         * @inner\r\n         */\r\n        var TokenizerPrototype = Tokenizer.prototype;\r\n\r\n        /**\r\n         * Reads a string beginning at the current index.\r\n         * @return {string}\r\n         * @private\r\n         */\r\n        TokenizerPrototype._readString = function() {\r\n            var re = this._stringOpen === '\"'\r\n                ? Lang.STRING_DQ\r\n                : Lang.STRING_SQ;\r\n            re.lastIndex = this.index - 1; // Include the open quote\r\n            var match = re.exec(this.source);\r\n            if (!match)\r\n                throw Error(\"unterminated string\");\r\n            this.index = re.lastIndex;\r\n            this.stack.push(this._stringOpen);\r\n            this._stringOpen = null;\r\n            return match[1];\r\n        };\r\n\r\n        /**\r\n         * Gets the next token and advances by one.\r\n         * @return {?string} Token or `null` on EOF\r\n         * @expose\r\n         */\r\n        TokenizerPrototype.next = function() {\r\n            if (this.stack.length > 0)\r\n                return this.stack.shift();\r\n            if (this.index >= this.source.length)\r\n                return null;\r\n            if (this._stringOpen !== null)\r\n                return this._readString();\r\n\r\n            var repeat,\r\n                prev,\r\n                next;\r\n            do {\r\n                repeat = false;\r\n\r\n                // Strip white spaces\r\n                while (Lang.WHITESPACE.test(next = this.source.charAt(this.index))) {\r\n                    if (next === '\\n')\r\n                        ++this.line;\r\n                    if (++this.index === this.source.length)\r\n                        return null;\r\n                }\r\n\r\n                // Strip comments\r\n                if (this.source.charAt(this.index) === '/') {\r\n                    ++this.index;\r\n                    if (this.source.charAt(this.index) === '/') { // Line\r\n                        while (this.source.charAt(++this.index) !== '\\n')\r\n                            if (this.index == this.source.length)\r\n                                return null;\r\n                        ++this.index;\r\n                        ++this.line;\r\n                        repeat = true;\r\n                    } else if ((next = this.source.charAt(this.index)) === '*') { /* Block */\r\n                        do {\r\n                            if (next === '\\n')\r\n                                ++this.line;\r\n                            if (++this.index === this.source.length)\r\n                                return null;\r\n                            prev = next;\r\n                            next = this.source.charAt(this.index);\r\n                        } while (prev !== '*' || next !== '/');\r\n                        ++this.index;\r\n                        repeat = true;\r\n                    } else\r\n                        return '/';\r\n                }\r\n            } while (repeat);\r\n\r\n            if (this.index === this.source.length)\r\n                return null;\r\n\r\n            // Read the next token\r\n            var end = this.index;\r\n            Lang.DELIM.lastIndex = 0;\r\n            var delim = Lang.DELIM.test(this.source.charAt(end++));\r\n            if (!delim)\r\n                while(end < this.source.length && !Lang.DELIM.test(this.source.charAt(end)))\r\n                    ++end;\r\n            var token = this.source.substring(this.index, this.index = end);\r\n            if (token === '\"' || token === \"'\")\r\n                this._stringOpen = token;\r\n            return token;\r\n        };\r\n\r\n        /**\r\n         * Peeks for the next token.\r\n         * @return {?string} Token or `null` on EOF\r\n         * @expose\r\n         */\r\n        TokenizerPrototype.peek = function() {\r\n            if (this.stack.length === 0) {\r\n                var token = this.next();\r\n                if (token === null)\r\n                    return null;\r\n                this.stack.push(token);\r\n            }\r\n            return this.stack[0];\r\n        };\r\n\r\n        /**\r\n         * Skips a specific token and throws if it differs.\r\n         * @param {string} expected Expected token\r\n         * @throws {Error} If the actual token differs\r\n         */\r\n        TokenizerPrototype.skip = function(expected) {\r\n            var actual = this.next();\r\n            if (actual !== expected)\r\n                throw Error(\"illegal '\"+actual+\"', '\"+expected+\"' expected\");\r\n        };\r\n\r\n        /**\r\n         * Omits an optional token.\r\n         * @param {string} expected Expected optional token\r\n         * @returns {boolean} `true` if the token exists\r\n         */\r\n        TokenizerPrototype.omit = function(expected) {\r\n            if (this.peek() === expected) {\r\n                this.next();\r\n                return true;\r\n            }\r\n            return false;\r\n        };\r\n\r\n        /**\r\n         * Returns a string representation of this object.\r\n         * @return {string} String representation as of \"Tokenizer(index/length)\"\r\n         * @expose\r\n         */\r\n        TokenizerPrototype.toString = function() {\r\n            return \"Tokenizer (\"+this.index+\"/\"+this.source.length+\" at line \"+this.line+\")\";\r\n        };\r\n\r\n        /**\r\n         * @alias ProtoBuf.DotProto.Tokenizer\r\n         * @expose\r\n         */\r\n        DotProto.Tokenizer = Tokenizer;\r\n\r\n        /**\r\n         * Constructs a new Parser.\r\n         * @exports ProtoBuf.DotProto.Parser\r\n         * @class prototype parser\r\n         * @param {string} source Source\r\n         * @constructor\r\n         */\r\n        var Parser = function(source) {\r\n\r\n            /**\r\n             * Tokenizer.\r\n             * @type {!ProtoBuf.DotProto.Tokenizer}\r\n             * @expose\r\n             */\r\n            this.tn = new Tokenizer(source);\r\n\r\n            /**\r\n             * Whether parsing proto3 or not.\r\n             * @type {boolean}\r\n             */\r\n            this.proto3 = false;\r\n        };\r\n\r\n        /**\r\n         * @alias ProtoBuf.DotProto.Parser.prototype\r\n         * @inner\r\n         */\r\n        var ParserPrototype = Parser.prototype;\r\n\r\n        /**\r\n         * Parses the source.\r\n         * @returns {!Object}\r\n         * @throws {Error} If the source cannot be parsed\r\n         * @expose\r\n         */\r\n        ParserPrototype.parse = function() {\r\n            var topLevel = {\r\n                \"name\": \"[ROOT]\", // temporary\r\n                \"package\": null,\r\n                \"messages\": [],\r\n                \"enums\": [],\r\n                \"imports\": [],\r\n                \"options\": {},\r\n                \"services\": []\r\n                // \"syntax\": undefined\r\n            };\r\n            var token,\r\n                head = true;\r\n            try {\r\n                while (token = this.tn.next()) {\r\n                    switch (token) {\r\n                        case 'package':\r\n                            if (!head || topLevel[\"package\"] !== null)\r\n                                throw Error(\"unexpected 'package'\");\r\n                            token = this.tn.next();\r\n                            if (!Lang.TYPEREF.test(token))\r\n                                throw Error(\"illegal package name: \" + token);\r\n                            this.tn.skip(\";\");\r\n                            topLevel[\"package\"] = token;\r\n                            break;\r\n                        case 'import':\r\n                            if (!head)\r\n                                throw Error(\"unexpected 'import'\");\r\n                            token = this.tn.peek();\r\n                            if (token === \"public\") // ignored\r\n                                this.tn.next();\r\n                            token = this._readString();\r\n                            this.tn.skip(\";\");\r\n                            topLevel[\"imports\"].push(token);\r\n                            break;\r\n                        case 'syntax':\r\n                            if (!head)\r\n                                throw Error(\"unexpected 'syntax'\");\r\n                            this.tn.skip(\"=\");\r\n                            if ((topLevel[\"syntax\"] = this._readString()) === \"proto3\")\r\n                                this.proto3 = true;\r\n                            this.tn.skip(\";\");\r\n                            break;\r\n                        case 'message':\r\n                            this._parseMessage(topLevel, null);\r\n                            head = false;\r\n                            break;\r\n                        case 'enum':\r\n                            this._parseEnum(topLevel);\r\n                            head = false;\r\n                            break;\r\n                        case 'option':\r\n                            this._parseOption(topLevel);\r\n                            break;\r\n                        case 'service':\r\n                            this._parseService(topLevel);\r\n                            break;\r\n                        case 'extend':\r\n                            this._parseExtend(topLevel);\r\n                            break;\r\n                        default:\r\n                            throw Error(\"unexpected '\" + token + \"'\");\r\n                    }\r\n                }\r\n            } catch (e) {\r\n                e.message = \"Parse error at line \"+this.tn.line+\": \" + e.message;\r\n                throw e;\r\n            }\r\n            delete topLevel[\"name\"];\r\n            return topLevel;\r\n        };\r\n\r\n        /**\r\n         * Parses the specified source.\r\n         * @returns {!Object}\r\n         * @throws {Error} If the source cannot be parsed\r\n         * @expose\r\n         */\r\n        Parser.parse = function(source) {\r\n            return new Parser(source).parse();\r\n        };\r\n\r\n        // ----- Conversion ------\r\n\r\n        /**\r\n         * Converts a numerical string to an id.\r\n         * @param {string} value\r\n         * @param {boolean=} mayBeNegative\r\n         * @returns {number}\r\n         * @inner\r\n         */\r\n        function mkId(value, mayBeNegative) {\r\n            var id = -1,\r\n                sign = 1;\r\n            if (value.charAt(0) == '-') {\r\n                sign = -1;\r\n                value = value.substring(1);\r\n            }\r\n            if (Lang.NUMBER_DEC.test(value))\r\n                id = parseInt(value);\r\n            else if (Lang.NUMBER_HEX.test(value))\r\n                id = parseInt(value.substring(2), 16);\r\n            else if (Lang.NUMBER_OCT.test(value))\r\n                id = parseInt(value.substring(1), 8);\r\n            else\r\n                throw Error(\"illegal id value: \" + (sign < 0 ? '-' : '') + value);\r\n            id = (sign*id)|0; // Force to 32bit\r\n            if (!mayBeNegative && id < 0)\r\n                throw Error(\"illegal id value: \" + (sign < 0 ? '-' : '') + value);\r\n            return id;\r\n        }\r\n\r\n        /**\r\n         * Converts a numerical string to a number.\r\n         * @param {string} val\r\n         * @returns {number}\r\n         * @inner\r\n         */\r\n        function mkNumber(val) {\r\n            var sign = 1;\r\n            if (val.charAt(0) == '-') {\r\n                sign = -1;\r\n                val = val.substring(1);\r\n            }\r\n            if (Lang.NUMBER_DEC.test(val))\r\n                return sign * parseInt(val, 10);\r\n            else if (Lang.NUMBER_HEX.test(val))\r\n                return sign * parseInt(val.substring(2), 16);\r\n            else if (Lang.NUMBER_OCT.test(val))\r\n                return sign * parseInt(val.substring(1), 8);\r\n            else if (val === 'inf')\r\n                return sign * Infinity;\r\n            else if (val === 'nan')\r\n                return NaN;\r\n            else if (Lang.NUMBER_FLT.test(val))\r\n                return sign * parseFloat(val);\r\n            throw Error(\"illegal number value: \" + (sign < 0 ? '-' : '') + val);\r\n        }\r\n\r\n        // ----- Reading ------\r\n\r\n        /**\r\n         * Reads a string.\r\n         * @returns {string}\r\n         * @private\r\n         */\r\n        ParserPrototype._readString = function() {\r\n            var value = \"\",\r\n                token,\r\n                delim;\r\n            do {\r\n                delim = this.tn.next();\r\n                if (delim !== \"'\" && delim !== '\"')\r\n                    throw Error(\"illegal string delimiter: \"+delim);\r\n                value += this.tn.next();\r\n                this.tn.skip(delim);\r\n                token = this.tn.peek();\r\n            } while (token === '\"' || token === '\"'); // multi line?\r\n            return value;\r\n        };\r\n\r\n        /**\r\n         * Reads a value.\r\n         * @param {boolean=} mayBeTypeRef\r\n         * @returns {number|boolean|string}\r\n         * @private\r\n         */\r\n        ParserPrototype._readValue = function(mayBeTypeRef) {\r\n            var token = this.tn.peek(),\r\n                value;\r\n            if (token === '\"' || token === \"'\")\r\n                return this._readString();\r\n            this.tn.next();\r\n            if (Lang.NUMBER.test(token))\r\n                return mkNumber(token);\r\n            if (Lang.BOOL.test(token))\r\n                return (token.toLowerCase() === 'true');\r\n            if (mayBeTypeRef && Lang.TYPEREF.test(token))\r\n                return token;\r\n            throw Error(\"illegal value: \"+token);\r\n\r\n        };\r\n\r\n        // ----- Parsing constructs -----\r\n\r\n        /**\r\n         * Parses a namespace option.\r\n         * @param {!Object} parent Parent definition\r\n         * @param {boolean=} isList\r\n         * @private\r\n         */\r\n        ParserPrototype._parseOption = function(parent, isList) {\r\n            var token = this.tn.next(),\r\n                custom = false;\r\n            if (token === '(') {\r\n                custom = true;\r\n                token = this.tn.next();\r\n            }\r\n            if (!Lang.TYPEREF.test(token))\r\n                // we can allow options of the form google.protobuf.* since they will just get ignored anyways\r\n                // if (!/google\\.protobuf\\./.test(token)) // FIXME: Why should that not be a valid typeref?\r\n                    throw Error(\"illegal option name: \"+token);\r\n            var name = token;\r\n            if (custom) { // (my_method_option).foo, (my_method_option), some_method_option, (foo.my_option).bar\r\n                this.tn.skip(')');\r\n                name = '('+name+')';\r\n                token = this.tn.peek();\r\n                if (Lang.FQTYPEREF.test(token)) {\r\n                    name += token;\r\n                    this.tn.next();\r\n                }\r\n            }\r\n            this.tn.skip('=');\r\n            this._parseOptionValue(parent, name);\r\n            if (!isList)\r\n                this.tn.skip(\";\");\r\n        };\r\n\r\n        /**\r\n         * Sets an option on the specified options object.\r\n         * @param {!Object.<string,*>} options\r\n         * @param {string} name\r\n         * @param {string|number|boolean} value\r\n         * @inner\r\n         */\r\n        function setOption(options, name, value) {\r\n            if (typeof options[name] === 'undefined')\r\n                options[name] = value;\r\n            else {\r\n                if (!Array.isArray(options[name]))\r\n                    options[name] = [ options[name] ];\r\n                options[name].push(value);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Parses an option value.\r\n         * @param {!Object} parent\r\n         * @param {string} name\r\n         * @private\r\n         */\r\n        ParserPrototype._parseOptionValue = function(parent, name) {\r\n            var token = this.tn.peek();\r\n            if (token !== '{') { // Plain value\r\n                setOption(parent[\"options\"], name, this._readValue(true));\r\n            } else { // Aggregate options\r\n                this.tn.skip(\"{\");\r\n                while ((token = this.tn.next()) !== '}') {\r\n                    if (!Lang.NAME.test(token))\r\n                        throw Error(\"illegal option name: \" + name + \".\" + token);\r\n                    if (this.tn.omit(\":\"))\r\n                        setOption(parent[\"options\"], name + \".\" + token, this._readValue(true));\r\n                    else\r\n                        this._parseOptionValue(parent, name + \".\" + token);\r\n                }\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Parses a service definition.\r\n         * @param {!Object} parent Parent definition\r\n         * @private\r\n         */\r\n        ParserPrototype._parseService = function(parent) {\r\n            var token = this.tn.next();\r\n            if (!Lang.NAME.test(token))\r\n                throw Error(\"illegal service name at line \"+this.tn.line+\": \"+token);\r\n            var name = token;\r\n            var svc = {\r\n                \"name\": name,\r\n                \"rpc\": {},\r\n                \"options\": {}\r\n            };\r\n            this.tn.skip(\"{\");\r\n            while ((token = this.tn.next()) !== '}') {\r\n                if (token === \"option\")\r\n                    this._parseOption(svc);\r\n                else if (token === 'rpc')\r\n                    this._parseServiceRPC(svc);\r\n                else\r\n                    throw Error(\"illegal service token: \"+token);\r\n            }\r\n            this.tn.omit(\";\");\r\n            parent[\"services\"].push(svc);\r\n        };\r\n\r\n        /**\r\n         * Parses a RPC service definition of the form ['rpc', name, (request), 'returns', (response)].\r\n         * @param {!Object} svc Service definition\r\n         * @private\r\n         */\r\n        ParserPrototype._parseServiceRPC = function(svc) {\r\n            var type = \"rpc\",\r\n                token = this.tn.next();\r\n            if (!Lang.NAME.test(token))\r\n                throw Error(\"illegal rpc service method name: \"+token);\r\n            var name = token;\r\n            var method = {\r\n                \"request\": null,\r\n                \"response\": null,\r\n                \"request_stream\": false,\r\n                \"response_stream\": false,\r\n                \"options\": {}\r\n            };\r\n            this.tn.skip(\"(\");\r\n            token = this.tn.next();\r\n            if (token.toLowerCase() === \"stream\") {\r\n              method[\"request_stream\"] = true;\r\n              token = this.tn.next();\r\n            }\r\n            if (!Lang.TYPEREF.test(token))\r\n                throw Error(\"illegal rpc service request type: \"+token);\r\n            method[\"request\"] = token;\r\n            this.tn.skip(\")\");\r\n            token = this.tn.next();\r\n            if (token.toLowerCase() !== \"returns\")\r\n                throw Error(\"illegal rpc service request type delimiter: \"+token);\r\n            this.tn.skip(\"(\");\r\n            token = this.tn.next();\r\n            if (token.toLowerCase() === \"stream\") {\r\n              method[\"response_stream\"] = true;\r\n              token = this.tn.next();\r\n            }\r\n            method[\"response\"] = token;\r\n            this.tn.skip(\")\");\r\n            token = this.tn.peek();\r\n            if (token === '{') {\r\n                this.tn.next();\r\n                while ((token = this.tn.next()) !== '}') {\r\n                    if (token === 'option')\r\n                        this._parseOption(method);\r\n                    else\r\n                        throw Error(\"illegal rpc service token: \" + token);\r\n                }\r\n                this.tn.omit(\";\");\r\n            } else\r\n                this.tn.skip(\";\");\r\n            if (typeof svc[type] === 'undefined')\r\n                svc[type] = {};\r\n            svc[type][name] = method;\r\n        };\r\n\r\n        /**\r\n         * Parses a message definition.\r\n         * @param {!Object} parent Parent definition\r\n         * @param {!Object=} fld Field definition if this is a group\r\n         * @returns {!Object}\r\n         * @private\r\n         */\r\n        ParserPrototype._parseMessage = function(parent, fld) {\r\n            var isGroup = !!fld,\r\n                token = this.tn.next();\r\n            var msg = {\r\n                \"name\": \"\",\r\n                \"fields\": [],\r\n                \"enums\": [],\r\n                \"messages\": [],\r\n                \"options\": {},\r\n                \"services\": [],\r\n                \"oneofs\": {}\r\n                // \"extensions\": undefined\r\n            };\r\n            if (!Lang.NAME.test(token))\r\n                throw Error(\"illegal \"+(isGroup ? \"group\" : \"message\")+\" name: \"+token);\r\n            msg[\"name\"] = token;\r\n            if (isGroup) {\r\n                this.tn.skip(\"=\");\r\n                fld[\"id\"] = mkId(this.tn.next());\r\n                msg[\"isGroup\"] = true;\r\n            }\r\n            token = this.tn.peek();\r\n            if (token === '[' && fld)\r\n                this._parseFieldOptions(fld);\r\n            this.tn.skip(\"{\");\r\n            while ((token = this.tn.next()) !== '}') {\r\n                if (Lang.RULE.test(token))\r\n                    this._parseMessageField(msg, token);\r\n                else if (token === \"oneof\")\r\n                    this._parseMessageOneOf(msg);\r\n                else if (token === \"enum\")\r\n                    this._parseEnum(msg);\r\n                else if (token === \"message\")\r\n                    this._parseMessage(msg);\r\n                else if (token === \"option\")\r\n                    this._parseOption(msg);\r\n                else if (token === \"service\")\r\n                    this._parseService(msg);\r\n                else if (token === \"extensions\")\r\n                    this._parseExtensions(msg);\r\n                else if (token === \"extend\")\r\n                    this._parseExtend(msg);\r\n                else if (token === \"reserved\")\r\n                    this._parseMessageReserved(msg);\r\n                else if (Lang.TYPEREF.test(token)) {\r\n                    if (!this.proto3)\r\n                        throw Error(\"illegal field rule: \"+token);\r\n                    this._parseMessageField(msg, \"optional\", token);\r\n                } else\r\n                    throw Error(\"illegal message token: \"+token);\r\n            }\r\n            this.tn.omit(\";\");\r\n            parent[\"messages\"].push(msg);\r\n            return msg;\r\n        };\r\n\r\n        /**\r\n         * Parses a message's reserved ids / names statement.\r\n         * @param {!Object} msg Message definition\r\n         * @private\r\n         */\r\n        ParserPrototype._parseMessageReserved = function(msg) {\r\n            // TODO: This currently just skips a reserved statement for compatibility.\r\n            // Valid formats are\r\n            //   reserved 2, 15, 9 to 11;\r\n            // for reserved ids or\r\n            //   reserved \"foo\", \"bar\";\r\n            // for reserved names.\r\n            while (this.tn.peek() !== ';')\r\n                this.tn.next();\r\n            this.tn.skip(\";\");\r\n        };\r\n\r\n        /**\r\n         * Parses a message field.\r\n         * @param {!Object} msg Message definition\r\n         * @param {string} rule Field rule\r\n         * @param {string=} type Field type if already known (never known for maps)\r\n         * @returns {!Object} Field descriptor\r\n         * @private\r\n         */\r\n        ParserPrototype._parseMessageField = function(msg, rule, type) {\r\n            if (!Lang.RULE.test(rule))\r\n                throw Error(\"illegal message field rule: \"+rule);\r\n            var fld = {\r\n                \"rule\": rule,\r\n                \"type\": \"\",\r\n                \"name\": \"\",\r\n                \"options\": {},\r\n                \"id\": 0\r\n            };\r\n            var token;\r\n            if (rule === \"map\") {\r\n\r\n                if (type)\r\n                    throw Error(\"illegal type: \" + type);\r\n                this.tn.skip('<');\r\n                token = this.tn.next();\r\n                if (!Lang.TYPE.test(token) && !Lang.TYPEREF.test(token))\r\n                    throw Error(\"illegal message field type: \" + token);\r\n                fld[\"keytype\"] = token;\r\n                this.tn.skip(',');\r\n                token = this.tn.next();\r\n                if (!Lang.TYPE.test(token) && !Lang.TYPEREF.test(token))\r\n                    throw Error(\"illegal message field: \" + token);\r\n                fld[\"type\"] = token;\r\n                this.tn.skip('>');\r\n                token = this.tn.next();\r\n                if (!Lang.NAME.test(token))\r\n                    throw Error(\"illegal message field name: \" + token);\r\n                fld[\"name\"] = token;\r\n                this.tn.skip(\"=\");\r\n                fld[\"id\"] = mkId(this.tn.next());\r\n                token = this.tn.peek();\r\n                if (token === '[')\r\n                    this._parseFieldOptions(fld);\r\n                this.tn.skip(\";\");\r\n\r\n            } else {\r\n\r\n                type = typeof type !== 'undefined' ? type : this.tn.next();\r\n\r\n                if (type === \"group\") {\r\n\r\n                    // \"A [legacy] group simply combines a nested message type and a field into a single declaration. In your\r\n                    // code, you can treat this message just as if it had a Result type field called result (the latter name is\r\n                    // converted to lower-case so that it does not conflict with the former).\"\r\n                    var grp = this._parseMessage(msg, fld);\r\n                    if (!/^[A-Z]/.test(grp[\"name\"]))\r\n                        throw Error('illegal group name: '+grp[\"name\"]);\r\n                    fld[\"type\"] = grp[\"name\"];\r\n                    fld[\"name\"] = grp[\"name\"].toLowerCase();\r\n                    this.tn.omit(\";\");\r\n\r\n                } else {\r\n\r\n                    if (!Lang.TYPE.test(type) && !Lang.TYPEREF.test(type))\r\n                        throw Error(\"illegal message field type: \" + type);\r\n                    fld[\"type\"] = type;\r\n                    token = this.tn.next();\r\n                    if (!Lang.NAME.test(token))\r\n                        throw Error(\"illegal message field name: \" + token);\r\n                    fld[\"name\"] = token;\r\n                    this.tn.skip(\"=\");\r\n                    fld[\"id\"] = mkId(this.tn.next());\r\n                    token = this.tn.peek();\r\n                    if (token === \"[\")\r\n                        this._parseFieldOptions(fld);\r\n                    this.tn.skip(\";\");\r\n\r\n                }\r\n            }\r\n            msg[\"fields\"].push(fld);\r\n            return fld;\r\n        };\r\n\r\n        /**\r\n         * Parses a message oneof.\r\n         * @param {!Object} msg Message definition\r\n         * @private\r\n         */\r\n        ParserPrototype._parseMessageOneOf = function(msg) {\r\n            var token = this.tn.next();\r\n            if (!Lang.NAME.test(token))\r\n                throw Error(\"illegal oneof name: \"+token);\r\n            var name = token,\r\n                fld;\r\n            var fields = [];\r\n            this.tn.skip(\"{\");\r\n            while ((token = this.tn.next()) !== \"}\") {\r\n                fld = this._parseMessageField(msg, \"optional\", token);\r\n                fld[\"oneof\"] = name;\r\n                fields.push(fld[\"id\"]);\r\n            }\r\n            this.tn.omit(\";\");\r\n            msg[\"oneofs\"][name] = fields;\r\n        };\r\n\r\n        /**\r\n         * Parses a set of field option definitions.\r\n         * @param {!Object} fld Field definition\r\n         * @private\r\n         */\r\n        ParserPrototype._parseFieldOptions = function(fld) {\r\n            this.tn.skip(\"[\");\r\n            var token,\r\n                first = true;\r\n            while ((token = this.tn.peek()) !== ']') {\r\n                if (!first)\r\n                    this.tn.skip(\",\");\r\n                this._parseOption(fld, true);\r\n                first = false;\r\n            }\r\n            this.tn.next();\r\n        };\r\n\r\n        /**\r\n         * Parses an enum.\r\n         * @param {!Object} msg Message definition\r\n         * @private\r\n         */\r\n        ParserPrototype._parseEnum = function(msg) {\r\n            var enm = {\r\n                \"name\": \"\",\r\n                \"values\": [],\r\n                \"options\": {}\r\n            };\r\n            var token = this.tn.next();\r\n            if (!Lang.NAME.test(token))\r\n                throw Error(\"illegal name: \"+token);\r\n            enm[\"name\"] = token;\r\n            this.tn.skip(\"{\");\r\n            while ((token = this.tn.next()) !== '}') {\r\n                if (token === \"option\")\r\n                    this._parseOption(enm);\r\n                else {\r\n                    if (!Lang.NAME.test(token))\r\n                        throw Error(\"illegal name: \"+token);\r\n                    this.tn.skip(\"=\");\r\n                    var val = {\r\n                        \"name\": token,\r\n                        \"id\": mkId(this.tn.next(), true)\r\n                    };\r\n                    token = this.tn.peek();\r\n                    if (token === \"[\")\r\n                        this._parseFieldOptions({ \"options\": {} });\r\n                    this.tn.skip(\";\");\r\n                    enm[\"values\"].push(val);\r\n                }\r\n            }\r\n            this.tn.omit(\";\");\r\n            msg[\"enums\"].push(enm);\r\n        };\r\n\r\n        /**\r\n         * Parses an extensions statement.\r\n         * @param {!Object} msg Message object\r\n         * @private\r\n         */\r\n        ParserPrototype._parseExtensions = function(msg) {\r\n            var token = this.tn.next(),\r\n                range = [];\r\n            if (token === \"min\")\r\n                range.push(ProtoBuf.ID_MIN);\r\n            else if (token === \"max\")\r\n                range.push(ProtoBuf.ID_MAX);\r\n            else\r\n                range.push(mkNumber(token));\r\n            this.tn.skip(\"to\");\r\n            token = this.tn.next();\r\n            if (token === \"min\")\r\n                range.push(ProtoBuf.ID_MIN);\r\n            else if (token === \"max\")\r\n                range.push(ProtoBuf.ID_MAX);\r\n            else\r\n                range.push(mkNumber(token));\r\n            this.tn.skip(\";\");\r\n            msg[\"extensions\"] = range;\r\n        };\r\n\r\n        /**\r\n         * Parses an extend block.\r\n         * @param {!Object} parent Parent object\r\n         * @private\r\n         */\r\n        ParserPrototype._parseExtend = function(parent) {\r\n            var token = this.tn.next();\r\n            if (!Lang.TYPEREF.test(token))\r\n                throw Error(\"illegal extend reference: \"+token);\r\n            var ext = {\r\n                \"ref\": token,\r\n                \"fields\": []\r\n            };\r\n            this.tn.skip(\"{\");\r\n            while ((token = this.tn.next()) !== '}') {\r\n                if (Lang.RULE.test(token))\r\n                    this._parseMessageField(ext, token);\r\n                else if (Lang.TYPEREF.test(token)) {\r\n                    if (!this.proto3)\r\n                        throw Error(\"illegal field rule: \"+token);\r\n                    this._parseMessageField(ext, \"optional\", token);\r\n                } else\r\n                    throw Error(\"illegal extend token: \"+token);\r\n            }\r\n            this.tn.omit(\";\");\r\n            parent[\"messages\"].push(ext);\r\n            return ext;\r\n        };\r\n\r\n        // ----- General -----\r\n\r\n        /**\r\n         * Returns a string representation of this parser.\r\n         * @returns {string}\r\n         */\r\n        ParserPrototype.toString = function() {\r\n            return \"Parser at line \"+this.tn.line;\r\n        };\r\n\r\n        /**\r\n         * @alias ProtoBuf.DotProto.Parser\r\n         * @expose\r\n         */\r\n        DotProto.Parser = Parser;\r\n\r\n        return DotProto;\r\n\r\n    })(ProtoBuf, ProtoBuf.Lang);\r\n\r\n    /**\r\n     * @alias ProtoBuf.Reflect\r\n     * @expose\r\n     */\r\n    ProtoBuf.Reflect = (function(ProtoBuf) {\r\n        \"use strict\";\r\n\r\n        /**\r\n         * Reflection types.\r\n         * @exports ProtoBuf.Reflect\r\n         * @namespace\r\n         */\r\n        var Reflect = {};\r\n\r\n        /**\r\n         * Constructs a Reflect base class.\r\n         * @exports ProtoBuf.Reflect.T\r\n         * @constructor\r\n         * @abstract\r\n         * @param {!ProtoBuf.Builder} builder Builder reference\r\n         * @param {?ProtoBuf.Reflect.T} parent Parent object\r\n         * @param {string} name Object name\r\n         */\r\n        var T = function(builder, parent, name) {\r\n\r\n            /**\r\n             * Builder reference.\r\n             * @type {!ProtoBuf.Builder}\r\n             * @expose\r\n             */\r\n            this.builder = builder;\r\n\r\n            /**\r\n             * Parent object.\r\n             * @type {?ProtoBuf.Reflect.T}\r\n             * @expose\r\n             */\r\n            this.parent = parent;\r\n\r\n            /**\r\n             * Object name in namespace.\r\n             * @type {string}\r\n             * @expose\r\n             */\r\n            this.name = name;\r\n\r\n            /**\r\n             * Fully qualified class name\r\n             * @type {string}\r\n             * @expose\r\n             */\r\n            this.className;\r\n        };\r\n\r\n        /**\r\n         * @alias ProtoBuf.Reflect.T.prototype\r\n         * @inner\r\n         */\r\n        var TPrototype = T.prototype;\r\n\r\n        /**\r\n         * Returns the fully qualified name of this object.\r\n         * @returns {string} Fully qualified name as of \".PATH.TO.THIS\"\r\n         * @expose\r\n         */\r\n        TPrototype.fqn = function() {\r\n            var name = this.name,\r\n                ptr = this;\r\n            do {\r\n                ptr = ptr.parent;\r\n                if (ptr == null)\r\n                    break;\r\n                name = ptr.name+\".\"+name;\r\n            } while (true);\r\n            return name;\r\n        };\r\n\r\n        /**\r\n         * Returns a string representation of this Reflect object (its fully qualified name).\r\n         * @param {boolean=} includeClass Set to true to include the class name. Defaults to false.\r\n         * @return String representation\r\n         * @expose\r\n         */\r\n        TPrototype.toString = function(includeClass) {\r\n            return (includeClass ? this.className + \" \" : \"\") + this.fqn();\r\n        };\r\n\r\n        /**\r\n         * Builds this type.\r\n         * @throws {Error} If this type cannot be built directly\r\n         * @expose\r\n         */\r\n        TPrototype.build = function() {\r\n            throw Error(this.toString(true)+\" cannot be built directly\");\r\n        };\r\n\r\n        /**\r\n         * @alias ProtoBuf.Reflect.T\r\n         * @expose\r\n         */\r\n        Reflect.T = T;\r\n\r\n        /**\r\n         * Constructs a new Namespace.\r\n         * @exports ProtoBuf.Reflect.Namespace\r\n         * @param {!ProtoBuf.Builder} builder Builder reference\r\n         * @param {?ProtoBuf.Reflect.Namespace} parent Namespace parent\r\n         * @param {string} name Namespace name\r\n         * @param {Object.<string,*>=} options Namespace options\r\n         * @param {string?} syntax The syntax level of this definition (e.g., proto3)\r\n         * @constructor\r\n         * @extends ProtoBuf.Reflect.T\r\n         */\r\n        var Namespace = function(builder, parent, name, options, syntax) {\r\n            T.call(this, builder, parent, name);\r\n\r\n            /**\r\n             * @override\r\n             */\r\n            this.className = \"Namespace\";\r\n\r\n            /**\r\n             * Children inside the namespace.\r\n             * @type {!Array.<ProtoBuf.Reflect.T>}\r\n             */\r\n            this.children = [];\r\n\r\n            /**\r\n             * Options.\r\n             * @type {!Object.<string, *>}\r\n             */\r\n            this.options = options || {};\r\n\r\n            /**\r\n             * Syntax level (e.g., proto2 or proto3).\r\n             * @type {!string}\r\n             */\r\n            this.syntax = syntax || \"proto2\";\r\n        };\r\n\r\n        /**\r\n         * @alias ProtoBuf.Reflect.Namespace.prototype\r\n         * @inner\r\n         */\r\n        var NamespacePrototype = Namespace.prototype = Object.create(T.prototype);\r\n\r\n        /**\r\n         * Returns an array of the namespace's children.\r\n         * @param {ProtoBuf.Reflect.T=} type Filter type (returns instances of this type only). Defaults to null (all children).\r\n         * @return {Array.<ProtoBuf.Reflect.T>}\r\n         * @expose\r\n         */\r\n        NamespacePrototype.getChildren = function(type) {\r\n            type = type || null;\r\n            if (type == null)\r\n                return this.children.slice();\r\n            var children = [];\r\n            for (var i=0, k=this.children.length; i<k; ++i)\r\n                if (this.children[i] instanceof type)\r\n                    children.push(this.children[i]);\r\n            return children;\r\n        };\r\n\r\n        /**\r\n         * Adds a child to the namespace.\r\n         * @param {ProtoBuf.Reflect.T} child Child\r\n         * @throws {Error} If the child cannot be added (duplicate)\r\n         * @expose\r\n         */\r\n        NamespacePrototype.addChild = function(child) {\r\n            var other;\r\n            if (other = this.getChild(child.name)) {\r\n                // Try to revert camelcase transformation on collision\r\n                if (other instanceof Message.Field && other.name !== other.originalName && this.getChild(other.originalName) === null)\r\n                    other.name = other.originalName; // Revert previous first (effectively keeps both originals)\r\n                else if (child instanceof Message.Field && child.name !== child.originalName && this.getChild(child.originalName) === null)\r\n                    child.name = child.originalName;\r\n                else\r\n                    throw Error(\"Duplicate name in namespace \"+this.toString(true)+\": \"+child.name);\r\n            }\r\n            this.children.push(child);\r\n        };\r\n\r\n        /**\r\n         * Gets a child by its name or id.\r\n         * @param {string|number} nameOrId Child name or id\r\n         * @return {?ProtoBuf.Reflect.T} The child or null if not found\r\n         * @expose\r\n         */\r\n        NamespacePrototype.getChild = function(nameOrId) {\r\n            var key = typeof nameOrId === 'number' ? 'id' : 'name';\r\n            for (var i=0, k=this.children.length; i<k; ++i)\r\n                if (this.children[i][key] === nameOrId)\r\n                    return this.children[i];\r\n            return null;\r\n        };\r\n\r\n        /**\r\n         * Resolves a reflect object inside of this namespace.\r\n         * @param {string|!Array.<string>} qn Qualified name to resolve\r\n         * @param {boolean=} excludeNonNamespace Excludes non-namespace types, defaults to `false`\r\n         * @return {?ProtoBuf.Reflect.Namespace} The resolved type or null if not found\r\n         * @expose\r\n         */\r\n        NamespacePrototype.resolve = function(qn, excludeNonNamespace) {\r\n            var part = typeof qn === 'string' ? qn.split(\".\") : qn,\r\n                ptr = this,\r\n                i = 0;\r\n            if (part[i] === \"\") { // Fully qualified name, e.g. \".My.Message'\r\n                while (ptr.parent !== null)\r\n                    ptr = ptr.parent;\r\n                i++;\r\n            }\r\n            var child;\r\n            do {\r\n                do {\r\n                    if (!(ptr instanceof Reflect.Namespace)) {\r\n                        ptr = null;\r\n                        break;\r\n                    }\r\n                    child = ptr.getChild(part[i]);\r\n                    if (!child || !(child instanceof Reflect.T) || (excludeNonNamespace && !(child instanceof Reflect.Namespace))) {\r\n                        ptr = null;\r\n                        break;\r\n                    }\r\n                    ptr = child; i++;\r\n                } while (i < part.length);\r\n                if (ptr != null)\r\n                    break; // Found\r\n                // Else search the parent\r\n                if (this.parent !== null)\r\n                    return this.parent.resolve(qn, excludeNonNamespace);\r\n            } while (ptr != null);\r\n            return ptr;\r\n        };\r\n\r\n        /**\r\n         * Determines the shortest qualified name of the specified type, if any, relative to this namespace.\r\n         * @param {!ProtoBuf.Reflect.T} t Reflection type\r\n         * @returns {string} The shortest qualified name or, if there is none, the fqn\r\n         * @expose\r\n         */\r\n        NamespacePrototype.qn = function(t) {\r\n            var part = [], ptr = t;\r\n            do {\r\n                part.unshift(ptr.name);\r\n                ptr = ptr.parent;\r\n            } while (ptr !== null);\r\n            for (var len=1; len <= part.length; len++) {\r\n                var qn = part.slice(part.length-len);\r\n                if (t === this.resolve(qn, t instanceof Reflect.Namespace))\r\n                    return qn.join(\".\");\r\n            }\r\n            return t.fqn();\r\n        };\r\n\r\n        /**\r\n         * Builds the namespace and returns the runtime counterpart.\r\n         * @return {Object.<string,Function|Object>} Runtime namespace\r\n         * @expose\r\n         */\r\n        NamespacePrototype.build = function() {\r\n            /** @dict */\r\n            var ns = {};\r\n            var children = this.children;\r\n            for (var i=0, k=children.length, child; i<k; ++i) {\r\n                child = children[i];\r\n                if (child instanceof Namespace)\r\n                    ns[child.name] = child.build();\r\n            }\r\n            if (Object.defineProperty)\r\n                Object.defineProperty(ns, \"$options\", { \"value\": this.buildOpt() });\r\n            return ns;\r\n        };\r\n\r\n        /**\r\n         * Builds the namespace's '$options' property.\r\n         * @return {Object.<string,*>}\r\n         */\r\n        NamespacePrototype.buildOpt = function() {\r\n            var opt = {},\r\n                keys = Object.keys(this.options);\r\n            for (var i=0, k=keys.length; i<k; ++i) {\r\n                var key = keys[i],\r\n                    val = this.options[keys[i]];\r\n                // TODO: Options are not resolved, yet.\r\n                // if (val instanceof Namespace) {\r\n                //     opt[key] = val.build();\r\n                // } else {\r\n                opt[key] = val;\r\n                // }\r\n            }\r\n            return opt;\r\n        };\r\n\r\n        /**\r\n         * Gets the value assigned to the option with the specified name.\r\n         * @param {string=} name Returns the option value if specified, otherwise all options are returned.\r\n         * @return {*|Object.<string,*>}null} Option value or NULL if there is no such option\r\n         */\r\n        NamespacePrototype.getOption = function(name) {\r\n            if (typeof name === 'undefined')\r\n                return this.options;\r\n            return typeof this.options[name] !== 'undefined' ? this.options[name] : null;\r\n        };\r\n\r\n        /**\r\n         * @alias ProtoBuf.Reflect.Namespace\r\n         * @expose\r\n         */\r\n        Reflect.Namespace = Namespace;\r\n\r\n        /**\r\n         * Constructs a new Element implementation that checks and converts values for a\r\n         * particular field type, as appropriate.\r\n         *\r\n         * An Element represents a single value: either the value of a singular field,\r\n         * or a value contained in one entry of a repeated field or map field. This\r\n         * class does not implement these higher-level concepts; it only encapsulates\r\n         * the low-level typechecking and conversion.\r\n         *\r\n         * @exports ProtoBuf.Reflect.Element\r\n         * @param {{name: string, wireType: number}} type Resolved data type\r\n         * @param {ProtoBuf.Reflect.T|null} resolvedType Resolved type, if relevant\r\n         * (e.g. submessage field).\r\n         * @param {boolean} isMapKey Is this element a Map key? The value will be\r\n         * converted to string form if so.\r\n         * @param {string} syntax Syntax level of defining message type, e.g.,\r\n         * proto2 or proto3.\r\n         * @constructor\r\n         */\r\n        var Element = function(type, resolvedType, isMapKey, syntax) {\r\n\r\n            /**\r\n             * Element type, as a string (e.g., int32).\r\n             * @type {{name: string, wireType: number}}\r\n             */\r\n            this.type = type;\r\n\r\n            /**\r\n             * Element type reference to submessage or enum definition, if needed.\r\n             * @type {ProtoBuf.Reflect.T|null}\r\n             */\r\n            this.resolvedType = resolvedType;\r\n\r\n            /**\r\n             * Element is a map key.\r\n             * @type {boolean}\r\n             */\r\n            this.isMapKey = isMapKey;\r\n\r\n            /**\r\n             * Syntax level of defining message type, e.g., proto2 or proto3.\r\n             * @type {string}\r\n             */\r\n            this.syntax = syntax;\r\n\r\n            if (isMapKey && ProtoBuf.MAP_KEY_TYPES.indexOf(type) < 0)\r\n                throw Error(\"Invalid map key type: \" + type.name);\r\n        };\r\n\r\n        var ElementPrototype = Element.prototype;\r\n\r\n        /**\r\n         * Obtains a (new) default value for the specified type.\r\n         * @param type {string|{name: string, wireType: number}} Field type\r\n         * @returns {*} Default value\r\n         * @inner\r\n         */\r\n        function mkDefault(type) {\r\n            if (typeof type === 'string')\r\n                type = ProtoBuf.TYPES[type];\r\n            if (typeof type.defaultValue === 'undefined')\r\n                throw Error(\"default value for type \"+type.name+\" is not supported\");\r\n            if (type == ProtoBuf.TYPES[\"bytes\"])\r\n                return new ByteBuffer(0);\r\n            return type.defaultValue;\r\n        }\r\n\r\n        /**\r\n         * Returns the default value for this field in proto3.\r\n         * @function\r\n         * @param type {string|{name: string, wireType: number}} the field type\r\n         * @returns {*} Default value\r\n         */\r\n        Element.defaultFieldValue = mkDefault;\r\n\r\n        /**\r\n         * Makes a Long from a value.\r\n         * @param {{low: number, high: number, unsigned: boolean}|string|number} value Value\r\n         * @param {boolean=} unsigned Whether unsigned or not, defaults to reuse it from Long-like objects or to signed for\r\n         *  strings and numbers\r\n         * @returns {!Long}\r\n         * @throws {Error} If the value cannot be converted to a Long\r\n         * @inner\r\n         */\r\n        function mkLong(value, unsigned) {\r\n            if (value && typeof value.low === 'number' && typeof value.high === 'number' && typeof value.unsigned === 'boolean'\r\n                && value.low === value.low && value.high === value.high)\r\n                return new ProtoBuf.Long(value.low, value.high, typeof unsigned === 'undefined' ? value.unsigned : unsigned);\r\n            if (typeof value === 'string')\r\n                return ProtoBuf.Long.fromString(value, unsigned || false, 10);\r\n            if (typeof value === 'number')\r\n                return ProtoBuf.Long.fromNumber(value, unsigned || false);\r\n            throw Error(\"not convertible to Long\");\r\n        }\r\n\r\n        /**\r\n         * Checks if the given value can be set for an element of this type (singular\r\n         * field or one element of a repeated field or map).\r\n         * @param {*} value Value to check\r\n         * @return {*} Verified, maybe adjusted, value\r\n         * @throws {Error} If the value cannot be verified for this element slot\r\n         * @expose\r\n         */\r\n        ElementPrototype.verifyValue = function(value) {\r\n            var fail = function(val, msg) {\r\n                throw Error(\"Illegal value for \"+this.toString(true)+\" of type \"+this.type.name+\": \"+val+\" (\"+msg+\")\");\r\n            }.bind(this);\r\n            switch (this.type) {\r\n                // Signed 32bit\r\n                case ProtoBuf.TYPES[\"int32\"]:\r\n                case ProtoBuf.TYPES[\"sint32\"]:\r\n                case ProtoBuf.TYPES[\"sfixed32\"]:\r\n                    // Account for !NaN: value === value\r\n                    if (typeof value !== 'number' || (value === value && value % 1 !== 0))\r\n                        fail(typeof value, \"not an integer\");\r\n                    return value > 4294967295 ? value | 0 : value;\r\n\r\n                // Unsigned 32bit\r\n                case ProtoBuf.TYPES[\"uint32\"]:\r\n                case ProtoBuf.TYPES[\"fixed32\"]:\r\n                    if (typeof value !== 'number' || (value === value && value % 1 !== 0))\r\n                        fail(typeof value, \"not an integer\");\r\n                    return value < 0 ? value >>> 0 : value;\r\n\r\n                // Signed 64bit\r\n                case ProtoBuf.TYPES[\"int64\"]:\r\n                case ProtoBuf.TYPES[\"sint64\"]:\r\n                case ProtoBuf.TYPES[\"sfixed64\"]: {\r\n                    if (ProtoBuf.Long)\r\n                        try {\r\n                            return mkLong(value, false);\r\n                        } catch (e) {\r\n                            fail(typeof value, e.message);\r\n                        }\r\n                    else\r\n                        fail(typeof value, \"requires Long.js\");\r\n                }\r\n\r\n                // Unsigned 64bit\r\n                case ProtoBuf.TYPES[\"uint64\"]:\r\n                case ProtoBuf.TYPES[\"fixed64\"]: {\r\n                    if (ProtoBuf.Long)\r\n                        try {\r\n                            return mkLong(value, true);\r\n                        } catch (e) {\r\n                            fail(typeof value, e.message);\r\n                        }\r\n                    else\r\n                        fail(typeof value, \"requires Long.js\");\r\n                }\r\n\r\n                // Bool\r\n                case ProtoBuf.TYPES[\"bool\"]:\r\n                    if (typeof value !== 'boolean')\r\n                        fail(typeof value, \"not a boolean\");\r\n                    return value;\r\n\r\n                // Float\r\n                case ProtoBuf.TYPES[\"float\"]:\r\n                case ProtoBuf.TYPES[\"double\"]:\r\n                    if (typeof value !== 'number')\r\n                        fail(typeof value, \"not a number\");\r\n                    return value;\r\n\r\n                // Length-delimited string\r\n                case ProtoBuf.TYPES[\"string\"]:\r\n                    if (typeof value !== 'string' && !(value && value instanceof String))\r\n                        fail(typeof value, \"not a string\");\r\n                    return \"\"+value; // Convert String object to string\r\n\r\n                // Length-delimited bytes\r\n                case ProtoBuf.TYPES[\"bytes\"]:\r\n                    if (ByteBuffer.isByteBuffer(value))\r\n                        return value;\r\n                    return ByteBuffer.wrap(value, \"base64\");\r\n\r\n                // Constant enum value\r\n                case ProtoBuf.TYPES[\"enum\"]: {\r\n                    var values = this.resolvedType.getChildren(ProtoBuf.Reflect.Enum.Value);\r\n                    for (i=0; i<values.length; i++)\r\n                        if (values[i].name == value)\r\n                            return values[i].id;\r\n                        else if (values[i].id == value)\r\n                            return values[i].id;\r\n\r\n                    if (this.syntax === 'proto3') {\r\n                        // proto3: just make sure it's an integer.\r\n                        if (typeof value !== 'number' || (value === value && value % 1 !== 0))\r\n                            fail(typeof value, \"not an integer\");\r\n                        if (value > 4294967295 || value < 0)\r\n                            fail(typeof value, \"not in range for uint32\")\r\n                        return value;\r\n                    } else {\r\n                        // proto2 requires enum values to be valid.\r\n                        fail(value, \"not a valid enum value\");\r\n                    }\r\n                }\r\n                // Embedded message\r\n                case ProtoBuf.TYPES[\"group\"]:\r\n                case ProtoBuf.TYPES[\"message\"]: {\r\n                    if (!value || typeof value !== 'object')\r\n                        fail(typeof value, \"object expected\");\r\n                    if (value instanceof this.resolvedType.clazz)\r\n                        return value;\r\n                    if (value instanceof ProtoBuf.Builder.Message) {\r\n                        // Mismatched type: Convert to object (see: https://github.com/dcodeIO/ProtoBuf.js/issues/180)\r\n                        var obj = {};\r\n                        for (var i in value)\r\n                            if (value.hasOwnProperty(i))\r\n                                obj[i] = value[i];\r\n                        value = obj;\r\n                    }\r\n                    // Else let's try to construct one from a key-value object\r\n                    return new (this.resolvedType.clazz)(value); // May throw for a hundred of reasons\r\n                }\r\n            }\r\n\r\n            // We should never end here\r\n            throw Error(\"[INTERNAL] Illegal value for \"+this.toString(true)+\": \"+value+\" (undefined type \"+this.type+\")\");\r\n        };\r\n\r\n        /**\r\n         * Calculates the byte length of an element on the wire.\r\n         * @param {number} id Field number\r\n         * @param {*} value Field value\r\n         * @returns {number} Byte length\r\n         * @throws {Error} If the value cannot be calculated\r\n         * @expose\r\n         */\r\n        ElementPrototype.calculateLength = function(id, value) {\r\n            if (value === null) return 0; // Nothing to encode\r\n            // Tag has already been written\r\n            var n;\r\n            switch (this.type) {\r\n                case ProtoBuf.TYPES[\"int32\"]:\r\n                    return value < 0 ? ByteBuffer.calculateVarint64(value) : ByteBuffer.calculateVarint32(value);\r\n                case ProtoBuf.TYPES[\"uint32\"]:\r\n                    return ByteBuffer.calculateVarint32(value);\r\n                case ProtoBuf.TYPES[\"sint32\"]:\r\n                    return ByteBuffer.calculateVarint32(ByteBuffer.zigZagEncode32(value));\r\n                case ProtoBuf.TYPES[\"fixed32\"]:\r\n                case ProtoBuf.TYPES[\"sfixed32\"]:\r\n                case ProtoBuf.TYPES[\"float\"]:\r\n                    return 4;\r\n                case ProtoBuf.TYPES[\"int64\"]:\r\n                case ProtoBuf.TYPES[\"uint64\"]:\r\n                    return ByteBuffer.calculateVarint64(value);\r\n                case ProtoBuf.TYPES[\"sint64\"]:\r\n                    return ByteBuffer.calculateVarint64(ByteBuffer.zigZagEncode64(value));\r\n                case ProtoBuf.TYPES[\"fixed64\"]:\r\n                case ProtoBuf.TYPES[\"sfixed64\"]:\r\n                    return 8;\r\n                case ProtoBuf.TYPES[\"bool\"]:\r\n                    return 1;\r\n                case ProtoBuf.TYPES[\"enum\"]:\r\n                    return ByteBuffer.calculateVarint32(value);\r\n                case ProtoBuf.TYPES[\"double\"]:\r\n                    return 8;\r\n                case ProtoBuf.TYPES[\"string\"]:\r\n                    n = ByteBuffer.calculateUTF8Bytes(value);\r\n                    return ByteBuffer.calculateVarint32(n) + n;\r\n                case ProtoBuf.TYPES[\"bytes\"]:\r\n                    if (value.remaining() < 0)\r\n                        throw Error(\"Illegal value for \"+this.toString(true)+\": \"+value.remaining()+\" bytes remaining\");\r\n                    return ByteBuffer.calculateVarint32(value.remaining()) + value.remaining();\r\n                case ProtoBuf.TYPES[\"message\"]:\r\n                    n = this.resolvedType.calculate(value);\r\n                    return ByteBuffer.calculateVarint32(n) + n;\r\n                case ProtoBuf.TYPES[\"group\"]:\r\n                    n = this.resolvedType.calculate(value);\r\n                    return n + ByteBuffer.calculateVarint32((id << 3) | ProtoBuf.WIRE_TYPES.ENDGROUP);\r\n            }\r\n            // We should never end here\r\n            throw Error(\"[INTERNAL] Illegal value to encode in \"+this.toString(true)+\": \"+value+\" (unknown type)\");\r\n        };\r\n\r\n        /**\r\n         * Encodes a value to the specified buffer. Does not encode the key.\r\n         * @param {number} id Field number\r\n         * @param {*} value Field value\r\n         * @param {ByteBuffer} buffer ByteBuffer to encode to\r\n         * @return {ByteBuffer} The ByteBuffer for chaining\r\n         * @throws {Error} If the value cannot be encoded\r\n         * @expose\r\n         */\r\n        ElementPrototype.encodeValue = function(id, value, buffer) {\r\n            if (value === null) return buffer; // Nothing to encode\r\n            // Tag has already been written\r\n\r\n            switch (this.type) {\r\n                // 32bit signed varint\r\n                case ProtoBuf.TYPES[\"int32\"]:\r\n                    // \"If you use int32 or int64 as the type for a negative number, the resulting varint is always ten bytes\r\n                    // long – it is, effectively, treated like a very large unsigned integer.\" (see #122)\r\n                    if (value < 0)\r\n                        buffer.writeVarint64(value);\r\n                    else\r\n                        buffer.writeVarint32(value);\r\n                    break;\r\n\r\n                // 32bit unsigned varint\r\n                case ProtoBuf.TYPES[\"uint32\"]:\r\n                    buffer.writeVarint32(value);\r\n                    break;\r\n\r\n                // 32bit varint zig-zag\r\n                case ProtoBuf.TYPES[\"sint32\"]:\r\n                    buffer.writeVarint32ZigZag(value);\r\n                    break;\r\n\r\n                // Fixed unsigned 32bit\r\n                case ProtoBuf.TYPES[\"fixed32\"]:\r\n                    buffer.writeUint32(value);\r\n                    break;\r\n\r\n                // Fixed signed 32bit\r\n                case ProtoBuf.TYPES[\"sfixed32\"]:\r\n                    buffer.writeInt32(value);\r\n                    break;\r\n\r\n                // 64bit varint as-is\r\n                case ProtoBuf.TYPES[\"int64\"]:\r\n                case ProtoBuf.TYPES[\"uint64\"]:\r\n                    buffer.writeVarint64(value); // throws\r\n                    break;\r\n\r\n                // 64bit varint zig-zag\r\n                case ProtoBuf.TYPES[\"sint64\"]:\r\n                    buffer.writeVarint64ZigZag(value); // throws\r\n                    break;\r\n\r\n                // Fixed unsigned 64bit\r\n                case ProtoBuf.TYPES[\"fixed64\"]:\r\n                    buffer.writeUint64(value); // throws\r\n                    break;\r\n\r\n                // Fixed signed 64bit\r\n                case ProtoBuf.TYPES[\"sfixed64\"]:\r\n                    buffer.writeInt64(value); // throws\r\n                    break;\r\n\r\n                // Bool\r\n                case ProtoBuf.TYPES[\"bool\"]:\r\n                    if (typeof value === 'string')\r\n                        buffer.writeVarint32(value.toLowerCase() === 'false' ? 0 : !!value);\r\n                    else\r\n                        buffer.writeVarint32(value ? 1 : 0);\r\n                    break;\r\n\r\n                // Constant enum value\r\n                case ProtoBuf.TYPES[\"enum\"]:\r\n                    buffer.writeVarint32(value);\r\n                    break;\r\n\r\n                // 32bit float\r\n                case ProtoBuf.TYPES[\"float\"]:\r\n                    buffer.writeFloat32(value);\r\n                    break;\r\n\r\n                // 64bit float\r\n                case ProtoBuf.TYPES[\"double\"]:\r\n                    buffer.writeFloat64(value);\r\n                    break;\r\n\r\n                // Length-delimited string\r\n                case ProtoBuf.TYPES[\"string\"]:\r\n                    buffer.writeVString(value);\r\n                    break;\r\n\r\n                // Length-delimited bytes\r\n                case ProtoBuf.TYPES[\"bytes\"]:\r\n                    if (value.remaining() < 0)\r\n                        throw Error(\"Illegal value for \"+this.toString(true)+\": \"+value.remaining()+\" bytes remaining\");\r\n                    var prevOffset = value.offset;\r\n                    buffer.writeVarint32(value.remaining());\r\n                    buffer.append(value);\r\n                    value.offset = prevOffset;\r\n                    break;\r\n\r\n                // Embedded message\r\n                case ProtoBuf.TYPES[\"message\"]:\r\n                    var bb = new ByteBuffer().LE();\r\n                    this.resolvedType.encode(value, bb);\r\n                    buffer.writeVarint32(bb.offset);\r\n                    buffer.append(bb.flip());\r\n                    break;\r\n\r\n                // Legacy group\r\n                case ProtoBuf.TYPES[\"group\"]:\r\n                    this.resolvedType.encode(value, buffer);\r\n                    buffer.writeVarint32((id << 3) | ProtoBuf.WIRE_TYPES.ENDGROUP);\r\n                    break;\r\n\r\n                default:\r\n                    // We should never end here\r\n                    throw Error(\"[INTERNAL] Illegal value to encode in \"+this.toString(true)+\": \"+value+\" (unknown type)\");\r\n            }\r\n            return buffer;\r\n        };\r\n\r\n        /**\r\n         * Decode one element value from the specified buffer.\r\n         * @param {ByteBuffer} buffer ByteBuffer to decode from\r\n         * @param {number} wireType The field wire type\r\n         * @param {number} id The field number\r\n         * @return {*} Decoded value\r\n         * @throws {Error} If the field cannot be decoded\r\n         * @expose\r\n         */\r\n        ElementPrototype.decode = function(buffer, wireType, id) {\r\n            if (wireType != this.type.wireType)\r\n                throw Error(\"Unexpected wire type for element\");\r\n\r\n            var value, nBytes;\r\n            switch (this.type) {\r\n                // 32bit signed varint\r\n                case ProtoBuf.TYPES[\"int32\"]:\r\n                    return buffer.readVarint32() | 0;\r\n\r\n                // 32bit unsigned varint\r\n                case ProtoBuf.TYPES[\"uint32\"]:\r\n                    return buffer.readVarint32() >>> 0;\r\n\r\n                // 32bit signed varint zig-zag\r\n                case ProtoBuf.TYPES[\"sint32\"]:\r\n                    return buffer.readVarint32ZigZag() | 0;\r\n\r\n                // Fixed 32bit unsigned\r\n                case ProtoBuf.TYPES[\"fixed32\"]:\r\n                    return buffer.readUint32() >>> 0;\r\n\r\n                case ProtoBuf.TYPES[\"sfixed32\"]:\r\n                    return buffer.readInt32() | 0;\r\n\r\n                // 64bit signed varint\r\n                case ProtoBuf.TYPES[\"int64\"]:\r\n                    return buffer.readVarint64();\r\n\r\n                // 64bit unsigned varint\r\n                case ProtoBuf.TYPES[\"uint64\"]:\r\n                    return buffer.readVarint64().toUnsigned();\r\n\r\n                // 64bit signed varint zig-zag\r\n                case ProtoBuf.TYPES[\"sint64\"]:\r\n                    return buffer.readVarint64ZigZag();\r\n\r\n                // Fixed 64bit unsigned\r\n                case ProtoBuf.TYPES[\"fixed64\"]:\r\n                    return buffer.readUint64();\r\n\r\n                // Fixed 64bit signed\r\n                case ProtoBuf.TYPES[\"sfixed64\"]:\r\n                    return buffer.readInt64();\r\n\r\n                // Bool varint\r\n                case ProtoBuf.TYPES[\"bool\"]:\r\n                    return !!buffer.readVarint32();\r\n\r\n                // Constant enum value (varint)\r\n                case ProtoBuf.TYPES[\"enum\"]:\r\n                    // The following Builder.Message#set will already throw\r\n                    return buffer.readVarint32();\r\n\r\n                // 32bit float\r\n                case ProtoBuf.TYPES[\"float\"]:\r\n                    return buffer.readFloat();\r\n\r\n                // 64bit float\r\n                case ProtoBuf.TYPES[\"double\"]:\r\n                    return buffer.readDouble();\r\n\r\n                // Length-delimited string\r\n                case ProtoBuf.TYPES[\"string\"]:\r\n                    return buffer.readVString();\r\n\r\n                // Length-delimited bytes\r\n                case ProtoBuf.TYPES[\"bytes\"]: {\r\n                    nBytes = buffer.readVarint32();\r\n                    if (buffer.remaining() < nBytes)\r\n                        throw Error(\"Illegal number of bytes for \"+this.toString(true)+\": \"+nBytes+\" required but got only \"+buffer.remaining());\r\n                    value = buffer.clone(); // Offset already set\r\n                    value.limit = value.offset+nBytes;\r\n                    buffer.offset += nBytes;\r\n                    return value;\r\n                }\r\n\r\n                // Length-delimited embedded message\r\n                case ProtoBuf.TYPES[\"message\"]: {\r\n                    nBytes = buffer.readVarint32();\r\n                    return this.resolvedType.decode(buffer, nBytes);\r\n                }\r\n\r\n                // Legacy group\r\n                case ProtoBuf.TYPES[\"group\"]:\r\n                    return this.resolvedType.decode(buffer, -1, id);\r\n            }\r\n\r\n            // We should never end here\r\n            throw Error(\"[INTERNAL] Illegal decode type\");\r\n        };\r\n\r\n        /**\r\n         * Converts a value from a string to the canonical element type.\r\n         *\r\n         * Legal only when isMapKey is true.\r\n         *\r\n         * @param {string} str The string value\r\n         * @returns {*} The value\r\n         */\r\n        ElementPrototype.valueFromString = function(str) {\r\n            if (!this.isMapKey) {\r\n                throw Error(\"valueFromString() called on non-map-key element\");\r\n            }\r\n\r\n            switch (this.type) {\r\n                case ProtoBuf.TYPES[\"int32\"]:\r\n                case ProtoBuf.TYPES[\"sint32\"]:\r\n                case ProtoBuf.TYPES[\"sfixed32\"]:\r\n                case ProtoBuf.TYPES[\"uint32\"]:\r\n                case ProtoBuf.TYPES[\"fixed32\"]:\r\n                    return this.verifyValue(parseInt(str));\r\n\r\n                case ProtoBuf.TYPES[\"int64\"]:\r\n                case ProtoBuf.TYPES[\"sint64\"]:\r\n                case ProtoBuf.TYPES[\"sfixed64\"]:\r\n                case ProtoBuf.TYPES[\"uint64\"]:\r\n                case ProtoBuf.TYPES[\"fixed64\"]:\r\n                      // Long-based fields support conversions from string already.\r\n                      return this.verifyValue(str);\r\n\r\n                case ProtoBuf.TYPES[\"bool\"]:\r\n                      return str === \"true\";\r\n\r\n                case ProtoBuf.TYPES[\"string\"]:\r\n                      return this.verifyValue(str);\r\n\r\n                case ProtoBuf.TYPES[\"bytes\"]:\r\n                      return ByteBuffer.fromBinary(str);\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Converts a value from the canonical element type to a string.\r\n         *\r\n         * It should be the case that `valueFromString(valueToString(val))` returns\r\n         * a value equivalent to `verifyValue(val)` for every legal value of `val`\r\n         * according to this element type.\r\n         *\r\n         * This may be used when the element must be stored or used as a string,\r\n         * e.g., as a map key on an Object.\r\n         *\r\n         * Legal only when isMapKey is true.\r\n         *\r\n         * @param {*} val The value\r\n         * @returns {string} The string form of the value.\r\n         */\r\n        ElementPrototype.valueToString = function(value) {\r\n            if (!this.isMapKey) {\r\n                throw Error(\"valueToString() called on non-map-key element\");\r\n            }\r\n\r\n            if (this.type === ProtoBuf.TYPES[\"bytes\"]) {\r\n                return value.toString(\"binary\");\r\n            } else {\r\n                return value.toString();\r\n            }\r\n        };\r\n\r\n        /**\r\n         * @alias ProtoBuf.Reflect.Element\r\n         * @expose\r\n         */\r\n        Reflect.Element = Element;\r\n\r\n        /**\r\n         * Constructs a new Message.\r\n         * @exports ProtoBuf.Reflect.Message\r\n         * @param {!ProtoBuf.Builder} builder Builder reference\r\n         * @param {!ProtoBuf.Reflect.Namespace} parent Parent message or namespace\r\n         * @param {string} name Message name\r\n         * @param {Object.<string,*>=} options Message options\r\n         * @param {boolean=} isGroup `true` if this is a legacy group\r\n         * @param {string?} syntax The syntax level of this definition (e.g., proto3)\r\n         * @constructor\r\n         * @extends ProtoBuf.Reflect.Namespace\r\n         */\r\n        var Message = function(builder, parent, name, options, isGroup, syntax) {\r\n            Namespace.call(this, builder, parent, name, options, syntax);\r\n\r\n            /**\r\n             * @override\r\n             */\r\n            this.className = \"Message\";\r\n\r\n            /**\r\n             * Extensions range.\r\n             * @type {!Array.<number>}\r\n             * @expose\r\n             */\r\n            this.extensions = [ProtoBuf.ID_MIN, ProtoBuf.ID_MAX];\r\n\r\n            /**\r\n             * Runtime message class.\r\n             * @type {?function(new:ProtoBuf.Builder.Message)}\r\n             * @expose\r\n             */\r\n            this.clazz = null;\r\n\r\n            /**\r\n             * Whether this is a legacy group or not.\r\n             * @type {boolean}\r\n             * @expose\r\n             */\r\n            this.isGroup = !!isGroup;\r\n\r\n            // The following cached collections are used to efficiently iterate over or look up fields when decoding.\r\n\r\n            /**\r\n             * Cached fields.\r\n             * @type {?Array.<!ProtoBuf.Reflect.Message.Field>}\r\n             * @private\r\n             */\r\n            this._fields = null;\r\n\r\n            /**\r\n             * Cached fields by id.\r\n             * @type {?Object.<number,!ProtoBuf.Reflect.Message.Field>}\r\n             * @private\r\n             */\r\n            this._fieldsById = null;\r\n\r\n            /**\r\n             * Cached fields by name.\r\n             * @type {?Object.<string,!ProtoBuf.Reflect.Message.Field>}\r\n             * @private\r\n             */\r\n            this._fieldsByName = null;\r\n        };\r\n\r\n        /**\r\n         * @alias ProtoBuf.Reflect.Message.prototype\r\n         * @inner\r\n         */\r\n        var MessagePrototype = Message.prototype = Object.create(Namespace.prototype);\r\n\r\n        /**\r\n         * Builds the message and returns the runtime counterpart, which is a fully functional class.\r\n         * @see ProtoBuf.Builder.Message\r\n         * @param {boolean=} rebuild Whether to rebuild or not, defaults to false\r\n         * @return {ProtoBuf.Reflect.Message} Message class\r\n         * @throws {Error} If the message cannot be built\r\n         * @expose\r\n         */\r\n        MessagePrototype.build = function(rebuild) {\r\n            if (this.clazz && !rebuild)\r\n                return this.clazz;\r\n\r\n            // Create the runtime Message class in its own scope\r\n            var clazz = (function(ProtoBuf, T) {\r\n\r\n                var fields = T.getChildren(ProtoBuf.Reflect.Message.Field),\r\n                    oneofs = T.getChildren(ProtoBuf.Reflect.Message.OneOf);\r\n\r\n                /**\r\n                 * Constructs a new runtime Message.\r\n                 * @name ProtoBuf.Builder.Message\r\n                 * @class Barebone of all runtime messages.\r\n                 * @param {!Object.<string,*>|string} values Preset values\r\n                 * @param {...string} var_args\r\n                 * @constructor\r\n                 * @throws {Error} If the message cannot be created\r\n                 */\r\n                var Message = function(values, var_args) {\r\n                    ProtoBuf.Builder.Message.call(this);\r\n\r\n                    // Create virtual oneof properties\r\n                    for (var i=0, k=oneofs.length; i<k; ++i)\r\n                        this[oneofs[i].name] = null;\r\n                    // Create fields and set default values\r\n                    for (i=0, k=fields.length; i<k; ++i) {\r\n                        var field = fields[i];\r\n                        this[field.name] =\r\n                            field.repeated ? [] :\r\n                            (field.map ? new ProtoBuf.Map(field) : null);\r\n                        if ((field.required || T.syntax === 'proto3') &&\r\n                            field.defaultValue !== null)\r\n                            this[field.name] = field.defaultValue;\r\n                    }\r\n\r\n                    if (arguments.length > 0) {\r\n                        var value;\r\n                        // Set field values from a values object\r\n                        if (arguments.length === 1 && values !== null && typeof values === 'object' &&\r\n                            /* not _another_ Message */ (typeof values.encode !== 'function' || values instanceof Message) &&\r\n                            /* not a repeated field */ !Array.isArray(values) &&\r\n                            /* not a Map */ !(values instanceof ProtoBuf.Map) &&\r\n                            /* not a ByteBuffer */ !ByteBuffer.isByteBuffer(values) &&\r\n                            /* not an ArrayBuffer */ !(values instanceof ArrayBuffer) &&\r\n                            /* not a Long */ !(ProtoBuf.Long && values instanceof ProtoBuf.Long)) {\r\n                            this.$set(values);\r\n                        } else // Set field values from arguments, in declaration order\r\n                            for (i=0, k=arguments.length; i<k; ++i)\r\n                                if (typeof (value = arguments[i]) !== 'undefined')\r\n                                    this.$set(fields[i].name, value); // May throw\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * @alias ProtoBuf.Builder.Message.prototype\r\n                 * @inner\r\n                 */\r\n                var MessagePrototype = Message.prototype = Object.create(ProtoBuf.Builder.Message.prototype);\r\n\r\n                /**\r\n                 * Adds a value to a repeated field.\r\n                 * @name ProtoBuf.Builder.Message#add\r\n                 * @function\r\n                 * @param {string} key Field name\r\n                 * @param {*} value Value to add\r\n                 * @param {boolean=} noAssert Whether to assert the value or not (asserts by default)\r\n                 * @returns {!ProtoBuf.Builder.Message} this\r\n                 * @throws {Error} If the value cannot be added\r\n                 * @expose\r\n                 */\r\n                MessagePrototype.add = function(key, value, noAssert) {\r\n                    var field = T._fieldsByName[key];\r\n                    if (!noAssert) {\r\n                        if (!field)\r\n                            throw Error(this+\"#\"+key+\" is undefined\");\r\n                        if (!(field instanceof ProtoBuf.Reflect.Message.Field))\r\n                            throw Error(this+\"#\"+key+\" is not a field: \"+field.toString(true)); // May throw if it's an enum or embedded message\r\n                        if (!field.repeated)\r\n                            throw Error(this+\"#\"+key+\" is not a repeated field\");\r\n                        value = field.verifyValue(value, true);\r\n                    }\r\n                    if (this[key] === null)\r\n                        this[key] = [];\r\n                    this[key].push(value);\r\n                    return this;\r\n                };\r\n\r\n                /**\r\n                 * Adds a value to a repeated field. This is an alias for {@link ProtoBuf.Builder.Message#add}.\r\n                 * @name ProtoBuf.Builder.Message#$add\r\n                 * @function\r\n                 * @param {string} key Field name\r\n                 * @param {*} value Value to add\r\n                 * @param {boolean=} noAssert Whether to assert the value or not (asserts by default)\r\n                 * @returns {!ProtoBuf.Builder.Message} this\r\n                 * @throws {Error} If the value cannot be added\r\n                 * @expose\r\n                 */\r\n                MessagePrototype.$add = MessagePrototype.add;\r\n\r\n                /**\r\n                 * Sets a field's value.\r\n                 * @name ProtoBuf.Builder.Message#set\r\n                 * @function\r\n                 * @param {string|!Object.<string,*>} keyOrObj String key or plain object holding multiple values\r\n                 * @param {(*|boolean)=} value Value to set if key is a string, otherwise omitted\r\n                 * @param {boolean=} noAssert Whether to not assert for an actual field / proper value type, defaults to `false`\r\n                 * @returns {!ProtoBuf.Builder.Message} this\r\n                 * @throws {Error} If the value cannot be set\r\n                 * @expose\r\n                 */\r\n                MessagePrototype.set = function(keyOrObj, value, noAssert) {\r\n                    if (keyOrObj && typeof keyOrObj === 'object') {\r\n                        noAssert = value;\r\n                        for (var ikey in keyOrObj)\r\n                            if (keyOrObj.hasOwnProperty(ikey) && typeof (value = keyOrObj[ikey]) !== 'undefined')\r\n                                this.$set(ikey, value, noAssert);\r\n                        return this;\r\n                    }\r\n                    var field = T._fieldsByName[keyOrObj];\r\n                    if (!noAssert) {\r\n                        if (!field)\r\n                            throw Error(this+\"#\"+keyOrObj+\" is not a field: undefined\");\r\n                        if (!(field instanceof ProtoBuf.Reflect.Message.Field))\r\n                            throw Error(this+\"#\"+keyOrObj+\" is not a field: \"+field.toString(true));\r\n                        this[field.name] = (value = field.verifyValue(value)); // May throw\r\n                    } else\r\n                        this[keyOrObj] = value;\r\n                    if (field && field.oneof) { // Field is part of an OneOf (not a virtual OneOf field)\r\n                        var currentField = this[field.oneof.name]; // Virtual field references currently set field\r\n                        if (value !== null) {\r\n                            if (currentField !== null && currentField !== field.name)\r\n                                this[currentField] = null; // Clear currently set field\r\n                            this[field.oneof.name] = field.name; // Point virtual field at this field\r\n                        } else if (/* value === null && */currentField === keyOrObj)\r\n                            this[field.oneof.name] = null; // Clear virtual field (current field explicitly cleared)\r\n                    }\r\n                    return this;\r\n                };\r\n\r\n                /**\r\n                 * Sets a field's value. This is an alias for [@link ProtoBuf.Builder.Message#set}.\r\n                 * @name ProtoBuf.Builder.Message#$set\r\n                 * @function\r\n                 * @param {string|!Object.<string,*>} keyOrObj String key or plain object holding multiple values\r\n                 * @param {(*|boolean)=} value Value to set if key is a string, otherwise omitted\r\n                 * @param {boolean=} noAssert Whether to not assert the value, defaults to `false`\r\n                 * @throws {Error} If the value cannot be set\r\n                 * @expose\r\n                 */\r\n                MessagePrototype.$set = MessagePrototype.set;\r\n\r\n                /**\r\n                 * Gets a field's value.\r\n                 * @name ProtoBuf.Builder.Message#get\r\n                 * @function\r\n                 * @param {string} key Key\r\n                 * @param {boolean=} noAssert Whether to not assert for an actual field, defaults to `false`\r\n                 * @return {*} Value\r\n                 * @throws {Error} If there is no such field\r\n                 * @expose\r\n                 */\r\n                MessagePrototype.get = function(key, noAssert) {\r\n                    if (noAssert)\r\n                        return this[key];\r\n                    var field = T._fieldsByName[key];\r\n                    if (!field || !(field instanceof ProtoBuf.Reflect.Message.Field))\r\n                        throw Error(this+\"#\"+key+\" is not a field: undefined\");\r\n                    if (!(field instanceof ProtoBuf.Reflect.Message.Field))\r\n                        throw Error(this+\"#\"+key+\" is not a field: \"+field.toString(true));\r\n                    return this[field.name];\r\n                };\r\n\r\n                /**\r\n                 * Gets a field's value. This is an alias for {@link ProtoBuf.Builder.Message#$get}.\r\n                 * @name ProtoBuf.Builder.Message#$get\r\n                 * @function\r\n                 * @param {string} key Key\r\n                 * @return {*} Value\r\n                 * @throws {Error} If there is no such field\r\n                 * @expose\r\n                 */\r\n                MessagePrototype.$get = MessagePrototype.get;\r\n\r\n                // Getters and setters\r\n\r\n                for (var i=0; i<fields.length; i++) {\r\n                    var field = fields[i];\r\n                    // no setters for extension fields as these are named by their fqn\r\n                    if (field instanceof ProtoBuf.Reflect.Message.ExtensionField)\r\n                        continue;\r\n\r\n                    if (T.builder.options['populateAccessors'])\r\n                        (function(field) {\r\n                            // set/get[SomeValue]\r\n                            var Name = field.originalName.replace(/(_[a-zA-Z])/g, function(match) {\r\n                                return match.toUpperCase().replace('_','');\r\n                            });\r\n                            Name = Name.substring(0,1).toUpperCase() + Name.substring(1);\r\n\r\n                            // set/get_[some_value] FIXME: Do we really need these?\r\n                            var name = field.originalName.replace(/([A-Z])/g, function(match) {\r\n                                return \"_\"+match;\r\n                            });\r\n\r\n                            /**\r\n                             * The current field's unbound setter function.\r\n                             * @function\r\n                             * @param {*} value\r\n                             * @param {boolean=} noAssert\r\n                             * @returns {!ProtoBuf.Builder.Message}\r\n                             * @inner\r\n                             */\r\n                            var setter = function(value, noAssert) {\r\n                                this[field.name] = noAssert ? value : field.verifyValue(value);\r\n                                return this;\r\n                            };\r\n\r\n                            /**\r\n                             * The current field's unbound getter function.\r\n                             * @function\r\n                             * @returns {*}\r\n                             * @inner\r\n                             */\r\n                            var getter = function() {\r\n                                return this[field.name];\r\n                            };\r\n\r\n                            if (T.getChild(\"set\"+Name) === null)\r\n                                /**\r\n                                 * Sets a value. This method is present for each field, but only if there is no name conflict with\r\n                                 *  another field.\r\n                                 * @name ProtoBuf.Builder.Message#set[SomeField]\r\n                                 * @function\r\n                                 * @param {*} value Value to set\r\n                                 * @param {boolean=} noAssert Whether to not assert the value, defaults to `false`\r\n                                 * @returns {!ProtoBuf.Builder.Message} this\r\n                                 * @abstract\r\n                                 * @throws {Error} If the value cannot be set\r\n                                 */\r\n                                MessagePrototype[\"set\"+Name] = setter;\r\n\r\n                            if (T.getChild(\"set_\"+name) === null)\r\n                                /**\r\n                                 * Sets a value. This method is present for each field, but only if there is no name conflict with\r\n                                 *  another field.\r\n                                 * @name ProtoBuf.Builder.Message#set_[some_field]\r\n                                 * @function\r\n                                 * @param {*} value Value to set\r\n                                 * @param {boolean=} noAssert Whether to not assert the value, defaults to `false`\r\n                                 * @returns {!ProtoBuf.Builder.Message} this\r\n                                 * @abstract\r\n                                 * @throws {Error} If the value cannot be set\r\n                                 */\r\n                                MessagePrototype[\"set_\"+name] = setter;\r\n\r\n                            if (T.getChild(\"get\"+Name) === null)\r\n                                /**\r\n                                 * Gets a value. This method is present for each field, but only if there is no name conflict with\r\n                                 *  another field.\r\n                                 * @name ProtoBuf.Builder.Message#get[SomeField]\r\n                                 * @function\r\n                                 * @abstract\r\n                                 * @return {*} The value\r\n                                 */\r\n                                MessagePrototype[\"get\"+Name] = getter;\r\n\r\n                            if (T.getChild(\"get_\"+name) === null)\r\n                                /**\r\n                                 * Gets a value. This method is present for each field, but only if there is no name conflict with\r\n                                 *  another field.\r\n                                 * @name ProtoBuf.Builder.Message#get_[some_field]\r\n                                 * @function\r\n                                 * @return {*} The value\r\n                                 * @abstract\r\n                                 */\r\n                                MessagePrototype[\"get_\"+name] = getter;\r\n\r\n                        })(field);\r\n                }\r\n\r\n                // En-/decoding\r\n\r\n                /**\r\n                 * Encodes the message.\r\n                 * @name ProtoBuf.Builder.Message#$encode\r\n                 * @function\r\n                 * @param {(!ByteBuffer|boolean)=} buffer ByteBuffer to encode to. Will create a new one and flip it if omitted.\r\n                 * @param {boolean=} noVerify Whether to not verify field values, defaults to `false`\r\n                 * @return {!ByteBuffer} Encoded message as a ByteBuffer\r\n                 * @throws {Error} If the message cannot be encoded or if required fields are missing. The later still\r\n                 *  returns the encoded ByteBuffer in the `encoded` property on the error.\r\n                 * @expose\r\n                 * @see ProtoBuf.Builder.Message#encode64\r\n                 * @see ProtoBuf.Builder.Message#encodeHex\r\n                 * @see ProtoBuf.Builder.Message#encodeAB\r\n                 */\r\n                MessagePrototype.encode = function(buffer, noVerify) {\r\n                    if (typeof buffer === 'boolean')\r\n                        noVerify = buffer,\r\n                        buffer = undefined;\r\n                    var isNew = false;\r\n                    if (!buffer)\r\n                        buffer = new ByteBuffer(),\r\n                        isNew = true;\r\n                    var le = buffer.littleEndian;\r\n                    try {\r\n                        T.encode(this, buffer.LE(), noVerify);\r\n                        return (isNew ? buffer.flip() : buffer).LE(le);\r\n                    } catch (e) {\r\n                        buffer.LE(le);\r\n                        throw(e);\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Encodes a message using the specified data payload.\r\n                 * @param {!Object.<string,*>} data Data payload\r\n                 * @param {(!ByteBuffer|boolean)=} buffer ByteBuffer to encode to. Will create a new one and flip it if omitted.\r\n                 * @param {boolean=} noVerify Whether to not verify field values, defaults to `false`\r\n                 * @return {!ByteBuffer} Encoded message as a ByteBuffer\r\n                 * @expose\r\n                 */\r\n                Message.encode = function(data, buffer, noVerify) {\r\n                    return new Message(data).encode(buffer, noVerify);\r\n                };\r\n\r\n                /**\r\n                 * Calculates the byte length of the message.\r\n                 * @name ProtoBuf.Builder.Message#calculate\r\n                 * @function\r\n                 * @returns {number} Byte length\r\n                 * @throws {Error} If the message cannot be calculated or if required fields are missing.\r\n                 * @expose\r\n                 */\r\n                MessagePrototype.calculate = function() {\r\n                    return T.calculate(this);\r\n                };\r\n\r\n                /**\r\n                 * Encodes the varint32 length-delimited message.\r\n                 * @name ProtoBuf.Builder.Message#encodeDelimited\r\n                 * @function\r\n                 * @param {(!ByteBuffer|boolean)=} buffer ByteBuffer to encode to. Will create a new one and flip it if omitted.\r\n                 * @return {!ByteBuffer} Encoded message as a ByteBuffer\r\n                 * @throws {Error} If the message cannot be encoded or if required fields are missing. The later still\r\n                 *  returns the encoded ByteBuffer in the `encoded` property on the error.\r\n                 * @expose\r\n                 */\r\n                MessagePrototype.encodeDelimited = function(buffer) {\r\n                    var isNew = false;\r\n                    if (!buffer)\r\n                        buffer = new ByteBuffer(),\r\n                        isNew = true;\r\n                    var enc = new ByteBuffer().LE();\r\n                    T.encode(this, enc).flip();\r\n                    buffer.writeVarint32(enc.remaining());\r\n                    buffer.append(enc);\r\n                    return isNew ? buffer.flip() : buffer;\r\n                };\r\n\r\n                /**\r\n                 * Directly encodes the message to an ArrayBuffer.\r\n                 * @name ProtoBuf.Builder.Message#encodeAB\r\n                 * @function\r\n                 * @return {ArrayBuffer} Encoded message as ArrayBuffer\r\n                 * @throws {Error} If the message cannot be encoded or if required fields are missing. The later still\r\n                 *  returns the encoded ArrayBuffer in the `encoded` property on the error.\r\n                 * @expose\r\n                 */\r\n                MessagePrototype.encodeAB = function() {\r\n                    try {\r\n                        return this.encode().toArrayBuffer();\r\n                    } catch (e) {\r\n                        if (e[\"encoded\"]) e[\"encoded\"] = e[\"encoded\"].toArrayBuffer();\r\n                        throw(e);\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Returns the message as an ArrayBuffer. This is an alias for {@link ProtoBuf.Builder.Message#encodeAB}.\r\n                 * @name ProtoBuf.Builder.Message#toArrayBuffer\r\n                 * @function\r\n                 * @return {ArrayBuffer} Encoded message as ArrayBuffer\r\n                 * @throws {Error} If the message cannot be encoded or if required fields are missing. The later still\r\n                 *  returns the encoded ArrayBuffer in the `encoded` property on the error.\r\n                 * @expose\r\n                 */\r\n                MessagePrototype.toArrayBuffer = MessagePrototype.encodeAB;\r\n\r\n                /**\r\n                 * Directly encodes the message to a node Buffer.\r\n                 * @name ProtoBuf.Builder.Message#encodeNB\r\n                 * @function\r\n                 * @return {!Buffer}\r\n                 * @throws {Error} If the message cannot be encoded, not running under node.js or if required fields are\r\n                 *  missing. The later still returns the encoded node Buffer in the `encoded` property on the error.\r\n                 * @expose\r\n                 */\r\n                MessagePrototype.encodeNB = function() {\r\n                    try {\r\n                        return this.encode().toBuffer();\r\n                    } catch (e) {\r\n                        if (e[\"encoded\"]) e[\"encoded\"] = e[\"encoded\"].toBuffer();\r\n                        throw(e);\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Returns the message as a node Buffer. This is an alias for {@link ProtoBuf.Builder.Message#encodeNB}.\r\n                 * @name ProtoBuf.Builder.Message#toBuffer\r\n                 * @function\r\n                 * @return {!Buffer}\r\n                 * @throws {Error} If the message cannot be encoded or if required fields are missing. The later still\r\n                 *  returns the encoded node Buffer in the `encoded` property on the error.\r\n                 * @expose\r\n                 */\r\n                MessagePrototype.toBuffer = MessagePrototype.encodeNB;\r\n\r\n                /**\r\n                 * Directly encodes the message to a base64 encoded string.\r\n                 * @name ProtoBuf.Builder.Message#encode64\r\n                 * @function\r\n                 * @return {string} Base64 encoded string\r\n                 * @throws {Error} If the underlying buffer cannot be encoded or if required fields are missing. The later\r\n                 *  still returns the encoded base64 string in the `encoded` property on the error.\r\n                 * @expose\r\n                 */\r\n                MessagePrototype.encode64 = function() {\r\n                    try {\r\n                        return this.encode().toBase64();\r\n                    } catch (e) {\r\n                        if (e[\"encoded\"]) e[\"encoded\"] = e[\"encoded\"].toBase64();\r\n                        throw(e);\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Returns the message as a base64 encoded string. This is an alias for {@link ProtoBuf.Builder.Message#encode64}.\r\n                 * @name ProtoBuf.Builder.Message#toBase64\r\n                 * @function\r\n                 * @return {string} Base64 encoded string\r\n                 * @throws {Error} If the message cannot be encoded or if required fields are missing. The later still\r\n                 *  returns the encoded base64 string in the `encoded` property on the error.\r\n                 * @expose\r\n                 */\r\n                MessagePrototype.toBase64 = MessagePrototype.encode64;\r\n\r\n                /**\r\n                 * Directly encodes the message to a hex encoded string.\r\n                 * @name ProtoBuf.Builder.Message#encodeHex\r\n                 * @function\r\n                 * @return {string} Hex encoded string\r\n                 * @throws {Error} If the underlying buffer cannot be encoded or if required fields are missing. The later\r\n                 *  still returns the encoded hex string in the `encoded` property on the error.\r\n                 * @expose\r\n                 */\r\n                MessagePrototype.encodeHex = function() {\r\n                    try {\r\n                        return this.encode().toHex();\r\n                    } catch (e) {\r\n                        if (e[\"encoded\"]) e[\"encoded\"] = e[\"encoded\"].toHex();\r\n                        throw(e);\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Returns the message as a hex encoded string. This is an alias for {@link ProtoBuf.Builder.Message#encodeHex}.\r\n                 * @name ProtoBuf.Builder.Message#toHex\r\n                 * @function\r\n                 * @return {string} Hex encoded string\r\n                 * @throws {Error} If the message cannot be encoded or if required fields are missing. The later still\r\n                 *  returns the encoded hex string in the `encoded` property on the error.\r\n                 * @expose\r\n                 */\r\n                MessagePrototype.toHex = MessagePrototype.encodeHex;\r\n\r\n                /**\r\n                 * Clones a message object or field value to a raw object.\r\n                 * @param {*} obj Object to clone\r\n                 * @param {boolean} binaryAsBase64 Whether to include binary data as base64 strings or as a buffer otherwise\r\n                 * @param {boolean} longsAsStrings Whether to encode longs as strings\r\n                 * @param {!ProtoBuf.Reflect.T=} resolvedType The resolved field type if a field\r\n                 * @returns {*} Cloned object\r\n                 * @inner\r\n                 */\r\n                function cloneRaw(obj, binaryAsBase64, longsAsStrings, resolvedType) {\r\n                    if (obj === null || typeof obj !== 'object') {\r\n                        // Convert enum values to their respective names\r\n                        if (resolvedType && resolvedType instanceof ProtoBuf.Reflect.Enum) {\r\n                            var name = ProtoBuf.Reflect.Enum.getName(resolvedType.object, obj);\r\n                            if (name !== null)\r\n                                return name;\r\n                        }\r\n                        // Pass-through string, number, boolean, null...\r\n                        return obj;\r\n                    }\r\n                    // Convert ByteBuffers to raw buffer or strings\r\n                    if (ByteBuffer.isByteBuffer(obj))\r\n                        return binaryAsBase64 ? obj.toBase64() : obj.toBuffer();\r\n                    // Convert Longs to proper objects or strings\r\n                    if (ProtoBuf.Long.isLong(obj))\r\n                        return longsAsStrings ? obj.toString() : ProtoBuf.Long.fromValue(obj);\r\n                    var clone;\r\n                    // Clone arrays\r\n                    if (Array.isArray(obj)) {\r\n                        clone = [];\r\n                        obj.forEach(function(v, k) {\r\n                            clone[k] = cloneRaw(v, binaryAsBase64, longsAsStrings, resolvedType);\r\n                        });\r\n                        return clone;\r\n                    }\r\n                    clone = {};\r\n                    // Convert maps to objects\r\n                    if (obj instanceof ProtoBuf.Map) {\r\n                        var it = obj.entries();\r\n                        for (var e = it.next(); !e.done; e = it.next())\r\n                            clone[obj.keyElem.valueToString(e.value[0])] = cloneRaw(e.value[1], binaryAsBase64, longsAsStrings, obj.valueElem.resolvedType);\r\n                        return clone;\r\n                    }\r\n                    // Everything else is a non-null object\r\n                    var type = obj.$type,\r\n                        field = undefined;\r\n                    for (var i in obj)\r\n                        if (obj.hasOwnProperty(i)) {\r\n                            if (type && (field = type.getChild(i)))\r\n                                clone[i] = cloneRaw(obj[i], binaryAsBase64, longsAsStrings, field.resolvedType);\r\n                            else\r\n                                clone[i] = cloneRaw(obj[i], binaryAsBase64, longsAsStrings);\r\n                        }\r\n                    return clone;\r\n                }\r\n\r\n                /**\r\n                 * Returns the message's raw payload.\r\n                 * @param {boolean=} binaryAsBase64 Whether to include binary data as base64 strings instead of Buffers, defaults to `false`\r\n                 * @param {boolean} longsAsStrings Whether to encode longs as strings\r\n                 * @returns {Object.<string,*>} Raw payload\r\n                 * @expose\r\n                 */\r\n                MessagePrototype.toRaw = function(binaryAsBase64, longsAsStrings) {\r\n                    return cloneRaw(this, !!binaryAsBase64, !!longsAsStrings, this.$type);\r\n                };\r\n\r\n                /**\r\n                 * Encodes a message to JSON.\r\n                 * @returns {string} JSON string\r\n                 * @expose\r\n                 */\r\n                MessagePrototype.encodeJSON = function() {\r\n                    return JSON.stringify(\r\n                        cloneRaw(this,\r\n                             /* binary-as-base64 */ true,\r\n                             /* longs-as-strings */ true,\r\n                             this.$type\r\n                        )\r\n                    );\r\n                };\r\n\r\n                /**\r\n                 * Decodes a message from the specified buffer or string.\r\n                 * @name ProtoBuf.Builder.Message.decode\r\n                 * @function\r\n                 * @param {!ByteBuffer|!ArrayBuffer|!Buffer|string} buffer Buffer to decode from\r\n                 * @param {string=} enc Encoding if buffer is a string: hex, utf8 (not recommended), defaults to base64\r\n                 * @return {!ProtoBuf.Builder.Message} Decoded message\r\n                 * @throws {Error} If the message cannot be decoded or if required fields are missing. The later still\r\n                 *  returns the decoded message with missing fields in the `decoded` property on the error.\r\n                 * @expose\r\n                 * @see ProtoBuf.Builder.Message.decode64\r\n                 * @see ProtoBuf.Builder.Message.decodeHex\r\n                 */\r\n                Message.decode = function(buffer, enc) {\r\n                    if (typeof buffer === 'string')\r\n                        buffer = ByteBuffer.wrap(buffer, enc ? enc : \"base64\");\r\n                    buffer = ByteBuffer.isByteBuffer(buffer) ? buffer : ByteBuffer.wrap(buffer); // May throw\r\n                    var le = buffer.littleEndian;\r\n                    try {\r\n                        var msg = T.decode(buffer.LE());\r\n                        buffer.LE(le);\r\n                        return msg;\r\n                    } catch (e) {\r\n                        buffer.LE(le);\r\n                        throw(e);\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Decodes a varint32 length-delimited message from the specified buffer or string.\r\n                 * @name ProtoBuf.Builder.Message.decodeDelimited\r\n                 * @function\r\n                 * @param {!ByteBuffer|!ArrayBuffer|!Buffer|string} buffer Buffer to decode from\r\n                 * @param {string=} enc Encoding if buffer is a string: hex, utf8 (not recommended), defaults to base64\r\n                 * @return {ProtoBuf.Builder.Message} Decoded message or `null` if not enough bytes are available yet\r\n                 * @throws {Error} If the message cannot be decoded or if required fields are missing. The later still\r\n                 *  returns the decoded message with missing fields in the `decoded` property on the error.\r\n                 * @expose\r\n                 */\r\n                Message.decodeDelimited = function(buffer, enc) {\r\n                    if (typeof buffer === 'string')\r\n                        buffer = ByteBuffer.wrap(buffer, enc ? enc : \"base64\");\r\n                    buffer = ByteBuffer.isByteBuffer(buffer) ? buffer : ByteBuffer.wrap(buffer); // May throw\r\n                    if (buffer.remaining() < 1)\r\n                        return null;\r\n                    var off = buffer.offset,\r\n                        len = buffer.readVarint32();\r\n                    if (buffer.remaining() < len) {\r\n                        buffer.offset = off;\r\n                        return null;\r\n                    }\r\n                    try {\r\n                        var msg = T.decode(buffer.slice(buffer.offset, buffer.offset + len).LE());\r\n                        buffer.offset += len;\r\n                        return msg;\r\n                    } catch (err) {\r\n                        buffer.offset += len;\r\n                        throw err;\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Decodes the message from the specified base64 encoded string.\r\n                 * @name ProtoBuf.Builder.Message.decode64\r\n                 * @function\r\n                 * @param {string} str String to decode from\r\n                 * @return {!ProtoBuf.Builder.Message} Decoded message\r\n                 * @throws {Error} If the message cannot be decoded or if required fields are missing. The later still\r\n                 *  returns the decoded message with missing fields in the `decoded` property on the error.\r\n                 * @expose\r\n                 */\r\n                Message.decode64 = function(str) {\r\n                    return Message.decode(str, \"base64\");\r\n                };\r\n\r\n                /**\r\n                 * Decodes the message from the specified hex encoded string.\r\n                 * @name ProtoBuf.Builder.Message.decodeHex\r\n                 * @function\r\n                 * @param {string} str String to decode from\r\n                 * @return {!ProtoBuf.Builder.Message} Decoded message\r\n                 * @throws {Error} If the message cannot be decoded or if required fields are missing. The later still\r\n                 *  returns the decoded message with missing fields in the `decoded` property on the error.\r\n                 * @expose\r\n                 */\r\n                Message.decodeHex = function(str) {\r\n                    return Message.decode(str, \"hex\");\r\n                };\r\n\r\n                /**\r\n                 * Decodes the message from a JSON string.\r\n                 * @name ProtoBuf.Builder.Message.decodeJSON\r\n                 * @function\r\n                 * @param {string} str String to decode from\r\n                 * @return {!ProtoBuf.Builder.Message} Decoded message\r\n                 * @throws {Error} If the message cannot be decoded or if required fields are\r\n                 * missing.\r\n                 * @expose\r\n                 */\r\n                Message.decodeJSON = function(str) {\r\n                    return new Message(JSON.parse(str));\r\n                };\r\n\r\n                // Utility\r\n\r\n                /**\r\n                 * Returns a string representation of this Message.\r\n                 * @name ProtoBuf.Builder.Message#toString\r\n                 * @function\r\n                 * @return {string} String representation as of \".Fully.Qualified.MessageName\"\r\n                 * @expose\r\n                 */\r\n                MessagePrototype.toString = function() {\r\n                    return T.toString();\r\n                };\r\n\r\n                // Properties\r\n\r\n                /**\r\n                 * Message options.\r\n                 * @name ProtoBuf.Builder.Message.$options\r\n                 * @type {Object.<string,*>}\r\n                 * @expose\r\n                 */\r\n                var $optionsS; // cc needs this\r\n\r\n                /**\r\n                 * Message options.\r\n                 * @name ProtoBuf.Builder.Message#$options\r\n                 * @type {Object.<string,*>}\r\n                 * @expose\r\n                 */\r\n                var $options;\r\n\r\n                /**\r\n                 * Reflection type.\r\n                 * @name ProtoBuf.Builder.Message.$type\r\n                 * @type {!ProtoBuf.Reflect.Message}\r\n                 * @expose\r\n                 */\r\n                var $typeS;\r\n\r\n                /**\r\n                 * Reflection type.\r\n                 * @name ProtoBuf.Builder.Message#$type\r\n                 * @type {!ProtoBuf.Reflect.Message}\r\n                 * @expose\r\n                 */\r\n                var $type;\r\n\r\n                if (Object.defineProperty)\r\n                    Object.defineProperty(Message, '$options', { \"value\": T.buildOpt() }),\r\n                    Object.defineProperty(MessagePrototype, \"$options\", { \"value\": Message[\"$options\"] }),\r\n                    Object.defineProperty(Message, \"$type\", { \"value\": T }),\r\n                    Object.defineProperty(MessagePrototype, \"$type\", { \"value\": T });\r\n\r\n                return Message;\r\n\r\n            })(ProtoBuf, this);\r\n\r\n            // Static enums and prototyped sub-messages / cached collections\r\n            this._fields = [];\r\n            this._fieldsById = {};\r\n            this._fieldsByName = {};\r\n            for (var i=0, k=this.children.length, child; i<k; i++) {\r\n                child = this.children[i];\r\n                if (child instanceof Enum || child instanceof Message || child instanceof Service) {\r\n                    if (clazz.hasOwnProperty(child.name))\r\n                        throw Error(\"Illegal reflect child of \"+this.toString(true)+\": \"+child.toString(true)+\" cannot override static property '\"+child.name+\"'\");\r\n                    clazz[child.name] = child.build();\r\n                } else if (child instanceof Message.Field)\r\n                    child.build(),\r\n                    this._fields.push(child),\r\n                    this._fieldsById[child.id] = child,\r\n                    this._fieldsByName[child.name] = child;\r\n                else if (!(child instanceof Message.OneOf) && !(child instanceof Extension)) // Not built\r\n                    throw Error(\"Illegal reflect child of \"+this.toString(true)+\": \"+this.children[i].toString(true));\r\n            }\r\n\r\n            return this.clazz = clazz;\r\n        };\r\n\r\n        /**\r\n         * Encodes a runtime message's contents to the specified buffer.\r\n         * @param {!ProtoBuf.Builder.Message} message Runtime message to encode\r\n         * @param {ByteBuffer} buffer ByteBuffer to write to\r\n         * @param {boolean=} noVerify Whether to not verify field values, defaults to `false`\r\n         * @return {ByteBuffer} The ByteBuffer for chaining\r\n         * @throws {Error} If required fields are missing or the message cannot be encoded for another reason\r\n         * @expose\r\n         */\r\n        MessagePrototype.encode = function(message, buffer, noVerify) {\r\n            var fieldMissing = null,\r\n                field;\r\n            for (var i=0, k=this._fields.length, val; i<k; ++i) {\r\n                field = this._fields[i];\r\n                val = message[field.name];\r\n                if (field.required && val === null) {\r\n                    if (fieldMissing === null)\r\n                        fieldMissing = field;\r\n                } else\r\n                    field.encode(noVerify ? val : field.verifyValue(val), buffer, message);\r\n            }\r\n            if (fieldMissing !== null) {\r\n                var err = Error(\"Missing at least one required field for \"+this.toString(true)+\": \"+fieldMissing);\r\n                err[\"encoded\"] = buffer; // Still expose what we got\r\n                throw(err);\r\n            }\r\n            return buffer;\r\n        };\r\n\r\n        /**\r\n         * Calculates a runtime message's byte length.\r\n         * @param {!ProtoBuf.Builder.Message} message Runtime message to encode\r\n         * @returns {number} Byte length\r\n         * @throws {Error} If required fields are missing or the message cannot be calculated for another reason\r\n         * @expose\r\n         */\r\n        MessagePrototype.calculate = function(message) {\r\n            for (var n=0, i=0, k=this._fields.length, field, val; i<k; ++i) {\r\n                field = this._fields[i];\r\n                val = message[field.name];\r\n                if (field.required && val === null)\r\n                   throw Error(\"Missing at least one required field for \"+this.toString(true)+\": \"+field);\r\n                else\r\n                    n += field.calculate(val, message);\r\n            }\r\n            return n;\r\n        };\r\n\r\n        /**\r\n         * Skips all data until the end of the specified group has been reached.\r\n         * @param {number} expectedId Expected GROUPEND id\r\n         * @param {!ByteBuffer} buf ByteBuffer\r\n         * @returns {boolean} `true` if a value as been skipped, `false` if the end has been reached\r\n         * @throws {Error} If it wasn't possible to find the end of the group (buffer overrun or end tag mismatch)\r\n         * @inner\r\n         */\r\n        function skipTillGroupEnd(expectedId, buf) {\r\n            var tag = buf.readVarint32(), // Throws on OOB\r\n                wireType = tag & 0x07,\r\n                id = tag >>> 3;\r\n            switch (wireType) {\r\n                case ProtoBuf.WIRE_TYPES.VARINT:\r\n                    do tag = buf.readUint8();\r\n                    while ((tag & 0x80) === 0x80);\r\n                    break;\r\n                case ProtoBuf.WIRE_TYPES.BITS64:\r\n                    buf.offset += 8;\r\n                    break;\r\n                case ProtoBuf.WIRE_TYPES.LDELIM:\r\n                    tag = buf.readVarint32(); // reads the varint\r\n                    buf.offset += tag;        // skips n bytes\r\n                    break;\r\n                case ProtoBuf.WIRE_TYPES.STARTGROUP:\r\n                    skipTillGroupEnd(id, buf);\r\n                    break;\r\n                case ProtoBuf.WIRE_TYPES.ENDGROUP:\r\n                    if (id === expectedId)\r\n                        return false;\r\n                    else\r\n                        throw Error(\"Illegal GROUPEND after unknown group: \"+id+\" (\"+expectedId+\" expected)\");\r\n                case ProtoBuf.WIRE_TYPES.BITS32:\r\n                    buf.offset += 4;\r\n                    break;\r\n                default:\r\n                    throw Error(\"Illegal wire type in unknown group \"+expectedId+\": \"+wireType);\r\n            }\r\n            return true;\r\n        }\r\n\r\n        /**\r\n         * Decodes an encoded message and returns the decoded message.\r\n         * @param {ByteBuffer} buffer ByteBuffer to decode from\r\n         * @param {number=} length Message length. Defaults to decode all the available data.\r\n         * @param {number=} expectedGroupEndId Expected GROUPEND id if this is a legacy group\r\n         * @return {ProtoBuf.Builder.Message} Decoded message\r\n         * @throws {Error} If the message cannot be decoded\r\n         * @expose\r\n         */\r\n        MessagePrototype.decode = function(buffer, length, expectedGroupEndId) {\r\n            length = typeof length === 'number' ? length : -1;\r\n            var start = buffer.offset,\r\n                msg = new (this.clazz)(),\r\n                tag, wireType, id, field;\r\n            while (buffer.offset < start+length || (length === -1 && buffer.remaining() > 0)) {\r\n                tag = buffer.readVarint32();\r\n                wireType = tag & 0x07;\r\n                id = tag >>> 3;\r\n                if (wireType === ProtoBuf.WIRE_TYPES.ENDGROUP) {\r\n                    if (id !== expectedGroupEndId)\r\n                        throw Error(\"Illegal group end indicator for \"+this.toString(true)+\": \"+id+\" (\"+(expectedGroupEndId ? expectedGroupEndId+\" expected\" : \"not a group\")+\")\");\r\n                    break;\r\n                }\r\n                if (!(field = this._fieldsById[id])) {\r\n                    // \"messages created by your new code can be parsed by your old code: old binaries simply ignore the new field when parsing.\"\r\n                    switch (wireType) {\r\n                        case ProtoBuf.WIRE_TYPES.VARINT:\r\n                            buffer.readVarint32();\r\n                            break;\r\n                        case ProtoBuf.WIRE_TYPES.BITS32:\r\n                            buffer.offset += 4;\r\n                            break;\r\n                        case ProtoBuf.WIRE_TYPES.BITS64:\r\n                            buffer.offset += 8;\r\n                            break;\r\n                        case ProtoBuf.WIRE_TYPES.LDELIM:\r\n                            var len = buffer.readVarint32();\r\n                            buffer.offset += len;\r\n                            break;\r\n                        case ProtoBuf.WIRE_TYPES.STARTGROUP:\r\n                            while (skipTillGroupEnd(id, buffer)) {}\r\n                            break;\r\n                        default:\r\n                            throw Error(\"Illegal wire type for unknown field \"+id+\" in \"+this.toString(true)+\"#decode: \"+wireType);\r\n                    }\r\n                    continue;\r\n                }\r\n                if (field.repeated && !field.options[\"packed\"]) {\r\n                    msg[field.name].push(field.decode(wireType, buffer));\r\n                } else if (field.map) {\r\n                    var keyval = field.decode(wireType, buffer);\r\n                    msg[field.name].set(keyval[0], keyval[1]);\r\n                } else {\r\n                    msg[field.name] = field.decode(wireType, buffer);\r\n                    if (field.oneof) { // Field is part of an OneOf (not a virtual OneOf field)\r\n                        var currentField = msg[field.oneof.name]; // Virtual field references currently set field\r\n                        if (currentField !== null && currentField !== field.name)\r\n                            msg[currentField] = null; // Clear currently set field\r\n                        msg[field.oneof.name] = field.name; // Point virtual field at this field\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Check if all required fields are present and set default values for optional fields that are not\r\n            for (var i=0, k=this._fields.length; i<k; ++i) {\r\n                field = this._fields[i];\r\n                if (msg[field.name] === null) {\r\n                    if (this.syntax === \"proto3\") { // Proto3 sets default values by specification\r\n                        msg[field.name] = field.defaultValue;\r\n                    } else if (field.required) {\r\n                        var err = Error(\"Missing at least one required field for \" + this.toString(true) + \": \" + field.name);\r\n                        err[\"decoded\"] = msg; // Still expose what we got\r\n                        throw(err);\r\n                    } else if (ProtoBuf.populateDefaults && field.defaultValue !== null)\r\n                        msg[field.name] = field.defaultValue;\r\n                }\r\n            }\r\n            return msg;\r\n        };\r\n\r\n        /**\r\n         * @alias ProtoBuf.Reflect.Message\r\n         * @expose\r\n         */\r\n        Reflect.Message = Message;\r\n\r\n        /**\r\n         * Constructs a new Message Field.\r\n         * @exports ProtoBuf.Reflect.Message.Field\r\n         * @param {!ProtoBuf.Builder} builder Builder reference\r\n         * @param {!ProtoBuf.Reflect.Message} message Message reference\r\n         * @param {string} rule Rule, one of requried, optional, repeated\r\n         * @param {string?} keytype Key data type, if any.\r\n         * @param {string} type Data type, e.g. int32\r\n         * @param {string} name Field name\r\n         * @param {number} id Unique field id\r\n         * @param {Object.<string,*>=} options Options\r\n         * @param {!ProtoBuf.Reflect.Message.OneOf=} oneof Enclosing OneOf\r\n         * @param {string?} syntax The syntax level of this definition (e.g., proto3)\r\n         * @constructor\r\n         * @extends ProtoBuf.Reflect.T\r\n         */\r\n        var Field = function(builder, message, rule, keytype, type, name, id, options, oneof, syntax) {\r\n            T.call(this, builder, message, name);\r\n\r\n            /**\r\n             * @override\r\n             */\r\n            this.className = \"Message.Field\";\r\n\r\n            /**\r\n             * Message field required flag.\r\n             * @type {boolean}\r\n             * @expose\r\n             */\r\n            this.required = rule === \"required\";\r\n\r\n            /**\r\n             * Message field repeated flag.\r\n             * @type {boolean}\r\n             * @expose\r\n             */\r\n            this.repeated = rule === \"repeated\";\r\n\r\n            /**\r\n             * Message field map flag.\r\n             * @type {boolean}\r\n             * @expose\r\n             */\r\n            this.map = rule === \"map\";\r\n\r\n            /**\r\n             * Message field key type. Type reference string if unresolved, protobuf\r\n             * type if resolved. Valid only if this.map === true, null otherwise.\r\n             * @type {string|{name: string, wireType: number}|null}\r\n             * @expose\r\n             */\r\n            this.keyType = keytype || null;\r\n\r\n            /**\r\n             * Message field type. Type reference string if unresolved, protobuf type if\r\n             * resolved. In a map field, this is the value type.\r\n             * @type {string|{name: string, wireType: number}}\r\n             * @expose\r\n             */\r\n            this.type = type;\r\n\r\n            /**\r\n             * Resolved type reference inside the global namespace.\r\n             * @type {ProtoBuf.Reflect.T|null}\r\n             * @expose\r\n             */\r\n            this.resolvedType = null;\r\n\r\n            /**\r\n             * Unique message field id.\r\n             * @type {number}\r\n             * @expose\r\n             */\r\n            this.id = id;\r\n\r\n            /**\r\n             * Message field options.\r\n             * @type {!Object.<string,*>}\r\n             * @dict\r\n             * @expose\r\n             */\r\n            this.options = options || {};\r\n\r\n            /**\r\n             * Default value.\r\n             * @type {*}\r\n             * @expose\r\n             */\r\n            this.defaultValue = null;\r\n\r\n            /**\r\n             * Enclosing OneOf.\r\n             * @type {?ProtoBuf.Reflect.Message.OneOf}\r\n             * @expose\r\n             */\r\n            this.oneof = oneof || null;\r\n\r\n            /**\r\n             * Syntax level of this definition (e.g., proto3).\r\n             * @type {string}\r\n             * @expose\r\n             */\r\n            this.syntax = syntax || 'proto2';\r\n\r\n            /**\r\n             * Original field name.\r\n             * @type {string}\r\n             * @expose\r\n             */\r\n            this.originalName = this.name; // Used to revert camelcase transformation on naming collisions\r\n\r\n            /**\r\n             * Element implementation. Created in build() after types are resolved.\r\n             * @type {ProtoBuf.Element}\r\n             * @expose\r\n             */\r\n            this.element = null;\r\n\r\n            /**\r\n             * Key element implementation, for map fields. Created in build() after\r\n             * types are resolved.\r\n             * @type {ProtoBuf.Element}\r\n             * @expose\r\n             */\r\n            this.keyElement = null;\r\n\r\n            // Convert field names to camel case notation if the override is set\r\n            if (this.builder.options['convertFieldsToCamelCase'] && !(this instanceof Message.ExtensionField))\r\n                this.name = ProtoBuf.Util.toCamelCase(this.name);\r\n        };\r\n\r\n        /**\r\n         * @alias ProtoBuf.Reflect.Message.Field.prototype\r\n         * @inner\r\n         */\r\n        var FieldPrototype = Field.prototype = Object.create(T.prototype);\r\n\r\n        /**\r\n         * Builds the field.\r\n         * @override\r\n         * @expose\r\n         */\r\n        FieldPrototype.build = function() {\r\n            this.element = new Element(this.type, this.resolvedType, false, this.syntax);\r\n            if (this.map)\r\n                this.keyElement = new Element(this.keyType, undefined, true, this.syntax);\r\n\r\n            // In proto3, fields do not have field presence, and every field is set to\r\n            // its type's default value (\"\", 0, 0.0, or false).\r\n            if (this.syntax === 'proto3' && !this.repeated && !this.map)\r\n                this.defaultValue = Element.defaultFieldValue(this.type);\r\n\r\n            // Otherwise, default values are present when explicitly specified\r\n            else if (typeof this.options['default'] !== 'undefined')\r\n                this.defaultValue = this.verifyValue(this.options['default']);\r\n        };\r\n\r\n        /**\r\n         * Checks if the given value can be set for this field.\r\n         * @param {*} value Value to check\r\n         * @param {boolean=} skipRepeated Whether to skip the repeated value check or not. Defaults to false.\r\n         * @return {*} Verified, maybe adjusted, value\r\n         * @throws {Error} If the value cannot be set for this field\r\n         * @expose\r\n         */\r\n        FieldPrototype.verifyValue = function(value, skipRepeated) {\r\n            skipRepeated = skipRepeated || false;\r\n            var fail = function(val, msg) {\r\n                throw Error(\"Illegal value for \"+this.toString(true)+\" of type \"+this.type.name+\": \"+val+\" (\"+msg+\")\");\r\n            }.bind(this);\r\n            if (value === null) { // NULL values for optional fields\r\n                if (this.required)\r\n                    fail(typeof value, \"required\");\r\n                if (this.syntax === 'proto3' && this.type !== ProtoBuf.TYPES[\"message\"])\r\n                    fail(typeof value, \"proto3 field without field presence cannot be null\");\r\n                return null;\r\n            }\r\n            var i;\r\n            if (this.repeated && !skipRepeated) { // Repeated values as arrays\r\n                if (!Array.isArray(value))\r\n                    value = [value];\r\n                var res = [];\r\n                for (i=0; i<value.length; i++)\r\n                    res.push(this.element.verifyValue(value[i]));\r\n                return res;\r\n            }\r\n            if (this.map && !skipRepeated) { // Map values as objects\r\n                if (!(value instanceof ProtoBuf.Map)) {\r\n                    // If not already a Map, attempt to convert.\r\n                    if (!(value instanceof Object)) {\r\n                        fail(typeof value,\r\n                             \"expected ProtoBuf.Map or raw object for map field\");\r\n                    }\r\n                    return new ProtoBuf.Map(this, value);\r\n                } else {\r\n                    return value;\r\n                }\r\n            }\r\n            // All non-repeated fields expect no array\r\n            if (!this.repeated && Array.isArray(value))\r\n                fail(typeof value, \"no array expected\");\r\n\r\n            return this.element.verifyValue(value);\r\n        };\r\n\r\n        /**\r\n         * Determines whether the field will have a presence on the wire given its\r\n         * value.\r\n         * @param {*} value Verified field value\r\n         * @param {!ProtoBuf.Builder.Message} message Runtime message\r\n         * @return {boolean} Whether the field will be present on the wire\r\n         */\r\n        FieldPrototype.hasWirePresence = function(value, message) {\r\n            if (this.syntax !== 'proto3')\r\n                return (value !== null);\r\n            if (this.oneof && message[this.oneof.name] === this.name)\r\n                return true;\r\n            switch (this.type) {\r\n                case ProtoBuf.TYPES[\"int32\"]:\r\n                case ProtoBuf.TYPES[\"sint32\"]:\r\n                case ProtoBuf.TYPES[\"sfixed32\"]:\r\n                case ProtoBuf.TYPES[\"uint32\"]:\r\n                case ProtoBuf.TYPES[\"fixed32\"]:\r\n                    return value !== 0;\r\n\r\n                case ProtoBuf.TYPES[\"int64\"]:\r\n                case ProtoBuf.TYPES[\"sint64\"]:\r\n                case ProtoBuf.TYPES[\"sfixed64\"]:\r\n                case ProtoBuf.TYPES[\"uint64\"]:\r\n                case ProtoBuf.TYPES[\"fixed64\"]:\r\n                    return value.low !== 0 || value.high !== 0;\r\n\r\n                case ProtoBuf.TYPES[\"bool\"]:\r\n                    return value;\r\n\r\n                case ProtoBuf.TYPES[\"float\"]:\r\n                case ProtoBuf.TYPES[\"double\"]:\r\n                    return value !== 0.0;\r\n\r\n                case ProtoBuf.TYPES[\"string\"]:\r\n                    return value.length > 0;\r\n\r\n                case ProtoBuf.TYPES[\"bytes\"]:\r\n                    return value.remaining() > 0;\r\n\r\n                case ProtoBuf.TYPES[\"enum\"]:\r\n                    return value !== 0;\r\n\r\n                case ProtoBuf.TYPES[\"message\"]:\r\n                    return value !== null;\r\n                default:\r\n                    return true;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Encodes the specified field value to the specified buffer.\r\n         * @param {*} value Verified field value\r\n         * @param {ByteBuffer} buffer ByteBuffer to encode to\r\n         * @param {!ProtoBuf.Builder.Message} message Runtime message\r\n         * @return {ByteBuffer} The ByteBuffer for chaining\r\n         * @throws {Error} If the field cannot be encoded\r\n         * @expose\r\n         */\r\n        FieldPrototype.encode = function(value, buffer, message) {\r\n            if (this.type === null || typeof this.type !== 'object')\r\n                throw Error(\"[INTERNAL] Unresolved type in \"+this.toString(true)+\": \"+this.type);\r\n            if (value === null || (this.repeated && value.length == 0))\r\n                return buffer; // Optional omitted\r\n            try {\r\n                if (this.repeated) {\r\n                    var i;\r\n                    // \"Only repeated fields of primitive numeric types (types which use the varint, 32-bit, or 64-bit wire\r\n                    // types) can be declared 'packed'.\"\r\n                    if (this.options[\"packed\"] && ProtoBuf.PACKABLE_WIRE_TYPES.indexOf(this.type.wireType) >= 0) {\r\n                        // \"All of the elements of the field are packed into a single key-value pair with wire type 2\r\n                        // (length-delimited). Each element is encoded the same way it would be normally, except without a\r\n                        // tag preceding it.\"\r\n                        buffer.writeVarint32((this.id << 3) | ProtoBuf.WIRE_TYPES.LDELIM);\r\n                        buffer.ensureCapacity(buffer.offset += 1); // We do not know the length yet, so let's assume a varint of length 1\r\n                        var start = buffer.offset; // Remember where the contents begin\r\n                        for (i=0; i<value.length; i++)\r\n                            this.element.encodeValue(this.id, value[i], buffer);\r\n                        var len = buffer.offset-start,\r\n                            varintLen = ByteBuffer.calculateVarint32(len);\r\n                        if (varintLen > 1) { // We need to move the contents\r\n                            var contents = buffer.slice(start, buffer.offset);\r\n                            start += varintLen-1;\r\n                            buffer.offset = start;\r\n                            buffer.append(contents);\r\n                        }\r\n                        buffer.writeVarint32(len, start-varintLen);\r\n                    } else {\r\n                        // \"If your message definition has repeated elements (without the [packed=true] option), the encoded\r\n                        // message has zero or more key-value pairs with the same tag number\"\r\n                        for (i=0; i<value.length; i++)\r\n                            buffer.writeVarint32((this.id << 3) | this.type.wireType),\r\n                            this.element.encodeValue(this.id, value[i], buffer);\r\n                    }\r\n                } else if (this.map) {\r\n                    // Write out each map entry as a submessage.\r\n                    value.forEach(function(val, key, m) {\r\n                        // Compute the length of the submessage (key, val) pair.\r\n                        var length =\r\n                            ByteBuffer.calculateVarint32((1 << 3) | this.keyType.wireType) +\r\n                            this.keyElement.calculateLength(1, key) +\r\n                            ByteBuffer.calculateVarint32((2 << 3) | this.type.wireType) +\r\n                            this.element.calculateLength(2, val);\r\n\r\n                        // Submessage with wire type of length-delimited.\r\n                        buffer.writeVarint32((this.id << 3) | ProtoBuf.WIRE_TYPES.LDELIM);\r\n                        buffer.writeVarint32(length);\r\n\r\n                        // Write out the key and val.\r\n                        buffer.writeVarint32((1 << 3) | this.keyType.wireType);\r\n                        this.keyElement.encodeValue(1, key, buffer);\r\n                        buffer.writeVarint32((2 << 3) | this.type.wireType);\r\n                        this.element.encodeValue(2, val, buffer);\r\n                    }, this);\r\n                } else {\r\n                    if (this.hasWirePresence(value, message)) {\r\n                        buffer.writeVarint32((this.id << 3) | this.type.wireType);\r\n                        this.element.encodeValue(this.id, value, buffer);\r\n                    }\r\n                }\r\n            } catch (e) {\r\n                throw Error(\"Illegal value for \"+this.toString(true)+\": \"+value+\" (\"+e+\")\");\r\n            }\r\n            return buffer;\r\n        };\r\n\r\n        /**\r\n         * Calculates the length of this field's value on the network level.\r\n         * @param {*} value Field value\r\n         * @param {!ProtoBuf.Builder.Message} message Runtime message\r\n         * @returns {number} Byte length\r\n         * @expose\r\n         */\r\n        FieldPrototype.calculate = function(value, message) {\r\n            value = this.verifyValue(value); // May throw\r\n            if (this.type === null || typeof this.type !== 'object')\r\n                throw Error(\"[INTERNAL] Unresolved type in \"+this.toString(true)+\": \"+this.type);\r\n            if (value === null || (this.repeated && value.length == 0))\r\n                return 0; // Optional omitted\r\n            var n = 0;\r\n            try {\r\n                if (this.repeated) {\r\n                    var i, ni;\r\n                    if (this.options[\"packed\"] && ProtoBuf.PACKABLE_WIRE_TYPES.indexOf(this.type.wireType) >= 0) {\r\n                        n += ByteBuffer.calculateVarint32((this.id << 3) | ProtoBuf.WIRE_TYPES.LDELIM);\r\n                        ni = 0;\r\n                        for (i=0; i<value.length; i++)\r\n                            ni += this.element.calculateLength(this.id, value[i]);\r\n                        n += ByteBuffer.calculateVarint32(ni);\r\n                        n += ni;\r\n                    } else {\r\n                        for (i=0; i<value.length; i++)\r\n                            n += ByteBuffer.calculateVarint32((this.id << 3) | this.type.wireType),\r\n                            n += this.element.calculateLength(this.id, value[i]);\r\n                    }\r\n                } else if (this.map) {\r\n                    // Each map entry becomes a submessage.\r\n                    value.forEach(function(val, key, m) {\r\n                        // Compute the length of the submessage (key, val) pair.\r\n                        var length =\r\n                            ByteBuffer.calculateVarint32((1 << 3) | this.keyType.wireType) +\r\n                            this.keyElement.calculateLength(1, key) +\r\n                            ByteBuffer.calculateVarint32((2 << 3) | this.type.wireType) +\r\n                            this.element.calculateLength(2, val);\r\n\r\n                        n += ByteBuffer.calculateVarint32((this.id << 3) | ProtoBuf.WIRE_TYPES.LDELIM);\r\n                        n += ByteBuffer.calculateVarint32(length);\r\n                        n += length;\r\n                    }, this);\r\n                } else {\r\n                    if (this.hasWirePresence(value, message)) {\r\n                        n += ByteBuffer.calculateVarint32((this.id << 3) | this.type.wireType);\r\n                        n += this.element.calculateLength(this.id, value);\r\n                    }\r\n                }\r\n            } catch (e) {\r\n                throw Error(\"Illegal value for \"+this.toString(true)+\": \"+value+\" (\"+e+\")\");\r\n            }\r\n            return n;\r\n        };\r\n\r\n        /**\r\n         * Decode the field value from the specified buffer.\r\n         * @param {number} wireType Leading wire type\r\n         * @param {ByteBuffer} buffer ByteBuffer to decode from\r\n         * @param {boolean=} skipRepeated Whether to skip the repeated check or not. Defaults to false.\r\n         * @return {*} Decoded value: array for packed repeated fields, [key, value] for\r\n         *             map fields, or an individual value otherwise.\r\n         * @throws {Error} If the field cannot be decoded\r\n         * @expose\r\n         */\r\n        FieldPrototype.decode = function(wireType, buffer, skipRepeated) {\r\n            var value, nBytes;\r\n\r\n            // We expect wireType to match the underlying type's wireType unless we see\r\n            // a packed repeated field, or unless this is a map field.\r\n            var wireTypeOK =\r\n                (!this.map && wireType == this.type.wireType) ||\r\n                (!skipRepeated && this.repeated && this.options[\"packed\"] &&\r\n                 wireType == ProtoBuf.WIRE_TYPES.LDELIM) ||\r\n                (this.map && wireType == ProtoBuf.WIRE_TYPES.LDELIM);\r\n            if (!wireTypeOK)\r\n                throw Error(\"Illegal wire type for field \"+this.toString(true)+\": \"+wireType+\" (\"+this.type.wireType+\" expected)\");\r\n\r\n            // Handle packed repeated fields.\r\n            if (wireType == ProtoBuf.WIRE_TYPES.LDELIM && this.repeated && this.options[\"packed\"] && ProtoBuf.PACKABLE_WIRE_TYPES.indexOf(this.type.wireType) >= 0) {\r\n                if (!skipRepeated) {\r\n                    nBytes = buffer.readVarint32();\r\n                    nBytes = buffer.offset + nBytes; // Limit\r\n                    var values = [];\r\n                    while (buffer.offset < nBytes)\r\n                        values.push(this.decode(this.type.wireType, buffer, true));\r\n                    return values;\r\n                }\r\n                // Read the next value otherwise...\r\n            }\r\n\r\n            // Handle maps.\r\n            if (this.map) {\r\n                // Read one (key, value) submessage, and return [key, value]\r\n                var key = Element.defaultFieldValue(this.keyType);\r\n                value = Element.defaultFieldValue(this.type);\r\n\r\n                // Read the length\r\n                nBytes = buffer.readVarint32();\r\n                if (buffer.remaining() < nBytes)\r\n                    throw Error(\"Illegal number of bytes for \"+this.toString(true)+\": \"+nBytes+\" required but got only \"+buffer.remaining());\r\n\r\n                // Get a sub-buffer of this key/value submessage\r\n                var msgbuf = buffer.clone();\r\n                msgbuf.limit = msgbuf.offset + nBytes;\r\n                buffer.offset += nBytes;\r\n\r\n                while (msgbuf.remaining() > 0) {\r\n                    var tag = msgbuf.readVarint32();\r\n                    wireType = tag & 0x07;\r\n                    var id = tag >>> 3;\r\n                    if (id === 1) {\r\n                        key = this.keyElement.decode(msgbuf, wireType, id);\r\n                    } else if (id === 2) {\r\n                        value = this.element.decode(msgbuf, wireType, id);\r\n                    } else {\r\n                        throw Error(\"Unexpected tag in map field key/value submessage\");\r\n                    }\r\n                }\r\n\r\n                return [key, value];\r\n            }\r\n\r\n            // Handle singular and non-packed repeated field values.\r\n            return this.element.decode(buffer, wireType, this.id);\r\n        };\r\n\r\n        /**\r\n         * @alias ProtoBuf.Reflect.Message.Field\r\n         * @expose\r\n         */\r\n        Reflect.Message.Field = Field;\r\n\r\n        /**\r\n         * Constructs a new Message ExtensionField.\r\n         * @exports ProtoBuf.Reflect.Message.ExtensionField\r\n         * @param {!ProtoBuf.Builder} builder Builder reference\r\n         * @param {!ProtoBuf.Reflect.Message} message Message reference\r\n         * @param {string} rule Rule, one of requried, optional, repeated\r\n         * @param {string} type Data type, e.g. int32\r\n         * @param {string} name Field name\r\n         * @param {number} id Unique field id\r\n         * @param {!Object.<string,*>=} options Options\r\n         * @constructor\r\n         * @extends ProtoBuf.Reflect.Message.Field\r\n         */\r\n        var ExtensionField = function(builder, message, rule, type, name, id, options) {\r\n            Field.call(this, builder, message, rule, /* keytype = */ null, type, name, id, options);\r\n\r\n            /**\r\n             * Extension reference.\r\n             * @type {!ProtoBuf.Reflect.Extension}\r\n             * @expose\r\n             */\r\n            this.extension;\r\n        };\r\n\r\n        // Extends Field\r\n        ExtensionField.prototype = Object.create(Field.prototype);\r\n\r\n        /**\r\n         * @alias ProtoBuf.Reflect.Message.ExtensionField\r\n         * @expose\r\n         */\r\n        Reflect.Message.ExtensionField = ExtensionField;\r\n\r\n        /**\r\n         * Constructs a new Message OneOf.\r\n         * @exports ProtoBuf.Reflect.Message.OneOf\r\n         * @param {!ProtoBuf.Builder} builder Builder reference\r\n         * @param {!ProtoBuf.Reflect.Message} message Message reference\r\n         * @param {string} name OneOf name\r\n         * @constructor\r\n         * @extends ProtoBuf.Reflect.T\r\n         */\r\n        var OneOf = function(builder, message, name) {\r\n            T.call(this, builder, message, name);\r\n\r\n            /**\r\n             * Enclosed fields.\r\n             * @type {!Array.<!ProtoBuf.Reflect.Message.Field>}\r\n             * @expose\r\n             */\r\n            this.fields = [];\r\n        };\r\n\r\n        /**\r\n         * @alias ProtoBuf.Reflect.Message.OneOf\r\n         * @expose\r\n         */\r\n        Reflect.Message.OneOf = OneOf;\r\n\r\n        /**\r\n         * Constructs a new Enum.\r\n         * @exports ProtoBuf.Reflect.Enum\r\n         * @param {!ProtoBuf.Builder} builder Builder reference\r\n         * @param {!ProtoBuf.Reflect.T} parent Parent Reflect object\r\n         * @param {string} name Enum name\r\n         * @param {Object.<string,*>=} options Enum options\r\n         * @param {string?} syntax The syntax level (e.g., proto3)\r\n         * @constructor\r\n         * @extends ProtoBuf.Reflect.Namespace\r\n         */\r\n        var Enum = function(builder, parent, name, options, syntax) {\r\n            Namespace.call(this, builder, parent, name, options, syntax);\r\n\r\n            /**\r\n             * @override\r\n             */\r\n            this.className = \"Enum\";\r\n\r\n            /**\r\n             * Runtime enum object.\r\n             * @type {Object.<string,number>|null}\r\n             * @expose\r\n             */\r\n            this.object = null;\r\n        };\r\n\r\n        /**\r\n         * Gets the string name of an enum value.\r\n         * @param {!ProtoBuf.Builder.Enum} enm Runtime enum\r\n         * @param {number} value Enum value\r\n         * @returns {?string} Name or `null` if not present\r\n         * @expose\r\n         */\r\n        Enum.getName = function(enm, value) {\r\n            var keys = Object.keys(enm);\r\n            for (var i=0, key; i<keys.length; ++i)\r\n                if (enm[key = keys[i]] === value)\r\n                    return key;\r\n            return null;\r\n        };\r\n\r\n        /**\r\n         * @alias ProtoBuf.Reflect.Enum.prototype\r\n         * @inner\r\n         */\r\n        var EnumPrototype = Enum.prototype = Object.create(Namespace.prototype);\r\n\r\n        /**\r\n         * Builds this enum and returns the runtime counterpart.\r\n         * @param {boolean} rebuild Whether to rebuild or not, defaults to false\r\n         * @returns {!Object.<string,number>}\r\n         * @expose\r\n         */\r\n        EnumPrototype.build = function(rebuild) {\r\n            if (this.object && !rebuild)\r\n                return this.object;\r\n            var enm = new ProtoBuf.Builder.Enum(),\r\n                values = this.getChildren(Enum.Value);\r\n            for (var i=0, k=values.length; i<k; ++i)\r\n                enm[values[i]['name']] = values[i]['id'];\r\n            if (Object.defineProperty)\r\n                Object.defineProperty(enm, '$options', {\r\n                    \"value\": this.buildOpt(),\r\n                    \"enumerable\": false\r\n                });\r\n            return this.object = enm;\r\n        };\r\n\r\n        /**\r\n         * @alias ProtoBuf.Reflect.Enum\r\n         * @expose\r\n         */\r\n        Reflect.Enum = Enum;\r\n\r\n        /**\r\n         * Constructs a new Enum Value.\r\n         * @exports ProtoBuf.Reflect.Enum.Value\r\n         * @param {!ProtoBuf.Builder} builder Builder reference\r\n         * @param {!ProtoBuf.Reflect.Enum} enm Enum reference\r\n         * @param {string} name Field name\r\n         * @param {number} id Unique field id\r\n         * @constructor\r\n         * @extends ProtoBuf.Reflect.T\r\n         */\r\n        var Value = function(builder, enm, name, id) {\r\n            T.call(this, builder, enm, name);\r\n\r\n            /**\r\n             * @override\r\n             */\r\n            this.className = \"Enum.Value\";\r\n\r\n            /**\r\n             * Unique enum value id.\r\n             * @type {number}\r\n             * @expose\r\n             */\r\n            this.id = id;\r\n        };\r\n\r\n        // Extends T\r\n        Value.prototype = Object.create(T.prototype);\r\n\r\n        /**\r\n         * @alias ProtoBuf.Reflect.Enum.Value\r\n         * @expose\r\n         */\r\n        Reflect.Enum.Value = Value;\r\n\r\n        /**\r\n         * An extension (field).\r\n         * @exports ProtoBuf.Reflect.Extension\r\n         * @constructor\r\n         * @param {!ProtoBuf.Builder} builder Builder reference\r\n         * @param {!ProtoBuf.Reflect.T} parent Parent object\r\n         * @param {string} name Object name\r\n         * @param {!ProtoBuf.Reflect.Message.Field} field Extension field\r\n         */\r\n        var Extension = function(builder, parent, name, field) {\r\n            T.call(this, builder, parent, name);\r\n\r\n            /**\r\n             * Extended message field.\r\n             * @type {!ProtoBuf.Reflect.Message.Field}\r\n             * @expose\r\n             */\r\n            this.field = field;\r\n        };\r\n\r\n        // Extends T\r\n        Extension.prototype = Object.create(T.prototype);\r\n\r\n        /**\r\n         * @alias ProtoBuf.Reflect.Extension\r\n         * @expose\r\n         */\r\n        Reflect.Extension = Extension;\r\n\r\n        /**\r\n         * Constructs a new Service.\r\n         * @exports ProtoBuf.Reflect.Service\r\n         * @param {!ProtoBuf.Builder} builder Builder reference\r\n         * @param {!ProtoBuf.Reflect.Namespace} root Root\r\n         * @param {string} name Service name\r\n         * @param {Object.<string,*>=} options Options\r\n         * @constructor\r\n         * @extends ProtoBuf.Reflect.Namespace\r\n         */\r\n        var Service = function(builder, root, name, options) {\r\n            Namespace.call(this, builder, root, name, options);\r\n\r\n            /**\r\n             * @override\r\n             */\r\n            this.className = \"Service\";\r\n\r\n            /**\r\n             * Built runtime service class.\r\n             * @type {?function(new:ProtoBuf.Builder.Service)}\r\n             */\r\n            this.clazz = null;\r\n        };\r\n\r\n        /**\r\n         * @alias ProtoBuf.Reflect.Service.prototype\r\n         * @inner\r\n         */\r\n        var ServicePrototype = Service.prototype = Object.create(Namespace.prototype);\r\n\r\n        /**\r\n         * Builds the service and returns the runtime counterpart, which is a fully functional class.\r\n         * @see ProtoBuf.Builder.Service\r\n         * @param {boolean=} rebuild Whether to rebuild or not\r\n         * @return {Function} Service class\r\n         * @throws {Error} If the message cannot be built\r\n         * @expose\r\n         */\r\n        ServicePrototype.build = function(rebuild) {\r\n            if (this.clazz && !rebuild)\r\n                return this.clazz;\r\n\r\n            // Create the runtime Service class in its own scope\r\n            return this.clazz = (function(ProtoBuf, T) {\r\n\r\n                /**\r\n                 * Constructs a new runtime Service.\r\n                 * @name ProtoBuf.Builder.Service\r\n                 * @param {function(string, ProtoBuf.Builder.Message, function(Error, ProtoBuf.Builder.Message=))=} rpcImpl RPC implementation receiving the method name and the message\r\n                 * @class Barebone of all runtime services.\r\n                 * @constructor\r\n                 * @throws {Error} If the service cannot be created\r\n                 */\r\n                var Service = function(rpcImpl) {\r\n                    ProtoBuf.Builder.Service.call(this);\r\n\r\n                    /**\r\n                     * Service implementation.\r\n                     * @name ProtoBuf.Builder.Service#rpcImpl\r\n                     * @type {!function(string, ProtoBuf.Builder.Message, function(Error, ProtoBuf.Builder.Message=))}\r\n                     * @expose\r\n                     */\r\n                    this.rpcImpl = rpcImpl || function(name, msg, callback) {\r\n                        // This is what a user has to implement: A function receiving the method name, the actual message to\r\n                        // send (type checked) and the callback that's either provided with the error as its first\r\n                        // argument or null and the actual response message.\r\n                        setTimeout(callback.bind(this, Error(\"Not implemented, see: https://github.com/dcodeIO/ProtoBuf.js/wiki/Services\")), 0); // Must be async!\r\n                    };\r\n                };\r\n\r\n                /**\r\n                 * @alias ProtoBuf.Builder.Service.prototype\r\n                 * @inner\r\n                 */\r\n                var ServicePrototype = Service.prototype = Object.create(ProtoBuf.Builder.Service.prototype);\r\n\r\n                /**\r\n                 * Asynchronously performs an RPC call using the given RPC implementation.\r\n                 * @name ProtoBuf.Builder.Service.[Method]\r\n                 * @function\r\n                 * @param {!function(string, ProtoBuf.Builder.Message, function(Error, ProtoBuf.Builder.Message=))} rpcImpl RPC implementation\r\n                 * @param {ProtoBuf.Builder.Message} req Request\r\n                 * @param {function(Error, (ProtoBuf.Builder.Message|ByteBuffer|Buffer|string)=)} callback Callback receiving\r\n                 *  the error if any and the response either as a pre-parsed message or as its raw bytes\r\n                 * @abstract\r\n                 */\r\n\r\n                /**\r\n                 * Asynchronously performs an RPC call using the instance's RPC implementation.\r\n                 * @name ProtoBuf.Builder.Service#[Method]\r\n                 * @function\r\n                 * @param {ProtoBuf.Builder.Message} req Request\r\n                 * @param {function(Error, (ProtoBuf.Builder.Message|ByteBuffer|Buffer|string)=)} callback Callback receiving\r\n                 *  the error if any and the response either as a pre-parsed message or as its raw bytes\r\n                 * @abstract\r\n                 */\r\n\r\n                var rpc = T.getChildren(ProtoBuf.Reflect.Service.RPCMethod);\r\n                for (var i=0; i<rpc.length; i++) {\r\n                    (function(method) {\r\n\r\n                        // service#Method(message, callback)\r\n                        ServicePrototype[method.name] = function(req, callback) {\r\n                            try {\r\n                                try {\r\n                                    // If given as a buffer, decode the request. Will throw a TypeError if not a valid buffer.\r\n                                    req = method.resolvedRequestType.clazz.decode(ByteBuffer.wrap(req));\r\n                                } catch (err) {\r\n                                    if (!(err instanceof TypeError))\r\n                                        throw err;\r\n                                }\r\n                                if (req === null || typeof req !== 'object')\r\n                                    throw Error(\"Illegal arguments\");\r\n                                if (!(req instanceof method.resolvedRequestType.clazz))\r\n                                    req = new method.resolvedRequestType.clazz(req);\r\n                                this.rpcImpl(method.fqn(), req, function(err, res) { // Assumes that this is properly async\r\n                                    if (err) {\r\n                                        callback(err);\r\n                                        return;\r\n                                    }\r\n                                    try { res = method.resolvedResponseType.clazz.decode(res); } catch (notABuffer) {}\r\n                                    if (!res || !(res instanceof method.resolvedResponseType.clazz)) {\r\n                                        callback(Error(\"Illegal response type received in service method \"+ T.name+\"#\"+method.name));\r\n                                        return;\r\n                                    }\r\n                                    callback(null, res);\r\n                                });\r\n                            } catch (err) {\r\n                                setTimeout(callback.bind(this, err), 0);\r\n                            }\r\n                        };\r\n\r\n                        // Service.Method(rpcImpl, message, callback)\r\n                        Service[method.name] = function(rpcImpl, req, callback) {\r\n                            new Service(rpcImpl)[method.name](req, callback);\r\n                        };\r\n\r\n                        if (Object.defineProperty)\r\n                            Object.defineProperty(Service[method.name], \"$options\", { \"value\": method.buildOpt() }),\r\n                            Object.defineProperty(ServicePrototype[method.name], \"$options\", { \"value\": Service[method.name][\"$options\"] });\r\n                    })(rpc[i]);\r\n                }\r\n\r\n                // Properties\r\n\r\n                /**\r\n                 * Service options.\r\n                 * @name ProtoBuf.Builder.Service.$options\r\n                 * @type {Object.<string,*>}\r\n                 * @expose\r\n                 */\r\n                var $optionsS; // cc needs this\r\n\r\n                /**\r\n                 * Service options.\r\n                 * @name ProtoBuf.Builder.Service#$options\r\n                 * @type {Object.<string,*>}\r\n                 * @expose\r\n                 */\r\n                var $options;\r\n\r\n                /**\r\n                 * Reflection type.\r\n                 * @name ProtoBuf.Builder.Service.$type\r\n                 * @type {!ProtoBuf.Reflect.Service}\r\n                 * @expose\r\n                 */\r\n                var $typeS;\r\n\r\n                /**\r\n                 * Reflection type.\r\n                 * @name ProtoBuf.Builder.Service#$type\r\n                 * @type {!ProtoBuf.Reflect.Service}\r\n                 * @expose\r\n                 */\r\n                var $type;\r\n\r\n                if (Object.defineProperty)\r\n                    Object.defineProperty(Service, \"$options\", { \"value\": T.buildOpt() }),\r\n                    Object.defineProperty(ServicePrototype, \"$options\", { \"value\": Service[\"$options\"] }),\r\n                    Object.defineProperty(Service, \"$type\", { \"value\": T }),\r\n                    Object.defineProperty(ServicePrototype, \"$type\", { \"value\": T });\r\n\r\n                return Service;\r\n\r\n            })(ProtoBuf, this);\r\n        };\r\n\r\n        /**\r\n         * @alias ProtoBuf.Reflect.Service\r\n         * @expose\r\n         */\r\n        Reflect.Service = Service;\r\n\r\n        /**\r\n         * Abstract service method.\r\n         * @exports ProtoBuf.Reflect.Service.Method\r\n         * @param {!ProtoBuf.Builder} builder Builder reference\r\n         * @param {!ProtoBuf.Reflect.Service} svc Service\r\n         * @param {string} name Method name\r\n         * @param {Object.<string,*>=} options Options\r\n         * @constructor\r\n         * @extends ProtoBuf.Reflect.T\r\n         */\r\n        var Method = function(builder, svc, name, options) {\r\n            T.call(this, builder, svc, name);\r\n\r\n            /**\r\n             * @override\r\n             */\r\n            this.className = \"Service.Method\";\r\n\r\n            /**\r\n             * Options.\r\n             * @type {Object.<string, *>}\r\n             * @expose\r\n             */\r\n            this.options = options || {};\r\n        };\r\n\r\n        /**\r\n         * @alias ProtoBuf.Reflect.Service.Method.prototype\r\n         * @inner\r\n         */\r\n        var MethodPrototype = Method.prototype = Object.create(T.prototype);\r\n\r\n        /**\r\n         * Builds the method's '$options' property.\r\n         * @name ProtoBuf.Reflect.Service.Method#buildOpt\r\n         * @function\r\n         * @return {Object.<string,*>}\r\n         */\r\n        MethodPrototype.buildOpt = NamespacePrototype.buildOpt;\r\n\r\n        /**\r\n         * @alias ProtoBuf.Reflect.Service.Method\r\n         * @expose\r\n         */\r\n        Reflect.Service.Method = Method;\r\n\r\n        /**\r\n         * RPC service method.\r\n         * @exports ProtoBuf.Reflect.Service.RPCMethod\r\n         * @param {!ProtoBuf.Builder} builder Builder reference\r\n         * @param {!ProtoBuf.Reflect.Service} svc Service\r\n         * @param {string} name Method name\r\n         * @param {string} request Request message name\r\n         * @param {string} response Response message name\r\n         * @param {boolean} request_stream Whether requests are streamed\r\n         * @param {boolean} response_stream Whether responses are streamed\r\n         * @param {Object.<string,*>=} options Options\r\n         * @constructor\r\n         * @extends ProtoBuf.Reflect.Service.Method\r\n         */\r\n        var RPCMethod = function(builder, svc, name, request, response, request_stream, response_stream, options) {\r\n            Method.call(this, builder, svc, name, options);\r\n\r\n            /**\r\n             * @override\r\n             */\r\n            this.className = \"Service.RPCMethod\";\r\n\r\n            /**\r\n             * Request message name.\r\n             * @type {string}\r\n             * @expose\r\n             */\r\n            this.requestName = request;\r\n\r\n            /**\r\n             * Response message name.\r\n             * @type {string}\r\n             * @expose\r\n             */\r\n            this.responseName = response;\r\n\r\n            /**\r\n             * Whether requests are streamed\r\n             * @type {bool}\r\n             * @expose\r\n             */\r\n            this.requestStream = request_stream;\r\n\r\n            /**\r\n             * Whether responses are streamed\r\n             * @type {bool}\r\n             * @expose\r\n             */\r\n            this.responseStream = response_stream;\r\n\r\n            /**\r\n             * Resolved request message type.\r\n             * @type {ProtoBuf.Reflect.Message}\r\n             * @expose\r\n             */\r\n            this.resolvedRequestType = null;\r\n\r\n            /**\r\n             * Resolved response message type.\r\n             * @type {ProtoBuf.Reflect.Message}\r\n             * @expose\r\n             */\r\n            this.resolvedResponseType = null;\r\n        };\r\n\r\n        // Extends Method\r\n        RPCMethod.prototype = Object.create(Method.prototype);\r\n\r\n        /**\r\n         * @alias ProtoBuf.Reflect.Service.RPCMethod\r\n         * @expose\r\n         */\r\n        Reflect.Service.RPCMethod = RPCMethod;\r\n\r\n        return Reflect;\r\n\r\n    })(ProtoBuf);\r\n\r\n    /**\r\n     * @alias ProtoBuf.Builder\r\n     * @expose\r\n     */\r\n    ProtoBuf.Builder = (function(ProtoBuf, Lang, Reflect) {\r\n        \"use strict\";\r\n\r\n        /**\r\n         * Constructs a new Builder.\r\n         * @exports ProtoBuf.Builder\r\n         * @class Provides the functionality to build protocol messages.\r\n         * @param {Object.<string,*>=} options Options\r\n         * @constructor\r\n         */\r\n        var Builder = function(options) {\r\n\r\n            /**\r\n             * Namespace.\r\n             * @type {ProtoBuf.Reflect.Namespace}\r\n             * @expose\r\n             */\r\n            this.ns = new Reflect.Namespace(this, null, \"\"); // Global namespace\r\n\r\n            /**\r\n             * Namespace pointer.\r\n             * @type {ProtoBuf.Reflect.T}\r\n             * @expose\r\n             */\r\n            this.ptr = this.ns;\r\n\r\n            /**\r\n             * Resolved flag.\r\n             * @type {boolean}\r\n             * @expose\r\n             */\r\n            this.resolved = false;\r\n\r\n            /**\r\n             * The current building result.\r\n             * @type {Object.<string,ProtoBuf.Builder.Message|Object>|null}\r\n             * @expose\r\n             */\r\n            this.result = null;\r\n\r\n            /**\r\n             * Imported files.\r\n             * @type {Array.<string>}\r\n             * @expose\r\n             */\r\n            this.files = {};\r\n\r\n            /**\r\n             * Import root override.\r\n             * @type {?string}\r\n             * @expose\r\n             */\r\n            this.importRoot = null;\r\n\r\n            /**\r\n             * Options.\r\n             * @type {!Object.<string, *>}\r\n             * @expose\r\n             */\r\n            this.options = options || {};\r\n        };\r\n\r\n        /**\r\n         * @alias ProtoBuf.Builder.prototype\r\n         * @inner\r\n         */\r\n        var BuilderPrototype = Builder.prototype;\r\n\r\n        // ----- Definition tests -----\r\n\r\n        /**\r\n         * Tests if a definition most likely describes a message.\r\n         * @param {!Object} def\r\n         * @returns {boolean}\r\n         * @expose\r\n         */\r\n        Builder.isMessage = function(def) {\r\n            // Messages require a string name\r\n            if (typeof def[\"name\"] !== 'string')\r\n                return false;\r\n            // Messages do not contain values (enum) or rpc methods (service)\r\n            if (typeof def[\"values\"] !== 'undefined' || typeof def[\"rpc\"] !== 'undefined')\r\n                return false;\r\n            return true;\r\n        };\r\n\r\n        /**\r\n         * Tests if a definition most likely describes a message field.\r\n         * @param {!Object} def\r\n         * @returns {boolean}\r\n         * @expose\r\n         */\r\n        Builder.isMessageField = function(def) {\r\n            // Message fields require a string rule, name and type and an id\r\n            if (typeof def[\"rule\"] !== 'string' || typeof def[\"name\"] !== 'string' || typeof def[\"type\"] !== 'string' || typeof def[\"id\"] === 'undefined')\r\n                return false;\r\n            return true;\r\n        };\r\n\r\n        /**\r\n         * Tests if a definition most likely describes an enum.\r\n         * @param {!Object} def\r\n         * @returns {boolean}\r\n         * @expose\r\n         */\r\n        Builder.isEnum = function(def) {\r\n            // Enums require a string name\r\n            if (typeof def[\"name\"] !== 'string')\r\n                return false;\r\n            // Enums require at least one value\r\n            if (typeof def[\"values\"] === 'undefined' || !Array.isArray(def[\"values\"]) || def[\"values\"].length === 0)\r\n                return false;\r\n            return true;\r\n        };\r\n\r\n        /**\r\n         * Tests if a definition most likely describes a service.\r\n         * @param {!Object} def\r\n         * @returns {boolean}\r\n         * @expose\r\n         */\r\n        Builder.isService = function(def) {\r\n            // Services require a string name and an rpc object\r\n            if (typeof def[\"name\"] !== 'string' || typeof def[\"rpc\"] !== 'object' || !def[\"rpc\"])\r\n                return false;\r\n            return true;\r\n        };\r\n\r\n        /**\r\n         * Tests if a definition most likely describes an extended message\r\n         * @param {!Object} def\r\n         * @returns {boolean}\r\n         * @expose\r\n         */\r\n        Builder.isExtend = function(def) {\r\n            // Extends rquire a string ref\r\n            if (typeof def[\"ref\"] !== 'string')\r\n                return false;\r\n            return true;\r\n        };\r\n\r\n        // ----- Building -----\r\n\r\n        /**\r\n         * Resets the pointer to the root namespace.\r\n         * @returns {!ProtoBuf.Builder} this\r\n         * @expose\r\n         */\r\n        BuilderPrototype.reset = function() {\r\n            this.ptr = this.ns;\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * Defines a namespace on top of the current pointer position and places the pointer on it.\r\n         * @param {string} namespace\r\n         * @return {!ProtoBuf.Builder} this\r\n         * @expose\r\n         */\r\n        BuilderPrototype.define = function(namespace) {\r\n            if (typeof namespace !== 'string' || !Lang.TYPEREF.test(namespace))\r\n                throw Error(\"illegal namespace: \"+namespace);\r\n            namespace.split(\".\").forEach(function(part) {\r\n                var ns = this.ptr.getChild(part);\r\n                if (ns === null) // Keep existing\r\n                    this.ptr.addChild(ns = new Reflect.Namespace(this, this.ptr, part));\r\n                this.ptr = ns;\r\n            }, this);\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * Creates the specified definitions at the current pointer position.\r\n         * @param {!Array.<!Object>} defs Messages, enums or services to create\r\n         * @returns {!ProtoBuf.Builder} this\r\n         * @throws {Error} If a message definition is invalid\r\n         * @expose\r\n         */\r\n        BuilderPrototype.create = function(defs) {\r\n            if (!defs)\r\n                return this; // Nothing to create\r\n            if (!Array.isArray(defs))\r\n                defs = [defs];\r\n            else {\r\n                if (defs.length === 0)\r\n                    return this;\r\n                defs = defs.slice();\r\n            }\r\n\r\n            // It's quite hard to keep track of scopes and memory here, so let's do this iteratively.\r\n            var stack = [defs];\r\n            while (stack.length > 0) {\r\n                defs = stack.pop();\r\n\r\n                if (!Array.isArray(defs)) // Stack always contains entire namespaces\r\n                    throw Error(\"not a valid namespace: \"+JSON.stringify(defs));\r\n\r\n                while (defs.length > 0) {\r\n                    var def = defs.shift(); // Namespaces always contain an array of messages, enums and services\r\n\r\n                    if (Builder.isMessage(def)) {\r\n                        var obj = new Reflect.Message(this, this.ptr, def[\"name\"], def[\"options\"], def[\"isGroup\"], def[\"syntax\"]);\r\n\r\n                        // Create OneOfs\r\n                        var oneofs = {};\r\n                        if (def[\"oneofs\"])\r\n                            Object.keys(def[\"oneofs\"]).forEach(function(name) {\r\n                                obj.addChild(oneofs[name] = new Reflect.Message.OneOf(this, obj, name));\r\n                            }, this);\r\n\r\n                        // Create fields\r\n                        if (def[\"fields\"])\r\n                            def[\"fields\"].forEach(function(fld) {\r\n                                if (obj.getChild(fld[\"id\"]|0) !== null)\r\n                                    throw Error(\"duplicate or invalid field id in \"+obj.name+\": \"+fld['id']);\r\n                                if (fld[\"options\"] && typeof fld[\"options\"] !== 'object')\r\n                                    throw Error(\"illegal field options in \"+obj.name+\"#\"+fld[\"name\"]);\r\n                                var oneof = null;\r\n                                if (typeof fld[\"oneof\"] === 'string' && !(oneof = oneofs[fld[\"oneof\"]]))\r\n                                    throw Error(\"illegal oneof in \"+obj.name+\"#\"+fld[\"name\"]+\": \"+fld[\"oneof\"]);\r\n                                fld = new Reflect.Message.Field(this, obj, fld[\"rule\"], fld[\"keytype\"], fld[\"type\"], fld[\"name\"], fld[\"id\"], fld[\"options\"], oneof, def[\"syntax\"]);\r\n                                if (oneof)\r\n                                    oneof.fields.push(fld);\r\n                                obj.addChild(fld);\r\n                            }, this);\r\n\r\n                        // Push children to stack\r\n                        var subObj = [];\r\n                        if (def[\"enums\"])\r\n                            def[\"enums\"].forEach(function(enm) {\r\n                                subObj.push(enm);\r\n                            });\r\n                        if (def[\"messages\"])\r\n                            def[\"messages\"].forEach(function(msg) {\r\n                                subObj.push(msg);\r\n                            });\r\n                        if (def[\"services\"])\r\n                            def[\"services\"].forEach(function(svc) {\r\n                                subObj.push(svc);\r\n                            });\r\n\r\n                        // Set extension range\r\n                        if (def[\"extensions\"]) {\r\n                            obj.extensions = def[\"extensions\"];\r\n                            if (obj.extensions[0] < ProtoBuf.ID_MIN)\r\n                                obj.extensions[0] = ProtoBuf.ID_MIN;\r\n                            if (obj.extensions[1] > ProtoBuf.ID_MAX)\r\n                                obj.extensions[1] = ProtoBuf.ID_MAX;\r\n                        }\r\n\r\n                        // Create on top of current namespace\r\n                        this.ptr.addChild(obj);\r\n                        if (subObj.length > 0) {\r\n                            stack.push(defs); // Push the current level back\r\n                            defs = subObj; // Continue processing sub level\r\n                            subObj = null;\r\n                            this.ptr = obj; // And move the pointer to this namespace\r\n                            obj = null;\r\n                            continue;\r\n                        }\r\n                        subObj = null;\r\n\r\n                    } else if (Builder.isEnum(def)) {\r\n\r\n                        obj = new Reflect.Enum(this, this.ptr, def[\"name\"], def[\"options\"], def[\"syntax\"]);\r\n                        def[\"values\"].forEach(function(val) {\r\n                            obj.addChild(new Reflect.Enum.Value(this, obj, val[\"name\"], val[\"id\"]));\r\n                        }, this);\r\n                        this.ptr.addChild(obj);\r\n\r\n                    } else if (Builder.isService(def)) {\r\n\r\n                        obj = new Reflect.Service(this, this.ptr, def[\"name\"], def[\"options\"]);\r\n                        Object.keys(def[\"rpc\"]).forEach(function(name) {\r\n                            var mtd = def[\"rpc\"][name];\r\n                            obj.addChild(new Reflect.Service.RPCMethod(this, obj, name, mtd[\"request\"], mtd[\"response\"], !!mtd[\"request_stream\"], !!mtd[\"response_stream\"], mtd[\"options\"]));\r\n                        }, this);\r\n                        this.ptr.addChild(obj);\r\n\r\n                    } else if (Builder.isExtend(def)) {\r\n\r\n                        obj = this.ptr.resolve(def[\"ref\"], true);\r\n                        if (obj) {\r\n                            def[\"fields\"].forEach(function(fld) {\r\n                                if (obj.getChild(fld['id']|0) !== null)\r\n                                    throw Error(\"duplicate extended field id in \"+obj.name+\": \"+fld['id']);\r\n                                if (fld['id'] < obj.extensions[0] || fld['id'] > obj.extensions[1])\r\n                                    throw Error(\"illegal extended field id in \"+obj.name+\": \"+fld['id']+\" (\"+obj.extensions.join(' to ')+\" expected)\");\r\n                                // Convert extension field names to camel case notation if the override is set\r\n                                var name = fld[\"name\"];\r\n                                if (this.options['convertFieldsToCamelCase'])\r\n                                    name = ProtoBuf.Util.toCamelCase(name);\r\n                                // see #161: Extensions use their fully qualified name as their runtime key and...\r\n                                var field = new Reflect.Message.ExtensionField(this, obj, fld[\"rule\"], fld[\"type\"], this.ptr.fqn()+'.'+name, fld[\"id\"], fld[\"options\"]);\r\n                                // ...are added on top of the current namespace as an extension which is used for\r\n                                // resolving their type later on (the extension always keeps the original name to\r\n                                // prevent naming collisions)\r\n                                var ext = new Reflect.Extension(this, this.ptr, fld[\"name\"], field);\r\n                                field.extension = ext;\r\n                                this.ptr.addChild(ext);\r\n                                obj.addChild(field);\r\n                            }, this);\r\n\r\n                        } else if (!/\\.?google\\.protobuf\\./.test(def[\"ref\"])) // Silently skip internal extensions\r\n                            throw Error(\"extended message \"+def[\"ref\"]+\" is not defined\");\r\n\r\n                    } else\r\n                        throw Error(\"not a valid definition: \"+JSON.stringify(def));\r\n\r\n                    def = null;\r\n                    obj = null;\r\n                }\r\n                // Break goes here\r\n                defs = null;\r\n                this.ptr = this.ptr.parent; // Namespace done, continue at parent\r\n            }\r\n            this.resolved = false; // Require re-resolve\r\n            this.result = null; // Require re-build\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * Propagates syntax to all children.\r\n         * @param {!Object} parent\r\n         * @inner\r\n         */\r\n        function propagateSyntax(parent) {\r\n            if (parent['messages']) {\r\n                parent['messages'].forEach(function(child) {\r\n                    child[\"syntax\"] = parent[\"syntax\"];\r\n                    propagateSyntax(child);\r\n                });\r\n            }\r\n            if (parent['enums']) {\r\n                parent['enums'].forEach(function(child) {\r\n                    child[\"syntax\"] = parent[\"syntax\"];\r\n                });\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Imports another definition into this builder.\r\n         * @param {Object.<string,*>} json Parsed import\r\n         * @param {(string|{root: string, file: string})=} filename Imported file name\r\n         * @returns {!ProtoBuf.Builder} this\r\n         * @throws {Error} If the definition or file cannot be imported\r\n         * @expose\r\n         */\r\n        BuilderPrototype[\"import\"] = function(json, filename) {\r\n            var delim = '/';\r\n\r\n            // Make sure to skip duplicate imports\r\n\r\n            if (typeof filename === 'string') {\r\n\r\n                if (ProtoBuf.Util.IS_NODE)\r\n                    filename = require(\"path\")['resolve'](filename);\r\n                if (this.files[filename] === true)\r\n                    return this.reset();\r\n                this.files[filename] = true;\r\n\r\n            } else if (typeof filename === 'object') { // Object with root, file.\r\n\r\n                var root = filename.root;\r\n                if (ProtoBuf.Util.IS_NODE)\r\n                    root = require(\"path\")['resolve'](root);\r\n                if (root.indexOf(\"\\\\\") >= 0 || filename.file.indexOf(\"\\\\\") >= 0)\r\n                    delim = '\\\\';\r\n                var fname = root + delim + filename.file;\r\n                if (this.files[fname] === true)\r\n                    return this.reset();\r\n                this.files[fname] = true;\r\n            }\r\n\r\n            // Import imports\r\n\r\n            if (json['imports'] && json['imports'].length > 0) {\r\n                var importRoot,\r\n                    resetRoot = false;\r\n\r\n                if (typeof filename === 'object') { // If an import root is specified, override\r\n\r\n                    this.importRoot = filename[\"root\"]; resetRoot = true; // ... and reset afterwards\r\n                    importRoot = this.importRoot;\r\n                    filename = filename[\"file\"];\r\n                    if (importRoot.indexOf(\"\\\\\") >= 0 || filename.indexOf(\"\\\\\") >= 0)\r\n                        delim = '\\\\';\r\n\r\n                } else if (typeof filename === 'string') {\r\n\r\n                    if (this.importRoot) // If import root is overridden, use it\r\n                        importRoot = this.importRoot;\r\n                    else { // Otherwise compute from filename\r\n                        if (filename.indexOf(\"/\") >= 0) { // Unix\r\n                            importRoot = filename.replace(/\\/[^\\/]*$/, \"\");\r\n                            if (/* /file.proto */ importRoot === \"\")\r\n                                importRoot = \"/\";\r\n                        } else if (filename.indexOf(\"\\\\\") >= 0) { // Windows\r\n                            importRoot = filename.replace(/\\\\[^\\\\]*$/, \"\");\r\n                            delim = '\\\\';\r\n                        } else\r\n                            importRoot = \".\";\r\n                    }\r\n\r\n                } else\r\n                    importRoot = null;\r\n\r\n                for (var i=0; i<json['imports'].length; i++) {\r\n                    if (typeof json['imports'][i] === 'string') { // Import file\r\n                        if (!importRoot)\r\n                            throw Error(\"cannot determine import root\");\r\n                        var importFilename = json['imports'][i];\r\n                        if (importFilename === \"google/protobuf/descriptor.proto\")\r\n                            continue; // Not needed and therefore not used\r\n                        importFilename = importRoot + delim + importFilename;\r\n                        if (this.files[importFilename] === true)\r\n                            continue; // Already imported\r\n                        if (/\\.proto$/i.test(importFilename) && !ProtoBuf.DotProto)       // If this is a light build\r\n                            importFilename = importFilename.replace(/\\.proto$/, \".json\"); // always load the JSON file\r\n                        var contents = ProtoBuf.Util.fetch(importFilename);\r\n                        if (contents === null)\r\n                            throw Error(\"failed to import '\"+importFilename+\"' in '\"+filename+\"': file not found\");\r\n                        if (/\\.json$/i.test(importFilename)) // Always possible\r\n                            this[\"import\"](JSON.parse(contents+\"\"), importFilename); // May throw\r\n                        else\r\n                            this[\"import\"](ProtoBuf.DotProto.Parser.parse(contents), importFilename); // May throw\r\n                    } else // Import structure\r\n                        if (!filename)\r\n                            this[\"import\"](json['imports'][i]);\r\n                        else if (/\\.(\\w+)$/.test(filename)) // With extension: Append _importN to the name portion to make it unique\r\n                            this[\"import\"](json['imports'][i], filename.replace(/^(.+)\\.(\\w+)$/, function($0, $1, $2) { return $1+\"_import\"+i+\".\"+$2; }));\r\n                        else // Without extension: Append _importN to make it unique\r\n                            this[\"import\"](json['imports'][i], filename+\"_import\"+i);\r\n                }\r\n                if (resetRoot) // Reset import root override when all imports are done\r\n                    this.importRoot = null;\r\n            }\r\n\r\n            // Import structures\r\n\r\n            if (json['package'])\r\n                this.define(json['package']);\r\n            if (json['syntax'])\r\n                propagateSyntax(json);\r\n            var base = this.ptr;\r\n            if (json['options'])\r\n                Object.keys(json['options']).forEach(function(key) {\r\n                    base.options[key] = json['options'][key];\r\n                });\r\n            if (json['messages'])\r\n                this.create(json['messages']),\r\n                this.ptr = base;\r\n            if (json['enums'])\r\n                this.create(json['enums']),\r\n                this.ptr = base;\r\n            if (json['services'])\r\n                this.create(json['services']),\r\n                this.ptr = base;\r\n            if (json['extends'])\r\n                this.create(json['extends']);\r\n\r\n            return this.reset();\r\n        };\r\n\r\n        /**\r\n         * Resolves all namespace objects.\r\n         * @throws {Error} If a type cannot be resolved\r\n         * @returns {!ProtoBuf.Builder} this\r\n         * @expose\r\n         */\r\n        BuilderPrototype.resolveAll = function() {\r\n            // Resolve all reflected objects\r\n            var res;\r\n            if (this.ptr == null || typeof this.ptr.type === 'object')\r\n                return this; // Done (already resolved)\r\n\r\n            if (this.ptr instanceof Reflect.Namespace) { // Resolve children\r\n\r\n                this.ptr.children.forEach(function(child) {\r\n                    this.ptr = child;\r\n                    this.resolveAll();\r\n                }, this);\r\n\r\n            } else if (this.ptr instanceof Reflect.Message.Field) { // Resolve type\r\n\r\n                if (!Lang.TYPE.test(this.ptr.type)) {\r\n                    if (!Lang.TYPEREF.test(this.ptr.type))\r\n                        throw Error(\"illegal type reference in \"+this.ptr.toString(true)+\": \"+this.ptr.type);\r\n                    res = (this.ptr instanceof Reflect.Message.ExtensionField ? this.ptr.extension.parent : this.ptr.parent).resolve(this.ptr.type, true);\r\n                    if (!res)\r\n                        throw Error(\"unresolvable type reference in \"+this.ptr.toString(true)+\": \"+this.ptr.type);\r\n                    this.ptr.resolvedType = res;\r\n                    if (res instanceof Reflect.Enum) {\r\n                        this.ptr.type = ProtoBuf.TYPES[\"enum\"];\r\n                        if (this.ptr.syntax === 'proto3' && res.syntax !== 'proto3')\r\n                            throw Error(\"proto3 message cannot reference proto2 enum\");\r\n                    }\r\n                    else if (res instanceof Reflect.Message)\r\n                        this.ptr.type = res.isGroup ? ProtoBuf.TYPES[\"group\"] : ProtoBuf.TYPES[\"message\"];\r\n                    else\r\n                        throw Error(\"illegal type reference in \"+this.ptr.toString(true)+\": \"+this.ptr.type);\r\n                } else\r\n                    this.ptr.type = ProtoBuf.TYPES[this.ptr.type];\r\n\r\n                // If it's a map field, also resolve the key type. The key type can be only a numeric, string, or bool type\r\n                // (i.e., no enums or messages), so we don't need to resolve against the current namespace.\r\n                if (this.ptr.map) {\r\n                    if (!Lang.TYPE.test(this.ptr.keyType))\r\n                        throw Error(\"illegal key type for map field in \"+this.ptr.toString(true)+\": \"+this.ptr.keyType);\r\n                    this.ptr.keyType = ProtoBuf.TYPES[this.ptr.keyType];\r\n                }\r\n\r\n            } else if (this.ptr instanceof ProtoBuf.Reflect.Service.Method) {\r\n\r\n                if (this.ptr instanceof ProtoBuf.Reflect.Service.RPCMethod) {\r\n                    res = this.ptr.parent.resolve(this.ptr.requestName, true);\r\n                    if (!res || !(res instanceof ProtoBuf.Reflect.Message))\r\n                        throw Error(\"Illegal type reference in \"+this.ptr.toString(true)+\": \"+this.ptr.requestName);\r\n                    this.ptr.resolvedRequestType = res;\r\n                    res = this.ptr.parent.resolve(this.ptr.responseName, true);\r\n                    if (!res || !(res instanceof ProtoBuf.Reflect.Message))\r\n                        throw Error(\"Illegal type reference in \"+this.ptr.toString(true)+\": \"+this.ptr.responseName);\r\n                    this.ptr.resolvedResponseType = res;\r\n                } else // Should not happen as nothing else is implemented\r\n                    throw Error(\"illegal service type in \"+this.ptr.toString(true));\r\n\r\n            } else if (\r\n                !(this.ptr instanceof ProtoBuf.Reflect.Message.OneOf) && // Not built\r\n                !(this.ptr instanceof ProtoBuf.Reflect.Extension) && // Not built\r\n                !(this.ptr instanceof ProtoBuf.Reflect.Enum.Value) // Built in enum\r\n            )\r\n                throw Error(\"illegal object in namespace: \"+typeof(this.ptr)+\": \"+this.ptr);\r\n\r\n            return this.reset();\r\n        };\r\n\r\n        /**\r\n         * Builds the protocol. This will first try to resolve all definitions and, if this has been successful,\r\n         * return the built package.\r\n         * @param {(string|Array.<string>)=} path Specifies what to return. If omitted, the entire namespace will be returned.\r\n         * @returns {!ProtoBuf.Builder.Message|!Object.<string,*>}\r\n         * @throws {Error} If a type could not be resolved\r\n         * @expose\r\n         */\r\n        BuilderPrototype.build = function(path) {\r\n            this.reset();\r\n            if (!this.resolved)\r\n                this.resolveAll(),\r\n                this.resolved = true,\r\n                this.result = null; // Require re-build\r\n            if (this.result === null) // (Re-)Build\r\n                this.result = this.ns.build();\r\n            if (!path)\r\n                return this.result;\r\n            var part = typeof path === 'string' ? path.split(\".\") : path,\r\n                ptr = this.result; // Build namespace pointer (no hasChild etc.)\r\n            for (var i=0; i<part.length; i++)\r\n                if (ptr[part[i]])\r\n                    ptr = ptr[part[i]];\r\n                else {\r\n                    ptr = null;\r\n                    break;\r\n                }\r\n            return ptr;\r\n        };\r\n\r\n        /**\r\n         * Similar to {@link ProtoBuf.Builder#build}, but looks up the internal reflection descriptor.\r\n         * @param {string=} path Specifies what to return. If omitted, the entire namespace wiil be returned.\r\n         * @param {boolean=} excludeNonNamespace Excludes non-namespace types like fields, defaults to `false`\r\n         * @returns {?ProtoBuf.Reflect.T} Reflection descriptor or `null` if not found\r\n         */\r\n        BuilderPrototype.lookup = function(path, excludeNonNamespace) {\r\n            return path ? this.ns.resolve(path, excludeNonNamespace) : this.ns;\r\n        };\r\n\r\n        /**\r\n         * Returns a string representation of this object.\r\n         * @return {string} String representation as of \"Builder\"\r\n         * @expose\r\n         */\r\n        BuilderPrototype.toString = function() {\r\n            return \"Builder\";\r\n        };\r\n\r\n        // ----- Base classes -----\r\n        // Exist for the sole purpose of being able to \"... instanceof ProtoBuf.Builder.Message\" etc.\r\n\r\n        /**\r\n         * @alias ProtoBuf.Builder.Message\r\n         */\r\n        Builder.Message = function() {};\r\n\r\n        /**\r\n         * @alias ProtoBuf.Builder.Enum\r\n         */\r\n        Builder.Enum = function() {};\r\n\r\n        /**\r\n         * @alias ProtoBuf.Builder.Message\r\n         */\r\n        Builder.Service = function() {};\r\n\r\n        return Builder;\r\n\r\n    })(ProtoBuf, ProtoBuf.Lang, ProtoBuf.Reflect);\r\n\r\n    /**\r\n     * @alias ProtoBuf.Map\r\n     * @expose\r\n     */\r\n    ProtoBuf.Map = (function(ProtoBuf, Reflect) {\r\n        \"use strict\";\r\n\r\n        /**\r\n         * Constructs a new Map. A Map is a container that is used to implement map\r\n         * fields on message objects. It closely follows the ES6 Map API; however,\r\n         * it is distinct because we do not want to depend on external polyfills or\r\n         * on ES6 itself.\r\n         *\r\n         * @exports ProtoBuf.Map\r\n         * @param {!ProtoBuf.Reflect.Field} field Map field\r\n         * @param {Object.<string,*>=} contents Initial contents\r\n         * @constructor\r\n         */\r\n        var Map = function(field, contents) {\r\n            if (!field.map)\r\n                throw Error(\"field is not a map\");\r\n\r\n            /**\r\n             * The field corresponding to this map.\r\n             * @type {!ProtoBuf.Reflect.Field}\r\n             */\r\n            this.field = field;\r\n\r\n            /**\r\n             * Element instance corresponding to key type.\r\n             * @type {!ProtoBuf.Reflect.Element}\r\n             */\r\n            this.keyElem = new Reflect.Element(field.keyType, null, true, field.syntax);\r\n\r\n            /**\r\n             * Element instance corresponding to value type.\r\n             * @type {!ProtoBuf.Reflect.Element}\r\n             */\r\n            this.valueElem = new Reflect.Element(field.type, field.resolvedType, false, field.syntax);\r\n\r\n            /**\r\n             * Internal map: stores mapping of (string form of key) -> (key, value)\r\n             * pair.\r\n             *\r\n             * We provide map semantics for arbitrary key types, but we build on top\r\n             * of an Object, which has only string keys. In order to avoid the need\r\n             * to convert a string key back to its native type in many situations,\r\n             * we store the native key value alongside the value. Thus, we only need\r\n             * a one-way mapping from a key type to its string form that guarantees\r\n             * uniqueness and equality (i.e., str(K1) === str(K2) if and only if K1\r\n             * === K2).\r\n             *\r\n             * @type {!Object<string, {key: *, value: *}>}\r\n             */\r\n            this.map = {};\r\n\r\n            /**\r\n             * Returns the number of elements in the map.\r\n             */\r\n            Object.defineProperty(this, \"size\", {\r\n                get: function() { return Object.keys(this.map).length; }\r\n            });\r\n\r\n            // Fill initial contents from a raw object.\r\n            if (contents) {\r\n                var keys = Object.keys(contents);\r\n                for (var i = 0; i < keys.length; i++) {\r\n                    var key = this.keyElem.valueFromString(keys[i]);\r\n                    var val = this.valueElem.verifyValue(contents[keys[i]]);\r\n                    this.map[this.keyElem.valueToString(key)] =\r\n                        { key: key, value: val };\r\n                }\r\n            }\r\n        };\r\n\r\n        var MapPrototype = Map.prototype;\r\n\r\n        /**\r\n         * Helper: return an iterator over an array.\r\n         * @param {!Array<*>} arr the array\r\n         * @returns {!Object} an iterator\r\n         * @inner\r\n         */\r\n        function arrayIterator(arr) {\r\n            var idx = 0;\r\n            return {\r\n                next: function() {\r\n                    if (idx < arr.length)\r\n                        return { done: false, value: arr[idx++] };\r\n                    return { done: true };\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Clears the map.\r\n         */\r\n        MapPrototype.clear = function() {\r\n            this.map = {};\r\n        };\r\n\r\n        /**\r\n         * Deletes a particular key from the map.\r\n         * @returns {boolean} Whether any entry with this key was deleted.\r\n         */\r\n        MapPrototype[\"delete\"] = function(key) {\r\n            var keyValue = this.keyElem.valueToString(this.keyElem.verifyValue(key));\r\n            var hadKey = keyValue in this.map;\r\n            delete this.map[keyValue];\r\n            return hadKey;\r\n        };\r\n\r\n        /**\r\n         * Returns an iterator over [key, value] pairs in the map.\r\n         * @returns {Object} The iterator\r\n         */\r\n        MapPrototype.entries = function() {\r\n            var entries = [];\r\n            var strKeys = Object.keys(this.map);\r\n            for (var i = 0, entry; i < strKeys.length; i++)\r\n                entries.push([(entry=this.map[strKeys[i]]).key, entry.value]);\r\n            return arrayIterator(entries);\r\n        };\r\n\r\n        /**\r\n         * Returns an iterator over keys in the map.\r\n         * @returns {Object} The iterator\r\n         */\r\n        MapPrototype.keys = function() {\r\n            var keys = [];\r\n            var strKeys = Object.keys(this.map);\r\n            for (var i = 0; i < strKeys.length; i++)\r\n                keys.push(this.map[strKeys[i]].key);\r\n            return arrayIterator(keys);\r\n        };\r\n\r\n        /**\r\n         * Returns an iterator over values in the map.\r\n         * @returns {!Object} The iterator\r\n         */\r\n        MapPrototype.values = function() {\r\n            var values = [];\r\n            var strKeys = Object.keys(this.map);\r\n            for (var i = 0; i < strKeys.length; i++)\r\n                values.push(this.map[strKeys[i]].value);\r\n            return arrayIterator(values);\r\n        };\r\n\r\n        /**\r\n         * Iterates over entries in the map, calling a function on each.\r\n         * @param {function(this:*, *, *, *)} cb The callback to invoke with value, key, and map arguments.\r\n         * @param {Object=} thisArg The `this` value for the callback\r\n         */\r\n        MapPrototype.forEach = function(cb, thisArg) {\r\n            var strKeys = Object.keys(this.map);\r\n            for (var i = 0, entry; i < strKeys.length; i++)\r\n                cb.call(thisArg, (entry=this.map[strKeys[i]]).value, entry.key, this);\r\n        };\r\n\r\n        /**\r\n         * Sets a key in the map to the given value.\r\n         * @param {*} key The key\r\n         * @param {*} value The value\r\n         * @returns {!ProtoBuf.Map} The map instance\r\n         */\r\n        MapPrototype.set = function(key, value) {\r\n            var keyValue = this.keyElem.verifyValue(key);\r\n            var valValue = this.valueElem.verifyValue(value);\r\n            this.map[this.keyElem.valueToString(keyValue)] =\r\n                { key: keyValue, value: valValue };\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * Gets the value corresponding to a key in the map.\r\n         * @param {*} key The key\r\n         * @returns {*|undefined} The value, or `undefined` if key not present\r\n         */\r\n        MapPrototype.get = function(key) {\r\n            var keyValue = this.keyElem.valueToString(this.keyElem.verifyValue(key));\r\n            if (!(keyValue in this.map))\r\n                return undefined;\r\n            return this.map[keyValue].value;\r\n        };\r\n\r\n        /**\r\n         * Determines whether the given key is present in the map.\r\n         * @param {*} key The key\r\n         * @returns {boolean} `true` if the key is present\r\n         */\r\n        MapPrototype.has = function(key) {\r\n            var keyValue = this.keyElem.valueToString(this.keyElem.verifyValue(key));\r\n            return (keyValue in this.map);\r\n        };\r\n\r\n        return Map;\r\n    })(ProtoBuf, ProtoBuf.Reflect);\r\n\r\n\r\n    /**\r\n     * Loads a .proto string and returns the Builder.\r\n     * @param {string} proto .proto file contents\r\n     * @param {(ProtoBuf.Builder|string|{root: string, file: string})=} builder Builder to append to. Will create a new one if omitted.\r\n     * @param {(string|{root: string, file: string})=} filename The corresponding file name if known. Must be specified for imports.\r\n     * @return {ProtoBuf.Builder} Builder to create new messages\r\n     * @throws {Error} If the definition cannot be parsed or built\r\n     * @expose\r\n     */\r\n    ProtoBuf.loadProto = function(proto, builder, filename) {\r\n        if (typeof builder === 'string' || (builder && typeof builder[\"file\"] === 'string' && typeof builder[\"root\"] === 'string'))\r\n            filename = builder,\r\n            builder = undefined;\r\n        return ProtoBuf.loadJson(ProtoBuf.DotProto.Parser.parse(proto), builder, filename);\r\n    };\r\n\r\n    /**\r\n     * Loads a .proto string and returns the Builder. This is an alias of {@link ProtoBuf.loadProto}.\r\n     * @function\r\n     * @param {string} proto .proto file contents\r\n     * @param {(ProtoBuf.Builder|string)=} builder Builder to append to. Will create a new one if omitted.\r\n     * @param {(string|{root: string, file: string})=} filename The corresponding file name if known. Must be specified for imports.\r\n     * @return {ProtoBuf.Builder} Builder to create new messages\r\n     * @throws {Error} If the definition cannot be parsed or built\r\n     * @expose\r\n     */\r\n    ProtoBuf.protoFromString = ProtoBuf.loadProto; // Legacy\r\n\r\n    /**\r\n     * Loads a .proto file and returns the Builder.\r\n     * @param {string|{root: string, file: string}} filename Path to proto file or an object specifying 'file' with\r\n     *  an overridden 'root' path for all imported files.\r\n     * @param {function(?Error, !ProtoBuf.Builder=)=} callback Callback that will receive `null` as the first and\r\n     *  the Builder as its second argument on success, otherwise the error as its first argument. If omitted, the\r\n     *  file will be read synchronously and this function will return the Builder.\r\n     * @param {ProtoBuf.Builder=} builder Builder to append to. Will create a new one if omitted.\r\n     * @return {?ProtoBuf.Builder|undefined} The Builder if synchronous (no callback specified, will be NULL if the\r\n     *   request has failed), else undefined\r\n     * @expose\r\n     */\r\n    ProtoBuf.loadProtoFile = function(filename, callback, builder) {\r\n        if (callback && typeof callback === 'object')\r\n            builder = callback,\r\n            callback = null;\r\n        else if (!callback || typeof callback !== 'function')\r\n            callback = null;\r\n        if (callback)\r\n            return ProtoBuf.Util.fetch(typeof filename === 'string' ? filename : filename[\"root\"]+\"/\"+filename[\"file\"], function(contents) {\r\n                if (contents === null) {\r\n                    callback(Error(\"Failed to fetch file\"));\r\n                    return;\r\n                }\r\n                try {\r\n                    callback(null, ProtoBuf.loadProto(contents, builder, filename));\r\n                } catch (e) {\r\n                    callback(e);\r\n                }\r\n            });\r\n        var contents = ProtoBuf.Util.fetch(typeof filename === 'object' ? filename[\"root\"]+\"/\"+filename[\"file\"] : filename);\r\n        return contents === null ? null : ProtoBuf.loadProto(contents, builder, filename);\r\n    };\r\n\r\n    /**\r\n     * Loads a .proto file and returns the Builder. This is an alias of {@link ProtoBuf.loadProtoFile}.\r\n     * @function\r\n     * @param {string|{root: string, file: string}} filename Path to proto file or an object specifying 'file' with\r\n     *  an overridden 'root' path for all imported files.\r\n     * @param {function(?Error, !ProtoBuf.Builder=)=} callback Callback that will receive `null` as the first and\r\n     *  the Builder as its second argument on success, otherwise the error as its first argument. If omitted, the\r\n     *  file will be read synchronously and this function will return the Builder.\r\n     * @param {ProtoBuf.Builder=} builder Builder to append to. Will create a new one if omitted.\r\n     * @return {!ProtoBuf.Builder|undefined} The Builder if synchronous (no callback specified, will be NULL if the\r\n     *   request has failed), else undefined\r\n     * @expose\r\n     */\r\n    ProtoBuf.protoFromFile = ProtoBuf.loadProtoFile; // Legacy\r\n\r\n\r\n    /**\r\n     * Constructs a new empty Builder.\r\n     * @param {Object.<string,*>=} options Builder options, defaults to global options set on ProtoBuf\r\n     * @return {!ProtoBuf.Builder} Builder\r\n     * @expose\r\n     */\r\n    ProtoBuf.newBuilder = function(options) {\r\n        options = options || {};\r\n        if (typeof options['convertFieldsToCamelCase'] === 'undefined')\r\n            options['convertFieldsToCamelCase'] = ProtoBuf.convertFieldsToCamelCase;\r\n        if (typeof options['populateAccessors'] === 'undefined')\r\n            options['populateAccessors'] = ProtoBuf.populateAccessors;\r\n        return new ProtoBuf.Builder(options);\r\n    };\r\n\r\n    /**\r\n     * Loads a .json definition and returns the Builder.\r\n     * @param {!*|string} json JSON definition\r\n     * @param {(ProtoBuf.Builder|string|{root: string, file: string})=} builder Builder to append to. Will create a new one if omitted.\r\n     * @param {(string|{root: string, file: string})=} filename The corresponding file name if known. Must be specified for imports.\r\n     * @return {ProtoBuf.Builder} Builder to create new messages\r\n     * @throws {Error} If the definition cannot be parsed or built\r\n     * @expose\r\n     */\r\n    ProtoBuf.loadJson = function(json, builder, filename) {\r\n        if (typeof builder === 'string' || (builder && typeof builder[\"file\"] === 'string' && typeof builder[\"root\"] === 'string'))\r\n            filename = builder,\r\n            builder = null;\r\n        if (!builder || typeof builder !== 'object')\r\n            builder = ProtoBuf.newBuilder();\r\n        if (typeof json === 'string')\r\n            json = JSON.parse(json);\r\n        builder[\"import\"](json, filename);\r\n        builder.resolveAll();\r\n        return builder;\r\n    };\r\n\r\n    /**\r\n     * Loads a .json file and returns the Builder.\r\n     * @param {string|!{root: string, file: string}} filename Path to json file or an object specifying 'file' with\r\n     *  an overridden 'root' path for all imported files.\r\n     * @param {function(?Error, !ProtoBuf.Builder=)=} callback Callback that will receive `null` as the first and\r\n     *  the Builder as its second argument on success, otherwise the error as its first argument. If omitted, the\r\n     *  file will be read synchronously and this function will return the Builder.\r\n     * @param {ProtoBuf.Builder=} builder Builder to append to. Will create a new one if omitted.\r\n     * @return {?ProtoBuf.Builder|undefined} The Builder if synchronous (no callback specified, will be NULL if the\r\n     *   request has failed), else undefined\r\n     * @expose\r\n     */\r\n    ProtoBuf.loadJsonFile = function(filename, callback, builder) {\r\n        if (callback && typeof callback === 'object')\r\n            builder = callback,\r\n            callback = null;\r\n        else if (!callback || typeof callback !== 'function')\r\n            callback = null;\r\n        if (callback)\r\n            return ProtoBuf.Util.fetch(typeof filename === 'string' ? filename : filename[\"root\"]+\"/\"+filename[\"file\"], function(contents) {\r\n                if (contents === null) {\r\n                    callback(Error(\"Failed to fetch file\"));\r\n                    return;\r\n                }\r\n                try {\r\n                    callback(null, ProtoBuf.loadJson(JSON.parse(contents), builder, filename));\r\n                } catch (e) {\r\n                    callback(e);\r\n                }\r\n            });\r\n        var contents = ProtoBuf.Util.fetch(typeof filename === 'object' ? filename[\"root\"]+\"/\"+filename[\"file\"] : filename);\r\n        return contents === null ? null : ProtoBuf.loadJson(JSON.parse(contents), builder, filename);\r\n    };\r\n\r\n    return ProtoBuf;\r\n});\r\n","// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/*\r\n Copyright 2013-2014 Daniel Wirtz <dcode@dcode.io>\r\n\r\n Licensed under the Apache License, Version 2.0 (the \"License\");\r\n you may not use this file except in compliance with the License.\r\n You may obtain a copy of the License at\r\n\r\n http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n Unless required by applicable law or agreed to in writing, software\r\n distributed under the License is distributed on an \"AS IS\" BASIS,\r\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n See the License for the specific language governing permissions and\r\n limitations under the License.\r\n */\r\n\r\n/**\r\n * @license bytebuffer.js (c) 2015 Daniel Wirtz <dcode@dcode.io>\r\n * Backing buffer: ArrayBuffer, Accessor: Uint8Array\r\n * Released under the Apache License, Version 2.0\r\n * see: https://github.com/dcodeIO/bytebuffer.js for details\r\n */\r\n(function(global, factory) {\r\n\r\n    /* AMD */ if (typeof define === 'function' && define[\"amd\"])\r\n        define([\"long\"], factory);\r\n    /* CommonJS */ else if (typeof require === 'function' && typeof module === \"object\" && module && module[\"exports\"])\r\n        module['exports'] = (function() {\r\n            var Long; try { Long = require(\"long\"); } catch (e) {}\r\n            return factory(Long);\r\n        })();\r\n    /* Global */ else\r\n        (global[\"dcodeIO\"] = global[\"dcodeIO\"] || {})[\"ByteBuffer\"] = factory(global[\"dcodeIO\"][\"Long\"]);\r\n\r\n})(this, function(Long) {\r\n    \"use strict\";\r\n\r\n    /**\r\n     * Constructs a new ByteBuffer.\r\n     * @class The swiss army knife for binary data in JavaScript.\r\n     * @exports ByteBuffer\r\n     * @constructor\r\n     * @param {number=} capacity Initial capacity. Defaults to {@link ByteBuffer.DEFAULT_CAPACITY}.\r\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_ENDIAN}.\r\n     * @param {boolean=} noAssert Whether to skip assertions of offsets and values. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_NOASSERT}.\r\n     * @expose\r\n     */\r\n    var ByteBuffer = function(capacity, littleEndian, noAssert) {\r\n        if (typeof capacity === 'undefined')\r\n            capacity = ByteBuffer.DEFAULT_CAPACITY;\r\n        if (typeof littleEndian === 'undefined')\r\n            littleEndian = ByteBuffer.DEFAULT_ENDIAN;\r\n        if (typeof noAssert === 'undefined')\r\n            noAssert = ByteBuffer.DEFAULT_NOASSERT;\r\n        if (!noAssert) {\r\n            capacity = capacity | 0;\r\n            if (capacity < 0)\r\n                throw RangeError(\"Illegal capacity\");\r\n            littleEndian = !!littleEndian;\r\n            noAssert = !!noAssert;\r\n        }\r\n\r\n        /**\r\n         * Backing ArrayBuffer.\r\n         * @type {!ArrayBuffer}\r\n         * @expose\r\n         */\r\n        this.buffer = capacity === 0 ? EMPTY_BUFFER : new ArrayBuffer(capacity);\r\n\r\n        /**\r\n         * Uint8Array utilized to manipulate the backing buffer. Becomes `null` if the backing buffer has a capacity of `0`.\r\n         * @type {?Uint8Array}\r\n         * @expose\r\n         */\r\n        this.view = capacity === 0 ? null : new Uint8Array(this.buffer);\r\n\r\n        /**\r\n         * Absolute read/write offset.\r\n         * @type {number}\r\n         * @expose\r\n         * @see ByteBuffer#flip\r\n         * @see ByteBuffer#clear\r\n         */\r\n        this.offset = 0;\r\n\r\n        /**\r\n         * Marked offset.\r\n         * @type {number}\r\n         * @expose\r\n         * @see ByteBuffer#mark\r\n         * @see ByteBuffer#reset\r\n         */\r\n        this.markedOffset = -1;\r\n\r\n        /**\r\n         * Absolute limit of the contained data. Set to the backing buffer's capacity upon allocation.\r\n         * @type {number}\r\n         * @expose\r\n         * @see ByteBuffer#flip\r\n         * @see ByteBuffer#clear\r\n         */\r\n        this.limit = capacity;\r\n\r\n        /**\r\n         * Whether to use little endian byte order, defaults to `false` for big endian.\r\n         * @type {boolean}\r\n         * @expose\r\n         */\r\n        this.littleEndian = typeof littleEndian !== 'undefined' ? !!littleEndian : false;\r\n\r\n        /**\r\n         * Whether to skip assertions of offsets and values, defaults to `false`.\r\n         * @type {boolean}\r\n         * @expose\r\n         */\r\n        this.noAssert = !!noAssert;\r\n    };\r\n\r\n    /**\r\n     * ByteBuffer version.\r\n     * @type {string}\r\n     * @const\r\n     * @expose\r\n     */\r\n    ByteBuffer.VERSION = \"5.0.0\";\r\n\r\n    /**\r\n     * Little endian constant that can be used instead of its boolean value. Evaluates to `true`.\r\n     * @type {boolean}\r\n     * @const\r\n     * @expose\r\n     */\r\n    ByteBuffer.LITTLE_ENDIAN = true;\r\n\r\n    /**\r\n     * Big endian constant that can be used instead of its boolean value. Evaluates to `false`.\r\n     * @type {boolean}\r\n     * @const\r\n     * @expose\r\n     */\r\n    ByteBuffer.BIG_ENDIAN = false;\r\n\r\n    /**\r\n     * Default initial capacity of `16`.\r\n     * @type {number}\r\n     * @expose\r\n     */\r\n    ByteBuffer.DEFAULT_CAPACITY = 16;\r\n\r\n    /**\r\n     * Default endianess of `false` for big endian.\r\n     * @type {boolean}\r\n     * @expose\r\n     */\r\n    ByteBuffer.DEFAULT_ENDIAN = ByteBuffer.BIG_ENDIAN;\r\n\r\n    /**\r\n     * Default no assertions flag of `false`.\r\n     * @type {boolean}\r\n     * @expose\r\n     */\r\n    ByteBuffer.DEFAULT_NOASSERT = false;\r\n\r\n    /**\r\n     * A `Long` class for representing a 64-bit two's-complement integer value. May be `null` if Long.js has not been loaded\r\n     *  and int64 support is not available.\r\n     * @type {?Long}\r\n     * @const\r\n     * @see https://github.com/dcodeIO/Long.js\r\n     * @expose\r\n     */\r\n    ByteBuffer.Long = Long || null;\r\n\r\n    /**\r\n     * @alias ByteBuffer.prototype\r\n     * @inner\r\n     */\r\n    var ByteBufferPrototype = ByteBuffer.prototype;\r\n\r\n    /**\r\n     * An indicator used to reliably determine if an object is a ByteBuffer or not.\r\n     * @type {boolean}\r\n     * @const\r\n     * @expose\r\n     * @private\r\n     */\r\n    ByteBufferPrototype.__isByteBuffer__;\r\n\r\n    Object.defineProperty(ByteBufferPrototype, \"__isByteBuffer__\", {\r\n        value: true,\r\n        enumerable: false,\r\n        configurable: false\r\n    });\r\n\r\n    // helpers\r\n\r\n    /**\r\n     * @type {!ArrayBuffer}\r\n     * @inner\r\n     */\r\n    var EMPTY_BUFFER = new ArrayBuffer(0);\r\n\r\n    /**\r\n     * String.fromCharCode reference for compile-time renaming.\r\n     * @type {function(...number):string}\r\n     * @inner\r\n     */\r\n    var stringFromCharCode = String.fromCharCode;\r\n\r\n    /**\r\n     * Creates a source function for a string.\r\n     * @param {string} s String to read from\r\n     * @returns {function():number|null} Source function returning the next char code respectively `null` if there are\r\n     *  no more characters left.\r\n     * @throws {TypeError} If the argument is invalid\r\n     * @inner\r\n     */\r\n    function stringSource(s) {\r\n        var i=0; return function() {\r\n            return i < s.length ? s.charCodeAt(i++) : null;\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Creates a destination function for a string.\r\n     * @returns {function(number=):undefined|string} Destination function successively called with the next char code.\r\n     *  Returns the final string when called without arguments.\r\n     * @inner\r\n     */\r\n    function stringDestination() {\r\n        var cs = [], ps = []; return function() {\r\n            if (arguments.length === 0)\r\n                return ps.join('')+stringFromCharCode.apply(String, cs);\r\n            if (cs.length + arguments.length > 1024)\r\n                ps.push(stringFromCharCode.apply(String, cs)),\r\n                    cs.length = 0;\r\n            Array.prototype.push.apply(cs, arguments);\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Gets the accessor type.\r\n     * @returns {Function} `Buffer` under node.js, `Uint8Array` respectively `DataView` in the browser (classes)\r\n     * @expose\r\n     */\r\n    ByteBuffer.accessor = function() {\r\n        return Uint8Array;\r\n    };\r\n    /**\r\n     * Allocates a new ByteBuffer backed by a buffer of the specified capacity.\r\n     * @param {number=} capacity Initial capacity. Defaults to {@link ByteBuffer.DEFAULT_CAPACITY}.\r\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_ENDIAN}.\r\n     * @param {boolean=} noAssert Whether to skip assertions of offsets and values. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_NOASSERT}.\r\n     * @returns {!ByteBuffer}\r\n     * @expose\r\n     */\r\n    ByteBuffer.allocate = function(capacity, littleEndian, noAssert) {\r\n        return new ByteBuffer(capacity, littleEndian, noAssert);\r\n    };\r\n\r\n    /**\r\n     * Concatenates multiple ByteBuffers into one.\r\n     * @param {!Array.<!ByteBuffer|!ArrayBuffer|!Uint8Array|string>} buffers Buffers to concatenate\r\n     * @param {(string|boolean)=} encoding String encoding if `buffers` contains a string (\"base64\", \"hex\", \"binary\",\r\n     *  defaults to \"utf8\")\r\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order for the resulting ByteBuffer. Defaults\r\n     *  to {@link ByteBuffer.DEFAULT_ENDIAN}.\r\n     * @param {boolean=} noAssert Whether to skip assertions of offsets and values for the resulting ByteBuffer. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_NOASSERT}.\r\n     * @returns {!ByteBuffer} Concatenated ByteBuffer\r\n     * @expose\r\n     */\r\n    ByteBuffer.concat = function(buffers, encoding, littleEndian, noAssert) {\r\n        if (typeof encoding === 'boolean' || typeof encoding !== 'string') {\r\n            noAssert = littleEndian;\r\n            littleEndian = encoding;\r\n            encoding = undefined;\r\n        }\r\n        var capacity = 0;\r\n        for (var i=0, k=buffers.length, length; i<k; ++i) {\r\n            if (!ByteBuffer.isByteBuffer(buffers[i]))\r\n                buffers[i] = ByteBuffer.wrap(buffers[i], encoding);\r\n            length = buffers[i].limit - buffers[i].offset;\r\n            if (length > 0) capacity += length;\r\n        }\r\n        if (capacity === 0)\r\n            return new ByteBuffer(0, littleEndian, noAssert);\r\n        var bb = new ByteBuffer(capacity, littleEndian, noAssert),\r\n            bi;\r\n        i=0; while (i<k) {\r\n            bi = buffers[i++];\r\n            length = bi.limit - bi.offset;\r\n            if (length <= 0) continue;\r\n            bb.view.set(bi.view.subarray(bi.offset, bi.limit), bb.offset);\r\n            bb.offset += length;\r\n        }\r\n        bb.limit = bb.offset;\r\n        bb.offset = 0;\r\n        return bb;\r\n    };\r\n\r\n    /**\r\n     * Tests if the specified type is a ByteBuffer.\r\n     * @param {*} bb ByteBuffer to test\r\n     * @returns {boolean} `true` if it is a ByteBuffer, otherwise `false`\r\n     * @expose\r\n     */\r\n    ByteBuffer.isByteBuffer = function(bb) {\r\n        return (bb && bb[\"__isByteBuffer__\"]) === true;\r\n    };\r\n    /**\r\n     * Gets the backing buffer type.\r\n     * @returns {Function} `Buffer` under node.js, `ArrayBuffer` in the browser (classes)\r\n     * @expose\r\n     */\r\n    ByteBuffer.type = function() {\r\n        return ArrayBuffer;\r\n    };\r\n    /**\r\n     * Wraps a buffer or a string. Sets the allocated ByteBuffer's {@link ByteBuffer#offset} to `0` and its\r\n     *  {@link ByteBuffer#limit} to the length of the wrapped data.\r\n     * @param {!ByteBuffer|!ArrayBuffer|!Uint8Array|string|!Array.<number>} buffer Anything that can be wrapped\r\n     * @param {(string|boolean)=} encoding String encoding if `buffer` is a string (\"base64\", \"hex\", \"binary\", defaults to\r\n     *  \"utf8\")\r\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_ENDIAN}.\r\n     * @param {boolean=} noAssert Whether to skip assertions of offsets and values. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_NOASSERT}.\r\n     * @returns {!ByteBuffer} A ByteBuffer wrapping `buffer`\r\n     * @expose\r\n     */\r\n    ByteBuffer.wrap = function(buffer, encoding, littleEndian, noAssert) {\r\n        if (typeof encoding !== 'string') {\r\n            noAssert = littleEndian;\r\n            littleEndian = encoding;\r\n            encoding = undefined;\r\n        }\r\n        if (typeof buffer === 'string') {\r\n            if (typeof encoding === 'undefined')\r\n                encoding = \"utf8\";\r\n            switch (encoding) {\r\n                case \"base64\":\r\n                    return ByteBuffer.fromBase64(buffer, littleEndian);\r\n                case \"hex\":\r\n                    return ByteBuffer.fromHex(buffer, littleEndian);\r\n                case \"binary\":\r\n                    return ByteBuffer.fromBinary(buffer, littleEndian);\r\n                case \"utf8\":\r\n                    return ByteBuffer.fromUTF8(buffer, littleEndian);\r\n                case \"debug\":\r\n                    return ByteBuffer.fromDebug(buffer, littleEndian);\r\n                default:\r\n                    throw Error(\"Unsupported encoding: \"+encoding);\r\n            }\r\n        }\r\n        if (buffer === null || typeof buffer !== 'object')\r\n            throw TypeError(\"Illegal buffer\");\r\n        var bb;\r\n        if (ByteBuffer.isByteBuffer(buffer)) {\r\n            bb = ByteBufferPrototype.clone.call(buffer);\r\n            bb.markedOffset = -1;\r\n            return bb;\r\n        }\r\n        if (buffer instanceof Uint8Array) { // Extract ArrayBuffer from Uint8Array\r\n            bb = new ByteBuffer(0, littleEndian, noAssert);\r\n            if (buffer.length > 0) { // Avoid references to more than one EMPTY_BUFFER\r\n                bb.buffer = buffer.buffer;\r\n                bb.offset = buffer.byteOffset;\r\n                bb.limit = buffer.byteOffset + buffer.byteLength;\r\n                bb.view = new Uint8Array(buffer.buffer);\r\n            }\r\n        } else if (buffer instanceof ArrayBuffer) { // Reuse ArrayBuffer\r\n            bb = new ByteBuffer(0, littleEndian, noAssert);\r\n            if (buffer.byteLength > 0) {\r\n                bb.buffer = buffer;\r\n                bb.offset = 0;\r\n                bb.limit = buffer.byteLength;\r\n                bb.view = buffer.byteLength > 0 ? new Uint8Array(buffer) : null;\r\n            }\r\n        } else if (Object.prototype.toString.call(buffer) === \"[object Array]\") { // Create from octets\r\n            bb = new ByteBuffer(buffer.length, littleEndian, noAssert);\r\n            bb.limit = buffer.length;\r\n            for (var i=0; i<buffer.length; ++i)\r\n                bb.view[i] = buffer[i];\r\n        } else\r\n            throw TypeError(\"Illegal buffer\"); // Otherwise fail\r\n        return bb;\r\n    };\r\n\r\n    /**\r\n     * Reads the specified number of bytes.\r\n     * @param {number} length Number of bytes to read\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `length` if omitted.\r\n     * @returns {!ByteBuffer}\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readBytes = function(length, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + length > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+length+\") <= \"+this.buffer.byteLength);\n        }\r\n        var slice = this.slice(offset, offset + length);\r\n        if (relative) this.offset += length;\n        return slice;\r\n    };\r\n\r\n    /**\r\n     * Writes a payload of bytes. This is an alias of {@link ByteBuffer#append}.\r\n     * @function\r\n     * @param {!ByteBuffer|!ArrayBuffer|!Uint8Array|string} source Data to write. If `source` is a ByteBuffer, its offsets\r\n     *  will be modified according to the performed read operation.\r\n     * @param {(string|number)=} encoding Encoding if `data` is a string (\"base64\", \"hex\", \"binary\", defaults to \"utf8\")\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  written if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeBytes = ByteBufferPrototype.append;\r\n\r\n    // types/ints/int8\r\n\r\n    /**\r\n     * Writes an 8bit signed integer.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeInt8 = function(value, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof value !== 'number' || value % 1 !== 0)\n                throw TypeError(\"Illegal value: \"+value+\" (not an integer)\");\n            value |= 0;\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n        }\r\n        offset += 1;\n        var capacity0 = this.buffer.byteLength;\n        if (offset > capacity0)\n            this.resize((capacity0 *= 2) > offset ? capacity0 : offset);\n        offset -= 1;\n        this.view[offset] = value;\r\n        if (relative) this.offset += 1;\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Writes an 8bit signed integer. This is an alias of {@link ByteBuffer#writeInt8}.\r\n     * @function\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeByte = ByteBufferPrototype.writeInt8;\r\n\r\n    /**\r\n     * Reads an 8bit signed integer.\r\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.\r\n     * @returns {number} Value read\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readInt8 = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 1 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+1+\") <= \"+this.buffer.byteLength);\n        }\r\n        var value = this.view[offset];\r\n        if ((value & 0x80) === 0x80) value = -(0xFF - value + 1); // Cast to signed\r\n        if (relative) this.offset += 1;\n        return value;\r\n    };\r\n\r\n    /**\r\n     * Reads an 8bit signed integer. This is an alias of {@link ByteBuffer#readInt8}.\r\n     * @function\r\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.\r\n     * @returns {number} Value read\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readByte = ByteBufferPrototype.readInt8;\r\n\r\n    /**\r\n     * Writes an 8bit unsigned integer.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeUint8 = function(value, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof value !== 'number' || value % 1 !== 0)\n                throw TypeError(\"Illegal value: \"+value+\" (not an integer)\");\n            value >>>= 0;\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n        }\r\n        offset += 1;\n        var capacity1 = this.buffer.byteLength;\n        if (offset > capacity1)\n            this.resize((capacity1 *= 2) > offset ? capacity1 : offset);\n        offset -= 1;\n        this.view[offset] = value;\r\n        if (relative) this.offset += 1;\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Writes an 8bit unsigned integer. This is an alias of {@link ByteBuffer#writeUint8}.\r\n     * @function\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeUInt8 = ByteBufferPrototype.writeUint8;\r\n\r\n    /**\r\n     * Reads an 8bit unsigned integer.\r\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.\r\n     * @returns {number} Value read\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readUint8 = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 1 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+1+\") <= \"+this.buffer.byteLength);\n        }\r\n        var value = this.view[offset];\r\n        if (relative) this.offset += 1;\n        return value;\r\n    };\r\n\r\n    /**\r\n     * Reads an 8bit unsigned integer. This is an alias of {@link ByteBuffer#readUint8}.\r\n     * @function\r\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.\r\n     * @returns {number} Value read\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readUInt8 = ByteBufferPrototype.readUint8;\r\n\r\n    // types/ints/int16\r\n\r\n    /**\r\n     * Writes a 16bit signed integer.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.\r\n     * @throws {TypeError} If `offset` or `value` is not a valid number\r\n     * @throws {RangeError} If `offset` is out of bounds\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeInt16 = function(value, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof value !== 'number' || value % 1 !== 0)\n                throw TypeError(\"Illegal value: \"+value+\" (not an integer)\");\n            value |= 0;\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n        }\r\n        offset += 2;\n        var capacity2 = this.buffer.byteLength;\n        if (offset > capacity2)\n            this.resize((capacity2 *= 2) > offset ? capacity2 : offset);\n        offset -= 2;\n        if (this.littleEndian) {\r\n            this.view[offset+1] = (value & 0xFF00) >>> 8;\r\n            this.view[offset  ] =  value & 0x00FF;\r\n        } else {\r\n            this.view[offset]   = (value & 0xFF00) >>> 8;\r\n            this.view[offset+1] =  value & 0x00FF;\r\n        }\r\n        if (relative) this.offset += 2;\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Writes a 16bit signed integer. This is an alias of {@link ByteBuffer#writeInt16}.\r\n     * @function\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.\r\n     * @throws {TypeError} If `offset` or `value` is not a valid number\r\n     * @throws {RangeError} If `offset` is out of bounds\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeShort = ByteBufferPrototype.writeInt16;\r\n\r\n    /**\r\n     * Reads a 16bit signed integer.\r\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.\r\n     * @returns {number} Value read\r\n     * @throws {TypeError} If `offset` is not a valid number\r\n     * @throws {RangeError} If `offset` is out of bounds\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readInt16 = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 2 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+2+\") <= \"+this.buffer.byteLength);\n        }\r\n        var value = 0;\r\n        if (this.littleEndian) {\r\n            value  = this.view[offset  ];\r\n            value |= this.view[offset+1] << 8;\r\n        } else {\r\n            value  = this.view[offset  ] << 8;\r\n            value |= this.view[offset+1];\r\n        }\r\n        if ((value & 0x8000) === 0x8000) value = -(0xFFFF - value + 1); // Cast to signed\r\n        if (relative) this.offset += 2;\n        return value;\r\n    };\r\n\r\n    /**\r\n     * Reads a 16bit signed integer. This is an alias of {@link ByteBuffer#readInt16}.\r\n     * @function\r\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.\r\n     * @returns {number} Value read\r\n     * @throws {TypeError} If `offset` is not a valid number\r\n     * @throws {RangeError} If `offset` is out of bounds\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readShort = ByteBufferPrototype.readInt16;\r\n\r\n    /**\r\n     * Writes a 16bit unsigned integer.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.\r\n     * @throws {TypeError} If `offset` or `value` is not a valid number\r\n     * @throws {RangeError} If `offset` is out of bounds\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeUint16 = function(value, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof value !== 'number' || value % 1 !== 0)\n                throw TypeError(\"Illegal value: \"+value+\" (not an integer)\");\n            value >>>= 0;\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n        }\r\n        offset += 2;\n        var capacity3 = this.buffer.byteLength;\n        if (offset > capacity3)\n            this.resize((capacity3 *= 2) > offset ? capacity3 : offset);\n        offset -= 2;\n        if (this.littleEndian) {\r\n            this.view[offset+1] = (value & 0xFF00) >>> 8;\r\n            this.view[offset  ] =  value & 0x00FF;\r\n        } else {\r\n            this.view[offset]   = (value & 0xFF00) >>> 8;\r\n            this.view[offset+1] =  value & 0x00FF;\r\n        }\r\n        if (relative) this.offset += 2;\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Writes a 16bit unsigned integer. This is an alias of {@link ByteBuffer#writeUint16}.\r\n     * @function\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.\r\n     * @throws {TypeError} If `offset` or `value` is not a valid number\r\n     * @throws {RangeError} If `offset` is out of bounds\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeUInt16 = ByteBufferPrototype.writeUint16;\r\n\r\n    /**\r\n     * Reads a 16bit unsigned integer.\r\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.\r\n     * @returns {number} Value read\r\n     * @throws {TypeError} If `offset` is not a valid number\r\n     * @throws {RangeError} If `offset` is out of bounds\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readUint16 = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 2 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+2+\") <= \"+this.buffer.byteLength);\n        }\r\n        var value = 0;\r\n        if (this.littleEndian) {\r\n            value  = this.view[offset  ];\r\n            value |= this.view[offset+1] << 8;\r\n        } else {\r\n            value  = this.view[offset  ] << 8;\r\n            value |= this.view[offset+1];\r\n        }\r\n        if (relative) this.offset += 2;\n        return value;\r\n    };\r\n\r\n    /**\r\n     * Reads a 16bit unsigned integer. This is an alias of {@link ByteBuffer#readUint16}.\r\n     * @function\r\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.\r\n     * @returns {number} Value read\r\n     * @throws {TypeError} If `offset` is not a valid number\r\n     * @throws {RangeError} If `offset` is out of bounds\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readUInt16 = ByteBufferPrototype.readUint16;\r\n\r\n    // types/ints/int32\r\n\r\n    /**\r\n     * Writes a 32bit signed integer.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeInt32 = function(value, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof value !== 'number' || value % 1 !== 0)\n                throw TypeError(\"Illegal value: \"+value+\" (not an integer)\");\n            value |= 0;\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n        }\r\n        offset += 4;\n        var capacity4 = this.buffer.byteLength;\n        if (offset > capacity4)\n            this.resize((capacity4 *= 2) > offset ? capacity4 : offset);\n        offset -= 4;\n        if (this.littleEndian) {\n            this.view[offset+3] = (value >>> 24) & 0xFF;\n            this.view[offset+2] = (value >>> 16) & 0xFF;\n            this.view[offset+1] = (value >>>  8) & 0xFF;\n            this.view[offset  ] =  value         & 0xFF;\n        } else {\n            this.view[offset  ] = (value >>> 24) & 0xFF;\n            this.view[offset+1] = (value >>> 16) & 0xFF;\n            this.view[offset+2] = (value >>>  8) & 0xFF;\n            this.view[offset+3] =  value         & 0xFF;\n        }\n        if (relative) this.offset += 4;\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Writes a 32bit signed integer. This is an alias of {@link ByteBuffer#writeInt32}.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeInt = ByteBufferPrototype.writeInt32;\r\n\r\n    /**\r\n     * Reads a 32bit signed integer.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @returns {number} Value read\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readInt32 = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 4 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+4+\") <= \"+this.buffer.byteLength);\n        }\r\n        var value = 0;\r\n        if (this.littleEndian) {\n            value  = this.view[offset+2] << 16;\n            value |= this.view[offset+1] <<  8;\n            value |= this.view[offset  ];\n            value += this.view[offset+3] << 24 >>> 0;\n        } else {\n            value  = this.view[offset+1] << 16;\n            value |= this.view[offset+2] <<  8;\n            value |= this.view[offset+3];\n            value += this.view[offset  ] << 24 >>> 0;\n        }\n        value |= 0; // Cast to signed\r\n        if (relative) this.offset += 4;\n        return value;\r\n    };\r\n\r\n    /**\r\n     * Reads a 32bit signed integer. This is an alias of {@link ByteBuffer#readInt32}.\r\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @returns {number} Value read\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readInt = ByteBufferPrototype.readInt32;\r\n\r\n    /**\r\n     * Writes a 32bit unsigned integer.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeUint32 = function(value, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof value !== 'number' || value % 1 !== 0)\n                throw TypeError(\"Illegal value: \"+value+\" (not an integer)\");\n            value >>>= 0;\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n        }\r\n        offset += 4;\n        var capacity5 = this.buffer.byteLength;\n        if (offset > capacity5)\n            this.resize((capacity5 *= 2) > offset ? capacity5 : offset);\n        offset -= 4;\n        if (this.littleEndian) {\n            this.view[offset+3] = (value >>> 24) & 0xFF;\n            this.view[offset+2] = (value >>> 16) & 0xFF;\n            this.view[offset+1] = (value >>>  8) & 0xFF;\n            this.view[offset  ] =  value         & 0xFF;\n        } else {\n            this.view[offset  ] = (value >>> 24) & 0xFF;\n            this.view[offset+1] = (value >>> 16) & 0xFF;\n            this.view[offset+2] = (value >>>  8) & 0xFF;\n            this.view[offset+3] =  value         & 0xFF;\n        }\n        if (relative) this.offset += 4;\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Writes a 32bit unsigned integer. This is an alias of {@link ByteBuffer#writeUint32}.\r\n     * @function\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeUInt32 = ByteBufferPrototype.writeUint32;\r\n\r\n    /**\r\n     * Reads a 32bit unsigned integer.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @returns {number} Value read\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readUint32 = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 4 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+4+\") <= \"+this.buffer.byteLength);\n        }\r\n        var value = 0;\r\n        if (this.littleEndian) {\n            value  = this.view[offset+2] << 16;\n            value |= this.view[offset+1] <<  8;\n            value |= this.view[offset  ];\n            value += this.view[offset+3] << 24 >>> 0;\n        } else {\n            value  = this.view[offset+1] << 16;\n            value |= this.view[offset+2] <<  8;\n            value |= this.view[offset+3];\n            value += this.view[offset  ] << 24 >>> 0;\n        }\n        if (relative) this.offset += 4;\n        return value;\r\n    };\r\n\r\n    /**\r\n     * Reads a 32bit unsigned integer. This is an alias of {@link ByteBuffer#readUint32}.\r\n     * @function\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @returns {number} Value read\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readUInt32 = ByteBufferPrototype.readUint32;\r\n\r\n    // types/ints/int64\r\n\r\n    if (Long) {\r\n\r\n        /**\r\n         * Writes a 64bit signed integer.\r\n         * @param {number|!Long} value Value to write\r\n         * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n         * @returns {!ByteBuffer} this\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.writeInt64 = function(value, offset) {\r\n            var relative = typeof offset === 'undefined';\n            if (relative) offset = this.offset;\n            if (!this.noAssert) {\r\n                if (typeof value === 'number')\n                    value = Long.fromNumber(value);\n                else if (typeof value === 'string')\n                    value = Long.fromString(value);\n                else if (!(value && value instanceof Long))\n                    throw TypeError(\"Illegal value: \"+value+\" (not an integer or Long)\");\n                if (typeof offset !== 'number' || offset % 1 !== 0)\n                    throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n                offset >>>= 0;\n                if (offset < 0 || offset + 0 > this.buffer.byteLength)\n                    throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n            }\r\n            if (typeof value === 'number')\n                value = Long.fromNumber(value);\n            else if (typeof value === 'string')\n                value = Long.fromString(value);\n            offset += 8;\n            var capacity6 = this.buffer.byteLength;\n            if (offset > capacity6)\n                this.resize((capacity6 *= 2) > offset ? capacity6 : offset);\n            offset -= 8;\n            var lo = value.low,\r\n                hi = value.high;\r\n            if (this.littleEndian) {\r\n                this.view[offset+3] = (lo >>> 24) & 0xFF;\n                this.view[offset+2] = (lo >>> 16) & 0xFF;\n                this.view[offset+1] = (lo >>>  8) & 0xFF;\n                this.view[offset  ] =  lo         & 0xFF;\n                offset += 4;\r\n                this.view[offset+3] = (hi >>> 24) & 0xFF;\n                this.view[offset+2] = (hi >>> 16) & 0xFF;\n                this.view[offset+1] = (hi >>>  8) & 0xFF;\n                this.view[offset  ] =  hi         & 0xFF;\n            } else {\r\n                this.view[offset  ] = (hi >>> 24) & 0xFF;\n                this.view[offset+1] = (hi >>> 16) & 0xFF;\n                this.view[offset+2] = (hi >>>  8) & 0xFF;\n                this.view[offset+3] =  hi         & 0xFF;\n                offset += 4;\r\n                this.view[offset  ] = (lo >>> 24) & 0xFF;\n                this.view[offset+1] = (lo >>> 16) & 0xFF;\n                this.view[offset+2] = (lo >>>  8) & 0xFF;\n                this.view[offset+3] =  lo         & 0xFF;\n            }\r\n            if (relative) this.offset += 8;\n            return this;\r\n        };\r\n\r\n        /**\r\n         * Writes a 64bit signed integer. This is an alias of {@link ByteBuffer#writeInt64}.\r\n         * @param {number|!Long} value Value to write\r\n         * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n         * @returns {!ByteBuffer} this\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.writeLong = ByteBufferPrototype.writeInt64;\r\n\r\n        /**\r\n         * Reads a 64bit signed integer.\r\n         * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n         * @returns {!Long}\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.readInt64 = function(offset) {\r\n            var relative = typeof offset === 'undefined';\n            if (relative) offset = this.offset;\n            if (!this.noAssert) {\r\n                if (typeof offset !== 'number' || offset % 1 !== 0)\n                    throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n                offset >>>= 0;\n                if (offset < 0 || offset + 8 > this.buffer.byteLength)\n                    throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+8+\") <= \"+this.buffer.byteLength);\n            }\r\n            var lo = 0,\r\n                hi = 0;\r\n            if (this.littleEndian) {\r\n                lo  = this.view[offset+2] << 16;\n                lo |= this.view[offset+1] <<  8;\n                lo |= this.view[offset  ];\n                lo += this.view[offset+3] << 24 >>> 0;\n                offset += 4;\r\n                hi  = this.view[offset+2] << 16;\n                hi |= this.view[offset+1] <<  8;\n                hi |= this.view[offset  ];\n                hi += this.view[offset+3] << 24 >>> 0;\n            } else {\r\n                hi  = this.view[offset+1] << 16;\n                hi |= this.view[offset+2] <<  8;\n                hi |= this.view[offset+3];\n                hi += this.view[offset  ] << 24 >>> 0;\n                offset += 4;\r\n                lo  = this.view[offset+1] << 16;\n                lo |= this.view[offset+2] <<  8;\n                lo |= this.view[offset+3];\n                lo += this.view[offset  ] << 24 >>> 0;\n            }\r\n            var value = new Long(lo, hi, false);\r\n            if (relative) this.offset += 8;\n            return value;\r\n        };\r\n\r\n        /**\r\n         * Reads a 64bit signed integer. This is an alias of {@link ByteBuffer#readInt64}.\r\n         * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n         * @returns {!Long}\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.readLong = ByteBufferPrototype.readInt64;\r\n\r\n        /**\r\n         * Writes a 64bit unsigned integer.\r\n         * @param {number|!Long} value Value to write\r\n         * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n         * @returns {!ByteBuffer} this\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.writeUint64 = function(value, offset) {\r\n            var relative = typeof offset === 'undefined';\n            if (relative) offset = this.offset;\n            if (!this.noAssert) {\r\n                if (typeof value === 'number')\n                    value = Long.fromNumber(value);\n                else if (typeof value === 'string')\n                    value = Long.fromString(value);\n                else if (!(value && value instanceof Long))\n                    throw TypeError(\"Illegal value: \"+value+\" (not an integer or Long)\");\n                if (typeof offset !== 'number' || offset % 1 !== 0)\n                    throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n                offset >>>= 0;\n                if (offset < 0 || offset + 0 > this.buffer.byteLength)\n                    throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n            }\r\n            if (typeof value === 'number')\n                value = Long.fromNumber(value);\n            else if (typeof value === 'string')\n                value = Long.fromString(value);\n            offset += 8;\n            var capacity7 = this.buffer.byteLength;\n            if (offset > capacity7)\n                this.resize((capacity7 *= 2) > offset ? capacity7 : offset);\n            offset -= 8;\n            var lo = value.low,\r\n                hi = value.high;\r\n            if (this.littleEndian) {\r\n                this.view[offset+3] = (lo >>> 24) & 0xFF;\n                this.view[offset+2] = (lo >>> 16) & 0xFF;\n                this.view[offset+1] = (lo >>>  8) & 0xFF;\n                this.view[offset  ] =  lo         & 0xFF;\n                offset += 4;\r\n                this.view[offset+3] = (hi >>> 24) & 0xFF;\n                this.view[offset+2] = (hi >>> 16) & 0xFF;\n                this.view[offset+1] = (hi >>>  8) & 0xFF;\n                this.view[offset  ] =  hi         & 0xFF;\n            } else {\r\n                this.view[offset  ] = (hi >>> 24) & 0xFF;\n                this.view[offset+1] = (hi >>> 16) & 0xFF;\n                this.view[offset+2] = (hi >>>  8) & 0xFF;\n                this.view[offset+3] =  hi         & 0xFF;\n                offset += 4;\r\n                this.view[offset  ] = (lo >>> 24) & 0xFF;\n                this.view[offset+1] = (lo >>> 16) & 0xFF;\n                this.view[offset+2] = (lo >>>  8) & 0xFF;\n                this.view[offset+3] =  lo         & 0xFF;\n            }\r\n            if (relative) this.offset += 8;\n            return this;\r\n        };\r\n\r\n        /**\r\n         * Writes a 64bit unsigned integer. This is an alias of {@link ByteBuffer#writeUint64}.\r\n         * @function\r\n         * @param {number|!Long} value Value to write\r\n         * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n         * @returns {!ByteBuffer} this\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.writeUInt64 = ByteBufferPrototype.writeUint64;\r\n\r\n        /**\r\n         * Reads a 64bit unsigned integer.\r\n         * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n         * @returns {!Long}\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.readUint64 = function(offset) {\r\n            var relative = typeof offset === 'undefined';\n            if (relative) offset = this.offset;\n            if (!this.noAssert) {\r\n                if (typeof offset !== 'number' || offset % 1 !== 0)\n                    throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n                offset >>>= 0;\n                if (offset < 0 || offset + 8 > this.buffer.byteLength)\n                    throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+8+\") <= \"+this.buffer.byteLength);\n            }\r\n            var lo = 0,\r\n                hi = 0;\r\n            if (this.littleEndian) {\r\n                lo  = this.view[offset+2] << 16;\n                lo |= this.view[offset+1] <<  8;\n                lo |= this.view[offset  ];\n                lo += this.view[offset+3] << 24 >>> 0;\n                offset += 4;\r\n                hi  = this.view[offset+2] << 16;\n                hi |= this.view[offset+1] <<  8;\n                hi |= this.view[offset  ];\n                hi += this.view[offset+3] << 24 >>> 0;\n            } else {\r\n                hi  = this.view[offset+1] << 16;\n                hi |= this.view[offset+2] <<  8;\n                hi |= this.view[offset+3];\n                hi += this.view[offset  ] << 24 >>> 0;\n                offset += 4;\r\n                lo  = this.view[offset+1] << 16;\n                lo |= this.view[offset+2] <<  8;\n                lo |= this.view[offset+3];\n                lo += this.view[offset  ] << 24 >>> 0;\n            }\r\n            var value = new Long(lo, hi, true);\r\n            if (relative) this.offset += 8;\n            return value;\r\n        };\r\n\r\n        /**\r\n         * Reads a 64bit unsigned integer. This is an alias of {@link ByteBuffer#readUint64}.\r\n         * @function\r\n         * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n         * @returns {!Long}\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.readUInt64 = ByteBufferPrototype.readUint64;\r\n\r\n    } // Long\r\n\r\n\r\n    // types/floats/float32\r\n\r\n    /*\r\n     ieee754 - https://github.com/feross/ieee754\r\n\r\n     The MIT License (MIT)\r\n\r\n     Copyright (c) Feross Aboukhadijeh\r\n\r\n     Permission is hereby granted, free of charge, to any person obtaining a copy\r\n     of this software and associated documentation files (the \"Software\"), to deal\r\n     in the Software without restriction, including without limitation the rights\r\n     to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n     copies of the Software, and to permit persons to whom the Software is\r\n     furnished to do so, subject to the following conditions:\r\n\r\n     The above copyright notice and this permission notice shall be included in\r\n     all copies or substantial portions of the Software.\r\n\r\n     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n     IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n     AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n     OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n     THE SOFTWARE.\r\n    */\r\n\r\n    /**\r\n     * Reads an IEEE754 float from a byte array.\r\n     * @param {!Array} buffer\r\n     * @param {number} offset\r\n     * @param {boolean} isLE\r\n     * @param {number} mLen\r\n     * @param {number} nBytes\r\n     * @returns {number}\r\n     * @inner\r\n     */\r\n    function ieee754_read(buffer, offset, isLE, mLen, nBytes) {\r\n        var e, m,\r\n            eLen = nBytes * 8 - mLen - 1,\r\n            eMax = (1 << eLen) - 1,\r\n            eBias = eMax >> 1,\r\n            nBits = -7,\r\n            i = isLE ? (nBytes - 1) : 0,\r\n            d = isLE ? -1 : 1,\r\n            s = buffer[offset + i];\r\n\r\n        i += d;\r\n\r\n        e = s & ((1 << (-nBits)) - 1);\r\n        s >>= (-nBits);\r\n        nBits += eLen;\r\n        for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\r\n\r\n        m = e & ((1 << (-nBits)) - 1);\r\n        e >>= (-nBits);\r\n        nBits += mLen;\r\n        for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\r\n\r\n        if (e === 0) {\r\n            e = 1 - eBias;\r\n        } else if (e === eMax) {\r\n            return m ? NaN : ((s ? -1 : 1) * Infinity);\r\n        } else {\r\n            m = m + Math.pow(2, mLen);\r\n            e = e - eBias;\r\n        }\r\n        return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\r\n    }\r\n\r\n    /**\r\n     * Writes an IEEE754 float to a byte array.\r\n     * @param {!Array} buffer\r\n     * @param {number} value\r\n     * @param {number} offset\r\n     * @param {boolean} isLE\r\n     * @param {number} mLen\r\n     * @param {number} nBytes\r\n     * @inner\r\n     */\r\n    function ieee754_write(buffer, value, offset, isLE, mLen, nBytes) {\r\n        var e, m, c,\r\n            eLen = nBytes * 8 - mLen - 1,\r\n            eMax = (1 << eLen) - 1,\r\n            eBias = eMax >> 1,\r\n            rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0),\r\n            i = isLE ? 0 : (nBytes - 1),\r\n            d = isLE ? 1 : -1,\r\n            s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0;\r\n\r\n        value = Math.abs(value);\r\n\r\n        if (isNaN(value) || value === Infinity) {\r\n            m = isNaN(value) ? 1 : 0;\r\n            e = eMax;\r\n        } else {\r\n            e = Math.floor(Math.log(value) / Math.LN2);\r\n            if (value * (c = Math.pow(2, -e)) < 1) {\r\n                e--;\r\n                c *= 2;\r\n            }\r\n            if (e + eBias >= 1) {\r\n                value += rt / c;\r\n            } else {\r\n                value += rt * Math.pow(2, 1 - eBias);\r\n            }\r\n            if (value * c >= 2) {\r\n                e++;\r\n                c /= 2;\r\n            }\r\n\r\n            if (e + eBias >= eMax) {\r\n                m = 0;\r\n                e = eMax;\r\n            } else if (e + eBias >= 1) {\r\n                m = (value * c - 1) * Math.pow(2, mLen);\r\n                e = e + eBias;\r\n            } else {\r\n                m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\r\n                e = 0;\r\n            }\r\n        }\r\n\r\n        for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\r\n\r\n        e = (e << mLen) | m;\r\n        eLen += mLen;\r\n        for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\r\n\r\n        buffer[offset + i - d] |= s * 128;\r\n    }\r\n\r\n    /**\r\n     * Writes a 32bit float.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeFloat32 = function(value, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof value !== 'number')\r\n                throw TypeError(\"Illegal value: \"+value+\" (not a number)\");\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n        }\r\n        offset += 4;\n        var capacity8 = this.buffer.byteLength;\n        if (offset > capacity8)\n            this.resize((capacity8 *= 2) > offset ? capacity8 : offset);\n        offset -= 4;\n        ieee754_write(this.view, value, offset, this.littleEndian, 23, 4);\r\n        if (relative) this.offset += 4;\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Writes a 32bit float. This is an alias of {@link ByteBuffer#writeFloat32}.\r\n     * @function\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeFloat = ByteBufferPrototype.writeFloat32;\r\n\r\n    /**\r\n     * Reads a 32bit float.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @returns {number}\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readFloat32 = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 4 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+4+\") <= \"+this.buffer.byteLength);\n        }\r\n        var value = ieee754_read(this.view, offset, this.littleEndian, 23, 4);\r\n        if (relative) this.offset += 4;\n        return value;\r\n    };\r\n\r\n    /**\r\n     * Reads a 32bit float. This is an alias of {@link ByteBuffer#readFloat32}.\r\n     * @function\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @returns {number}\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readFloat = ByteBufferPrototype.readFloat32;\r\n\r\n    // types/floats/float64\r\n\r\n    /**\r\n     * Writes a 64bit float.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeFloat64 = function(value, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof value !== 'number')\r\n                throw TypeError(\"Illegal value: \"+value+\" (not a number)\");\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n        }\r\n        offset += 8;\n        var capacity9 = this.buffer.byteLength;\n        if (offset > capacity9)\n            this.resize((capacity9 *= 2) > offset ? capacity9 : offset);\n        offset -= 8;\n        ieee754_write(this.view, value, offset, this.littleEndian, 52, 8);\r\n        if (relative) this.offset += 8;\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Writes a 64bit float. This is an alias of {@link ByteBuffer#writeFloat64}.\r\n     * @function\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeDouble = ByteBufferPrototype.writeFloat64;\r\n\r\n    /**\r\n     * Reads a 64bit float.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n     * @returns {number}\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readFloat64 = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 8 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+8+\") <= \"+this.buffer.byteLength);\n        }\r\n        var value = ieee754_read(this.view, offset, this.littleEndian, 52, 8);\r\n        if (relative) this.offset += 8;\n        return value;\r\n    };\r\n\r\n    /**\r\n     * Reads a 64bit float. This is an alias of {@link ByteBuffer#readFloat64}.\r\n     * @function\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n     * @returns {number}\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readDouble = ByteBufferPrototype.readFloat64;\r\n\r\n\r\n    // types/varints/varint32\r\n\r\n    /**\r\n     * Maximum number of bytes required to store a 32bit base 128 variable-length integer.\r\n     * @type {number}\r\n     * @const\r\n     * @expose\r\n     */\r\n    ByteBuffer.MAX_VARINT32_BYTES = 5;\r\n\r\n    /**\r\n     * Calculates the actual number of bytes required to store a 32bit base 128 variable-length integer.\r\n     * @param {number} value Value to encode\r\n     * @returns {number} Number of bytes required. Capped to {@link ByteBuffer.MAX_VARINT32_BYTES}\r\n     * @expose\r\n     */\r\n    ByteBuffer.calculateVarint32 = function(value) {\r\n        // ref: src/google/protobuf/io/coded_stream.cc\r\n        value = value >>> 0;\r\n             if (value < 1 << 7 ) return 1;\r\n        else if (value < 1 << 14) return 2;\r\n        else if (value < 1 << 21) return 3;\r\n        else if (value < 1 << 28) return 4;\r\n        else                      return 5;\r\n    };\r\n\r\n    /**\r\n     * Zigzag encodes a signed 32bit integer so that it can be effectively used with varint encoding.\r\n     * @param {number} n Signed 32bit integer\r\n     * @returns {number} Unsigned zigzag encoded 32bit integer\r\n     * @expose\r\n     */\r\n    ByteBuffer.zigZagEncode32 = function(n) {\r\n        return (((n |= 0) << 1) ^ (n >> 31)) >>> 0; // ref: src/google/protobuf/wire_format_lite.h\r\n    };\r\n\r\n    /**\r\n     * Decodes a zigzag encoded signed 32bit integer.\r\n     * @param {number} n Unsigned zigzag encoded 32bit integer\r\n     * @returns {number} Signed 32bit integer\r\n     * @expose\r\n     */\r\n    ByteBuffer.zigZagDecode32 = function(n) {\r\n        return ((n >>> 1) ^ -(n & 1)) | 0; // // ref: src/google/protobuf/wire_format_lite.h\r\n    };\r\n\r\n    /**\r\n     * Writes a 32bit base 128 variable-length integer.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  written if omitted.\r\n     * @returns {!ByteBuffer|number} this if `offset` is omitted, else the actual number of bytes written\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeVarint32 = function(value, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof value !== 'number' || value % 1 !== 0)\n                throw TypeError(\"Illegal value: \"+value+\" (not an integer)\");\n            value |= 0;\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n        }\r\n        var size = ByteBuffer.calculateVarint32(value),\r\n            b;\r\n        offset += size;\n        var capacity10 = this.buffer.byteLength;\n        if (offset > capacity10)\n            this.resize((capacity10 *= 2) > offset ? capacity10 : offset);\n        offset -= size;\n        value >>>= 0;\r\n        while (value >= 0x80) {\r\n            b = (value & 0x7f) | 0x80;\r\n            this.view[offset++] = b;\r\n            value >>>= 7;\r\n        }\r\n        this.view[offset++] = value;\r\n        if (relative) {\r\n            this.offset = offset;\r\n            return this;\r\n        }\r\n        return size;\r\n    };\r\n\r\n    /**\r\n     * Writes a zig-zag encoded (signed) 32bit base 128 variable-length integer.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  written if omitted.\r\n     * @returns {!ByteBuffer|number} this if `offset` is omitted, else the actual number of bytes written\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeVarint32ZigZag = function(value, offset) {\r\n        return this.writeVarint32(ByteBuffer.zigZagEncode32(value), offset);\r\n    };\r\n\r\n    /**\r\n     * Reads a 32bit base 128 variable-length integer.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  written if omitted.\r\n     * @returns {number|!{value: number, length: number}} The value read if offset is omitted, else the value read\r\n     *  and the actual number of bytes read.\r\n     * @throws {Error} If it's not a valid varint. Has a property `truncated = true` if there is not enough data available\r\n     *  to fully decode the varint.\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readVarint32 = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 1 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+1+\") <= \"+this.buffer.byteLength);\n        }\r\n        var c = 0,\r\n            value = 0 >>> 0,\r\n            b;\r\n        do {\r\n            if (!this.noAssert && offset > this.limit) {\r\n                var err = Error(\"Truncated\");\r\n                err['truncated'] = true;\r\n                throw err;\r\n            }\r\n            b = this.view[offset++];\r\n            if (c < 5)\r\n                value |= (b & 0x7f) << (7*c);\r\n            ++c;\r\n        } while ((b & 0x80) !== 0);\r\n        value |= 0;\r\n        if (relative) {\r\n            this.offset = offset;\r\n            return value;\r\n        }\r\n        return {\r\n            \"value\": value,\r\n            \"length\": c\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Reads a zig-zag encoded (signed) 32bit base 128 variable-length integer.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  written if omitted.\r\n     * @returns {number|!{value: number, length: number}} The value read if offset is omitted, else the value read\r\n     *  and the actual number of bytes read.\r\n     * @throws {Error} If it's not a valid varint\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readVarint32ZigZag = function(offset) {\r\n        var val = this.readVarint32(offset);\r\n        if (typeof val === 'object')\r\n            val[\"value\"] = ByteBuffer.zigZagDecode32(val[\"value\"]);\r\n        else\r\n            val = ByteBuffer.zigZagDecode32(val);\r\n        return val;\r\n    };\r\n\r\n    // types/varints/varint64\r\n\r\n    if (Long) {\r\n\r\n        /**\r\n         * Maximum number of bytes required to store a 64bit base 128 variable-length integer.\r\n         * @type {number}\r\n         * @const\r\n         * @expose\r\n         */\r\n        ByteBuffer.MAX_VARINT64_BYTES = 10;\r\n\r\n        /**\r\n         * Calculates the actual number of bytes required to store a 64bit base 128 variable-length integer.\r\n         * @param {number|!Long} value Value to encode\r\n         * @returns {number} Number of bytes required. Capped to {@link ByteBuffer.MAX_VARINT64_BYTES}\r\n         * @expose\r\n         */\r\n        ByteBuffer.calculateVarint64 = function(value) {\r\n            if (typeof value === 'number')\n                value = Long.fromNumber(value);\n            else if (typeof value === 'string')\n                value = Long.fromString(value);\n            // ref: src/google/protobuf/io/coded_stream.cc\r\n            var part0 = value.toInt() >>> 0,\r\n                part1 = value.shiftRightUnsigned(28).toInt() >>> 0,\r\n                part2 = value.shiftRightUnsigned(56).toInt() >>> 0;\r\n            if (part2 == 0) {\r\n                if (part1 == 0) {\r\n                    if (part0 < 1 << 14)\r\n                        return part0 < 1 << 7 ? 1 : 2;\r\n                    else\r\n                        return part0 < 1 << 21 ? 3 : 4;\r\n                } else {\r\n                    if (part1 < 1 << 14)\r\n                        return part1 < 1 << 7 ? 5 : 6;\r\n                    else\r\n                        return part1 < 1 << 21 ? 7 : 8;\r\n                }\r\n            } else\r\n                return part2 < 1 << 7 ? 9 : 10;\r\n        };\r\n\r\n        /**\r\n         * Zigzag encodes a signed 64bit integer so that it can be effectively used with varint encoding.\r\n         * @param {number|!Long} value Signed long\r\n         * @returns {!Long} Unsigned zigzag encoded long\r\n         * @expose\r\n         */\r\n        ByteBuffer.zigZagEncode64 = function(value) {\r\n            if (typeof value === 'number')\n                value = Long.fromNumber(value, false);\n            else if (typeof value === 'string')\n                value = Long.fromString(value, false);\n            else if (value.unsigned !== false) value = value.toSigned();\n            // ref: src/google/protobuf/wire_format_lite.h\r\n            return value.shiftLeft(1).xor(value.shiftRight(63)).toUnsigned();\r\n        };\r\n\r\n        /**\r\n         * Decodes a zigzag encoded signed 64bit integer.\r\n         * @param {!Long|number} value Unsigned zigzag encoded long or JavaScript number\r\n         * @returns {!Long} Signed long\r\n         * @expose\r\n         */\r\n        ByteBuffer.zigZagDecode64 = function(value) {\r\n            if (typeof value === 'number')\n                value = Long.fromNumber(value, false);\n            else if (typeof value === 'string')\n                value = Long.fromString(value, false);\n            else if (value.unsigned !== false) value = value.toSigned();\n            // ref: src/google/protobuf/wire_format_lite.h\r\n            return value.shiftRightUnsigned(1).xor(value.and(Long.ONE).toSigned().negate()).toSigned();\r\n        };\r\n\r\n        /**\r\n         * Writes a 64bit base 128 variable-length integer.\r\n         * @param {number|Long} value Value to write\r\n         * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n         *  written if omitted.\r\n         * @returns {!ByteBuffer|number} `this` if offset is omitted, else the actual number of bytes written.\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.writeVarint64 = function(value, offset) {\r\n            var relative = typeof offset === 'undefined';\n            if (relative) offset = this.offset;\n            if (!this.noAssert) {\r\n                if (typeof value === 'number')\n                    value = Long.fromNumber(value);\n                else if (typeof value === 'string')\n                    value = Long.fromString(value);\n                else if (!(value && value instanceof Long))\n                    throw TypeError(\"Illegal value: \"+value+\" (not an integer or Long)\");\n                if (typeof offset !== 'number' || offset % 1 !== 0)\n                    throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n                offset >>>= 0;\n                if (offset < 0 || offset + 0 > this.buffer.byteLength)\n                    throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n            }\r\n            if (typeof value === 'number')\n                value = Long.fromNumber(value, false);\n            else if (typeof value === 'string')\n                value = Long.fromString(value, false);\n            else if (value.unsigned !== false) value = value.toSigned();\n            var size = ByteBuffer.calculateVarint64(value),\r\n                part0 = value.toInt() >>> 0,\r\n                part1 = value.shiftRightUnsigned(28).toInt() >>> 0,\r\n                part2 = value.shiftRightUnsigned(56).toInt() >>> 0;\r\n            offset += size;\n            var capacity11 = this.buffer.byteLength;\n            if (offset > capacity11)\n                this.resize((capacity11 *= 2) > offset ? capacity11 : offset);\n            offset -= size;\n            switch (size) {\r\n                case 10: this.view[offset+9] = (part2 >>>  7) & 0x01;\r\n                case 9 : this.view[offset+8] = size !== 9 ? (part2       ) | 0x80 : (part2       ) & 0x7F;\r\n                case 8 : this.view[offset+7] = size !== 8 ? (part1 >>> 21) | 0x80 : (part1 >>> 21) & 0x7F;\r\n                case 7 : this.view[offset+6] = size !== 7 ? (part1 >>> 14) | 0x80 : (part1 >>> 14) & 0x7F;\r\n                case 6 : this.view[offset+5] = size !== 6 ? (part1 >>>  7) | 0x80 : (part1 >>>  7) & 0x7F;\r\n                case 5 : this.view[offset+4] = size !== 5 ? (part1       ) | 0x80 : (part1       ) & 0x7F;\r\n                case 4 : this.view[offset+3] = size !== 4 ? (part0 >>> 21) | 0x80 : (part0 >>> 21) & 0x7F;\r\n                case 3 : this.view[offset+2] = size !== 3 ? (part0 >>> 14) | 0x80 : (part0 >>> 14) & 0x7F;\r\n                case 2 : this.view[offset+1] = size !== 2 ? (part0 >>>  7) | 0x80 : (part0 >>>  7) & 0x7F;\r\n                case 1 : this.view[offset  ] = size !== 1 ? (part0       ) | 0x80 : (part0       ) & 0x7F;\r\n            }\r\n            if (relative) {\r\n                this.offset += size;\r\n                return this;\r\n            } else {\r\n                return size;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Writes a zig-zag encoded 64bit base 128 variable-length integer.\r\n         * @param {number|Long} value Value to write\r\n         * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n         *  written if omitted.\r\n         * @returns {!ByteBuffer|number} `this` if offset is omitted, else the actual number of bytes written.\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.writeVarint64ZigZag = function(value, offset) {\r\n            return this.writeVarint64(ByteBuffer.zigZagEncode64(value), offset);\r\n        };\r\n\r\n        /**\r\n         * Reads a 64bit base 128 variable-length integer. Requires Long.js.\r\n         * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n         *  read if omitted.\r\n         * @returns {!Long|!{value: Long, length: number}} The value read if offset is omitted, else the value read and\r\n         *  the actual number of bytes read.\r\n         * @throws {Error} If it's not a valid varint\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.readVarint64 = function(offset) {\r\n            var relative = typeof offset === 'undefined';\n            if (relative) offset = this.offset;\n            if (!this.noAssert) {\r\n                if (typeof offset !== 'number' || offset % 1 !== 0)\n                    throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n                offset >>>= 0;\n                if (offset < 0 || offset + 1 > this.buffer.byteLength)\n                    throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+1+\") <= \"+this.buffer.byteLength);\n            }\r\n            // ref: src/google/protobuf/io/coded_stream.cc\r\n            var start = offset,\r\n                part0 = 0,\r\n                part1 = 0,\r\n                part2 = 0,\r\n                b  = 0;\r\n            b = this.view[offset++]; part0  = (b & 0x7F)      ; if ( b & 0x80                                                   ) {\r\n            b = this.view[offset++]; part0 |= (b & 0x7F) <<  7; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {\r\n            b = this.view[offset++]; part0 |= (b & 0x7F) << 14; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {\r\n            b = this.view[offset++]; part0 |= (b & 0x7F) << 21; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {\r\n            b = this.view[offset++]; part1  = (b & 0x7F)      ; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {\r\n            b = this.view[offset++]; part1 |= (b & 0x7F) <<  7; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {\r\n            b = this.view[offset++]; part1 |= (b & 0x7F) << 14; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {\r\n            b = this.view[offset++]; part1 |= (b & 0x7F) << 21; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {\r\n            b = this.view[offset++]; part2  = (b & 0x7F)      ; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {\r\n            b = this.view[offset++]; part2 |= (b & 0x7F) <<  7; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {\r\n            throw Error(\"Buffer overrun\"); }}}}}}}}}}\r\n            var value = Long.fromBits(part0 | (part1 << 28), (part1 >>> 4) | (part2) << 24, false);\r\n            if (relative) {\r\n                this.offset = offset;\r\n                return value;\r\n            } else {\r\n                return {\r\n                    'value': value,\r\n                    'length': offset-start\r\n                };\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Reads a zig-zag encoded 64bit base 128 variable-length integer. Requires Long.js.\r\n         * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n         *  read if omitted.\r\n         * @returns {!Long|!{value: Long, length: number}} The value read if offset is omitted, else the value read and\r\n         *  the actual number of bytes read.\r\n         * @throws {Error} If it's not a valid varint\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.readVarint64ZigZag = function(offset) {\r\n            var val = this.readVarint64(offset);\r\n            if (val && val['value'] instanceof Long)\r\n                val[\"value\"] = ByteBuffer.zigZagDecode64(val[\"value\"]);\r\n            else\r\n                val = ByteBuffer.zigZagDecode64(val);\r\n            return val;\r\n        };\r\n\r\n    } // Long\r\n\r\n\r\n    // types/strings/cstring\r\n\r\n    /**\r\n     * Writes a NULL-terminated UTF8 encoded string. For this to work the specified string must not contain any NULL\r\n     *  characters itself.\r\n     * @param {string} str String to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  contained in `str` + 1 if omitted.\r\n     * @returns {!ByteBuffer|number} this if offset is omitted, else the actual number of bytes written\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeCString = function(str, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        var i,\r\n            k = str.length;\r\n        if (!this.noAssert) {\r\n            if (typeof str !== 'string')\r\n                throw TypeError(\"Illegal str: Not a string\");\r\n            for (i=0; i<k; ++i) {\r\n                if (str.charCodeAt(i) === 0)\r\n                    throw RangeError(\"Illegal str: Contains NULL-characters\");\r\n            }\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n        }\r\n        // UTF8 strings do not contain zero bytes in between except for the zero character, so:\r\n        k = utfx.calculateUTF16asUTF8(stringSource(str))[1];\r\n        offset += k+1;\n        var capacity12 = this.buffer.byteLength;\n        if (offset > capacity12)\n            this.resize((capacity12 *= 2) > offset ? capacity12 : offset);\n        offset -= k+1;\n        utfx.encodeUTF16toUTF8(stringSource(str), function(b) {\r\n            this.view[offset++] = b;\r\n        }.bind(this));\r\n        this.view[offset++] = 0;\r\n        if (relative) {\r\n            this.offset = offset;\r\n            return this;\r\n        }\r\n        return k;\r\n    };\r\n\r\n    /**\r\n     * Reads a NULL-terminated UTF8 encoded string. For this to work the string read must not contain any NULL characters\r\n     *  itself.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  read if omitted.\r\n     * @returns {string|!{string: string, length: number}} The string read if offset is omitted, else the string\r\n     *  read and the actual number of bytes read.\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readCString = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 1 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+1+\") <= \"+this.buffer.byteLength);\n        }\r\n        var start = offset,\r\n            temp;\r\n        // UTF8 strings do not contain zero bytes in between except for the zero character itself, so:\r\n        var sd, b = -1;\r\n        utfx.decodeUTF8toUTF16(function() {\r\n            if (b === 0) return null;\r\n            if (offset >= this.limit)\r\n                throw RangeError(\"Illegal range: Truncated data, \"+offset+\" < \"+this.limit);\r\n            b = this.view[offset++];\r\n            return b === 0 ? null : b;\r\n        }.bind(this), sd = stringDestination(), true);\r\n        if (relative) {\r\n            this.offset = offset;\r\n            return sd();\r\n        } else {\r\n            return {\r\n                \"string\": sd(),\r\n                \"length\": offset - start\r\n            };\r\n        }\r\n    };\r\n\r\n    // types/strings/istring\r\n\r\n    /**\r\n     * Writes a length as uint32 prefixed UTF8 encoded string.\r\n     * @param {string} str String to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  written if omitted.\r\n     * @returns {!ByteBuffer|number} `this` if `offset` is omitted, else the actual number of bytes written\r\n     * @expose\r\n     * @see ByteBuffer#writeVarint32\r\n     */\r\n    ByteBufferPrototype.writeIString = function(str, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof str !== 'string')\r\n                throw TypeError(\"Illegal str: Not a string\");\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n        }\r\n        var start = offset,\r\n            k;\r\n        k = utfx.calculateUTF16asUTF8(stringSource(str), this.noAssert)[1];\r\n        offset += 4+k;\n        var capacity13 = this.buffer.byteLength;\n        if (offset > capacity13)\n            this.resize((capacity13 *= 2) > offset ? capacity13 : offset);\n        offset -= 4+k;\n        if (this.littleEndian) {\n            this.view[offset+3] = (k >>> 24) & 0xFF;\n            this.view[offset+2] = (k >>> 16) & 0xFF;\n            this.view[offset+1] = (k >>>  8) & 0xFF;\n            this.view[offset  ] =  k         & 0xFF;\n        } else {\n            this.view[offset  ] = (k >>> 24) & 0xFF;\n            this.view[offset+1] = (k >>> 16) & 0xFF;\n            this.view[offset+2] = (k >>>  8) & 0xFF;\n            this.view[offset+3] =  k         & 0xFF;\n        }\n        offset += 4;\r\n        utfx.encodeUTF16toUTF8(stringSource(str), function(b) {\r\n            this.view[offset++] = b;\r\n        }.bind(this));\r\n        if (offset !== start + 4 + k)\r\n            throw RangeError(\"Illegal range: Truncated data, \"+offset+\" == \"+(offset+4+k));\r\n        if (relative) {\r\n            this.offset = offset;\r\n            return this;\r\n        }\r\n        return offset - start;\r\n    };\r\n\r\n    /**\r\n     * Reads a length as uint32 prefixed UTF8 encoded string.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  read if omitted.\r\n     * @returns {string|!{string: string, length: number}} The string read if offset is omitted, else the string\r\n     *  read and the actual number of bytes read.\r\n     * @expose\r\n     * @see ByteBuffer#readVarint32\r\n     */\r\n    ByteBufferPrototype.readIString = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 4 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+4+\") <= \"+this.buffer.byteLength);\n        }\r\n        var start = offset;\r\n        var len = this.readUint32(offset);\r\n        var str = this.readUTF8String(len, ByteBuffer.METRICS_BYTES, offset += 4);\r\n        offset += str['length'];\r\n        if (relative) {\r\n            this.offset = offset;\r\n            return str['string'];\r\n        } else {\r\n            return {\r\n                'string': str['string'],\r\n                'length': offset - start\r\n            };\r\n        }\r\n    };\r\n\r\n    // types/strings/utf8string\r\n\r\n    /**\r\n     * Metrics representing number of UTF8 characters. Evaluates to `c`.\r\n     * @type {string}\r\n     * @const\r\n     * @expose\r\n     */\r\n    ByteBuffer.METRICS_CHARS = 'c';\r\n\r\n    /**\r\n     * Metrics representing number of bytes. Evaluates to `b`.\r\n     * @type {string}\r\n     * @const\r\n     * @expose\r\n     */\r\n    ByteBuffer.METRICS_BYTES = 'b';\r\n\r\n    /**\r\n     * Writes an UTF8 encoded string.\r\n     * @param {string} str String to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} if omitted.\r\n     * @returns {!ByteBuffer|number} this if offset is omitted, else the actual number of bytes written.\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeUTF8String = function(str, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n        }\r\n        var k;\r\n        var start = offset;\r\n        k = utfx.calculateUTF16asUTF8(stringSource(str))[1];\r\n        offset += k;\n        var capacity14 = this.buffer.byteLength;\n        if (offset > capacity14)\n            this.resize((capacity14 *= 2) > offset ? capacity14 : offset);\n        offset -= k;\n        utfx.encodeUTF16toUTF8(stringSource(str), function(b) {\r\n            this.view[offset++] = b;\r\n        }.bind(this));\r\n        if (relative) {\r\n            this.offset = offset;\r\n            return this;\r\n        }\r\n        return offset - start;\r\n    };\r\n\r\n    /**\r\n     * Writes an UTF8 encoded string. This is an alias of {@link ByteBuffer#writeUTF8String}.\r\n     * @function\r\n     * @param {string} str String to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} if omitted.\r\n     * @returns {!ByteBuffer|number} this if offset is omitted, else the actual number of bytes written.\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeString = ByteBufferPrototype.writeUTF8String;\r\n\r\n    /**\r\n     * Calculates the number of UTF8 characters of a string. JavaScript itself uses UTF-16, so that a string's\r\n     *  `length` property does not reflect its actual UTF8 size if it contains code points larger than 0xFFFF.\r\n     * @param {string} str String to calculate\r\n     * @returns {number} Number of UTF8 characters\r\n     * @expose\r\n     */\r\n    ByteBuffer.calculateUTF8Chars = function(str) {\r\n        return utfx.calculateUTF16asUTF8(stringSource(str))[0];\r\n    };\r\n\r\n    /**\r\n     * Calculates the number of UTF8 bytes of a string.\r\n     * @param {string} str String to calculate\r\n     * @returns {number} Number of UTF8 bytes\r\n     * @expose\r\n     */\r\n    ByteBuffer.calculateUTF8Bytes = function(str) {\r\n        return utfx.calculateUTF16asUTF8(stringSource(str))[1];\r\n    };\r\n\r\n    /**\r\n     * Calculates the number of UTF8 bytes of a string. This is an alias of {@link ByteBuffer.calculateUTF8Bytes}.\r\n     * @function\r\n     * @param {string} str String to calculate\r\n     * @returns {number} Number of UTF8 bytes\r\n     * @expose\r\n     */\r\n    ByteBuffer.calculateString = ByteBuffer.calculateUTF8Bytes;\r\n\r\n    /**\r\n     * Reads an UTF8 encoded string.\r\n     * @param {number} length Number of characters or bytes to read.\r\n     * @param {string=} metrics Metrics specifying what `length` is meant to count. Defaults to\r\n     *  {@link ByteBuffer.METRICS_CHARS}.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  read if omitted.\r\n     * @returns {string|!{string: string, length: number}} The string read if offset is omitted, else the string\r\n     *  read and the actual number of bytes read.\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readUTF8String = function(length, metrics, offset) {\r\n        if (typeof metrics === 'number') {\r\n            offset = metrics;\r\n            metrics = undefined;\r\n        }\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (typeof metrics === 'undefined') metrics = ByteBuffer.METRICS_CHARS;\r\n        if (!this.noAssert) {\r\n            if (typeof length !== 'number' || length % 1 !== 0)\n                throw TypeError(\"Illegal length: \"+length+\" (not an integer)\");\n            length |= 0;\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n        }\r\n        var i = 0,\r\n            start = offset,\r\n            sd;\r\n        if (metrics === ByteBuffer.METRICS_CHARS) { // The same for node and the browser\r\n            sd = stringDestination();\r\n            utfx.decodeUTF8(function() {\r\n                return i < length && offset < this.limit ? this.view[offset++] : null;\r\n            }.bind(this), function(cp) {\r\n                ++i; utfx.UTF8toUTF16(cp, sd);\r\n            });\r\n            if (i !== length)\r\n                throw RangeError(\"Illegal range: Truncated data, \"+i+\" == \"+length);\r\n            if (relative) {\r\n                this.offset = offset;\r\n                return sd();\r\n            } else {\r\n                return {\r\n                    \"string\": sd(),\r\n                    \"length\": offset - start\r\n                };\r\n            }\r\n        } else if (metrics === ByteBuffer.METRICS_BYTES) {\r\n            if (!this.noAssert) {\r\n                if (typeof offset !== 'number' || offset % 1 !== 0)\n                    throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n                offset >>>= 0;\n                if (offset < 0 || offset + length > this.buffer.byteLength)\n                    throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+length+\") <= \"+this.buffer.byteLength);\n            }\r\n            var k = offset + length;\r\n            utfx.decodeUTF8toUTF16(function() {\r\n                return offset < k ? this.view[offset++] : null;\r\n            }.bind(this), sd = stringDestination(), this.noAssert);\r\n            if (offset !== k)\r\n                throw RangeError(\"Illegal range: Truncated data, \"+offset+\" == \"+k);\r\n            if (relative) {\r\n                this.offset = offset;\r\n                return sd();\r\n            } else {\r\n                return {\r\n                    'string': sd(),\r\n                    'length': offset - start\r\n                };\r\n            }\r\n        } else\r\n            throw TypeError(\"Unsupported metrics: \"+metrics);\r\n    };\r\n\r\n    /**\r\n     * Reads an UTF8 encoded string. This is an alias of {@link ByteBuffer#readUTF8String}.\r\n     * @function\r\n     * @param {number} length Number of characters or bytes to read\r\n     * @param {number=} metrics Metrics specifying what `n` is meant to count. Defaults to\r\n     *  {@link ByteBuffer.METRICS_CHARS}.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  read if omitted.\r\n     * @returns {string|!{string: string, length: number}} The string read if offset is omitted, else the string\r\n     *  read and the actual number of bytes read.\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readString = ByteBufferPrototype.readUTF8String;\r\n\r\n    // types/strings/vstring\r\n\r\n    /**\r\n     * Writes a length as varint32 prefixed UTF8 encoded string.\r\n     * @param {string} str String to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  written if omitted.\r\n     * @returns {!ByteBuffer|number} `this` if `offset` is omitted, else the actual number of bytes written\r\n     * @expose\r\n     * @see ByteBuffer#writeVarint32\r\n     */\r\n    ByteBufferPrototype.writeVString = function(str, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof str !== 'string')\r\n                throw TypeError(\"Illegal str: Not a string\");\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n        }\r\n        var start = offset,\r\n            k, l;\r\n        k = utfx.calculateUTF16asUTF8(stringSource(str), this.noAssert)[1];\r\n        l = ByteBuffer.calculateVarint32(k);\r\n        offset += l+k;\n        var capacity15 = this.buffer.byteLength;\n        if (offset > capacity15)\n            this.resize((capacity15 *= 2) > offset ? capacity15 : offset);\n        offset -= l+k;\n        offset += this.writeVarint32(k, offset);\r\n        utfx.encodeUTF16toUTF8(stringSource(str), function(b) {\r\n            this.view[offset++] = b;\r\n        }.bind(this));\r\n        if (offset !== start+k+l)\r\n            throw RangeError(\"Illegal range: Truncated data, \"+offset+\" == \"+(offset+k+l));\r\n        if (relative) {\r\n            this.offset = offset;\r\n            return this;\r\n        }\r\n        return offset - start;\r\n    };\r\n\r\n    /**\r\n     * Reads a length as varint32 prefixed UTF8 encoded string.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  read if omitted.\r\n     * @returns {string|!{string: string, length: number}} The string read if offset is omitted, else the string\r\n     *  read and the actual number of bytes read.\r\n     * @expose\r\n     * @see ByteBuffer#readVarint32\r\n     */\r\n    ByteBufferPrototype.readVString = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 1 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+1+\") <= \"+this.buffer.byteLength);\n        }\r\n        var start = offset;\r\n        var len = this.readVarint32(offset);\r\n        var str = this.readUTF8String(len['value'], ByteBuffer.METRICS_BYTES, offset += len['length']);\r\n        offset += str['length'];\r\n        if (relative) {\r\n            this.offset = offset;\r\n            return str['string'];\r\n        } else {\r\n            return {\r\n                'string': str['string'],\r\n                'length': offset - start\r\n            };\r\n        }\r\n    };\r\n\r\n\r\n    /**\r\n     * Appends some data to this ByteBuffer. This will overwrite any contents behind the specified offset up to the appended\r\n     *  data's length.\r\n     * @param {!ByteBuffer|!ArrayBuffer|!Uint8Array|string} source Data to append. If `source` is a ByteBuffer, its offsets\r\n     *  will be modified according to the performed read operation.\r\n     * @param {(string|number)=} encoding Encoding if `data` is a string (\"base64\", \"hex\", \"binary\", defaults to \"utf8\")\r\n     * @param {number=} offset Offset to append at. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  written if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     * @example A relative `<01 02>03.append(<04 05>)` will result in `<01 02 04 05>, 04 05|`\r\n     * @example An absolute `<01 02>03.append(04 05>, 1)` will result in `<01 04>05, 04 05|`\r\n     */\r\n    ByteBufferPrototype.append = function(source, encoding, offset) {\r\n        if (typeof encoding === 'number' || typeof encoding !== 'string') {\r\n            offset = encoding;\r\n            encoding = undefined;\r\n        }\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n        }\r\n        if (!(source instanceof ByteBuffer))\r\n            source = ByteBuffer.wrap(source, encoding);\r\n        var length = source.limit - source.offset;\r\n        if (length <= 0) return this; // Nothing to append\r\n        offset += length;\n        var capacity16 = this.buffer.byteLength;\n        if (offset > capacity16)\n            this.resize((capacity16 *= 2) > offset ? capacity16 : offset);\n        offset -= length;\n        this.view.set(source.view.subarray(source.offset, source.limit), offset);\r\n        source.offset += length;\r\n        if (relative) this.offset += length;\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Appends this ByteBuffer's contents to another ByteBuffer. This will overwrite any contents at and after the\r\n        specified offset up to the length of this ByteBuffer's data.\r\n     * @param {!ByteBuffer} target Target ByteBuffer\r\n     * @param {number=} offset Offset to append to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  read if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     * @see ByteBuffer#append\r\n     */\r\n    ByteBufferPrototype.appendTo = function(target, offset) {\r\n        target.append(this, offset);\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Enables or disables assertions of argument types and offsets. Assertions are enabled by default but you can opt to\r\n     *  disable them if your code already makes sure that everything is valid.\r\n     * @param {boolean} assert `true` to enable assertions, otherwise `false`\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.assert = function(assert) {\r\n        this.noAssert = !assert;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Gets the capacity of this ByteBuffer's backing buffer.\r\n     * @returns {number} Capacity of the backing buffer\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.capacity = function() {\r\n        return this.buffer.byteLength;\r\n    };\r\n    /**\r\n     * Clears this ByteBuffer's offsets by setting {@link ByteBuffer#offset} to `0` and {@link ByteBuffer#limit} to the\r\n     *  backing buffer's capacity. Discards {@link ByteBuffer#markedOffset}.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.clear = function() {\r\n        this.offset = 0;\r\n        this.limit = this.buffer.byteLength;\r\n        this.markedOffset = -1;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Creates a cloned instance of this ByteBuffer, preset with this ByteBuffer's values for {@link ByteBuffer#offset},\r\n     *  {@link ByteBuffer#markedOffset} and {@link ByteBuffer#limit}.\r\n     * @param {boolean=} copy Whether to copy the backing buffer or to return another view on the same, defaults to `false`\r\n     * @returns {!ByteBuffer} Cloned instance\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.clone = function(copy) {\r\n        var bb = new ByteBuffer(0, this.littleEndian, this.noAssert);\r\n        if (copy) {\r\n            bb.buffer = new ArrayBuffer(this.buffer.byteLength);\r\n            bb.view = new Uint8Array(bb.buffer);\r\n        } else {\r\n            bb.buffer = this.buffer;\r\n            bb.view = this.view;\r\n        }\r\n        bb.offset = this.offset;\r\n        bb.markedOffset = this.markedOffset;\r\n        bb.limit = this.limit;\r\n        return bb;\r\n    };\r\n\r\n    /**\r\n     * Compacts this ByteBuffer to be backed by a {@link ByteBuffer#buffer} of its contents' length. Contents are the bytes\r\n     *  between {@link ByteBuffer#offset} and {@link ByteBuffer#limit}. Will set `offset = 0` and `limit = capacity` and\r\n     *  adapt {@link ByteBuffer#markedOffset} to the same relative position if set.\r\n     * @param {number=} begin Offset to start at, defaults to {@link ByteBuffer#offset}\r\n     * @param {number=} end Offset to end at, defaults to {@link ByteBuffer#limit}\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.compact = function(begin, end) {\r\n        if (typeof begin === 'undefined') begin = this.offset;\r\n        if (typeof end === 'undefined') end = this.limit;\r\n        if (!this.noAssert) {\r\n            if (typeof begin !== 'number' || begin % 1 !== 0)\n                throw TypeError(\"Illegal begin: Not an integer\");\n            begin >>>= 0;\n            if (typeof end !== 'number' || end % 1 !== 0)\n                throw TypeError(\"Illegal end: Not an integer\");\n            end >>>= 0;\n            if (begin < 0 || begin > end || end > this.buffer.byteLength)\n                throw RangeError(\"Illegal range: 0 <= \"+begin+\" <= \"+end+\" <= \"+this.buffer.byteLength);\n        }\r\n        if (begin === 0 && end === this.buffer.byteLength)\r\n            return this; // Already compacted\r\n        var len = end - begin;\r\n        if (len === 0) {\r\n            this.buffer = EMPTY_BUFFER;\r\n            this.view = null;\r\n            if (this.markedOffset >= 0) this.markedOffset -= begin;\r\n            this.offset = 0;\r\n            this.limit = 0;\r\n            return this;\r\n        }\r\n        var buffer = new ArrayBuffer(len);\r\n        var view = new Uint8Array(buffer);\r\n        view.set(this.view.subarray(begin, end));\r\n        this.buffer = buffer;\r\n        this.view = view;\r\n        if (this.markedOffset >= 0) this.markedOffset -= begin;\r\n        this.offset = 0;\r\n        this.limit = len;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Creates a copy of this ByteBuffer's contents. Contents are the bytes between {@link ByteBuffer#offset} and\r\n     *  {@link ByteBuffer#limit}.\r\n     * @param {number=} begin Begin offset, defaults to {@link ByteBuffer#offset}.\r\n     * @param {number=} end End offset, defaults to {@link ByteBuffer#limit}.\r\n     * @returns {!ByteBuffer} Copy\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.copy = function(begin, end) {\r\n        if (typeof begin === 'undefined') begin = this.offset;\r\n        if (typeof end === 'undefined') end = this.limit;\r\n        if (!this.noAssert) {\r\n            if (typeof begin !== 'number' || begin % 1 !== 0)\n                throw TypeError(\"Illegal begin: Not an integer\");\n            begin >>>= 0;\n            if (typeof end !== 'number' || end % 1 !== 0)\n                throw TypeError(\"Illegal end: Not an integer\");\n            end >>>= 0;\n            if (begin < 0 || begin > end || end > this.buffer.byteLength)\n                throw RangeError(\"Illegal range: 0 <= \"+begin+\" <= \"+end+\" <= \"+this.buffer.byteLength);\n        }\r\n        if (begin === end)\r\n            return new ByteBuffer(0, this.littleEndian, this.noAssert);\r\n        var capacity = end - begin,\r\n            bb = new ByteBuffer(capacity, this.littleEndian, this.noAssert);\r\n        bb.offset = 0;\r\n        bb.limit = capacity;\r\n        if (bb.markedOffset >= 0) bb.markedOffset -= begin;\r\n        this.copyTo(bb, 0, begin, end);\r\n        return bb;\r\n    };\r\n\r\n    /**\r\n     * Copies this ByteBuffer's contents to another ByteBuffer. Contents are the bytes between {@link ByteBuffer#offset} and\r\n     *  {@link ByteBuffer#limit}.\r\n     * @param {!ByteBuffer} target Target ByteBuffer\r\n     * @param {number=} targetOffset Offset to copy to. Will use and increase the target's {@link ByteBuffer#offset}\r\n     *  by the number of bytes copied if omitted.\r\n     * @param {number=} sourceOffset Offset to start copying from. Will use and increase {@link ByteBuffer#offset} by the\r\n     *  number of bytes copied if omitted.\r\n     * @param {number=} sourceLimit Offset to end copying from, defaults to {@link ByteBuffer#limit}\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.copyTo = function(target, targetOffset, sourceOffset, sourceLimit) {\r\n        var relative,\r\n            targetRelative;\r\n        if (!this.noAssert) {\r\n            if (!ByteBuffer.isByteBuffer(target))\r\n                throw TypeError(\"Illegal target: Not a ByteBuffer\");\r\n        }\r\n        targetOffset = (targetRelative = typeof targetOffset === 'undefined') ? target.offset : targetOffset | 0;\r\n        sourceOffset = (relative = typeof sourceOffset === 'undefined') ? this.offset : sourceOffset | 0;\r\n        sourceLimit = typeof sourceLimit === 'undefined' ? this.limit : sourceLimit | 0;\r\n\r\n        if (targetOffset < 0 || targetOffset > target.buffer.byteLength)\r\n            throw RangeError(\"Illegal target range: 0 <= \"+targetOffset+\" <= \"+target.buffer.byteLength);\r\n        if (sourceOffset < 0 || sourceLimit > this.buffer.byteLength)\r\n            throw RangeError(\"Illegal source range: 0 <= \"+sourceOffset+\" <= \"+this.buffer.byteLength);\r\n\r\n        var len = sourceLimit - sourceOffset;\r\n        if (len === 0)\r\n            return target; // Nothing to copy\r\n\r\n        target.ensureCapacity(targetOffset + len);\r\n\r\n        target.view.set(this.view.subarray(sourceOffset, sourceLimit), targetOffset);\r\n\r\n        if (relative) this.offset += len;\r\n        if (targetRelative) target.offset += len;\r\n\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Makes sure that this ByteBuffer is backed by a {@link ByteBuffer#buffer} of at least the specified capacity. If the\r\n     *  current capacity is exceeded, it will be doubled. If double the current capacity is less than the required capacity,\r\n     *  the required capacity will be used instead.\r\n     * @param {number} capacity Required capacity\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.ensureCapacity = function(capacity) {\r\n        var current = this.buffer.byteLength;\r\n        if (current < capacity)\r\n            return this.resize((current *= 2) > capacity ? current : capacity);\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Overwrites this ByteBuffer's contents with the specified value. Contents are the bytes between\r\n     *  {@link ByteBuffer#offset} and {@link ByteBuffer#limit}.\r\n     * @param {number|string} value Byte value to fill with. If given as a string, the first character is used.\r\n     * @param {number=} begin Begin offset. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  written if omitted. defaults to {@link ByteBuffer#offset}.\r\n     * @param {number=} end End offset, defaults to {@link ByteBuffer#limit}.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     * @example `someByteBuffer.clear().fill(0)` fills the entire backing buffer with zeroes\r\n     */\r\n    ByteBufferPrototype.fill = function(value, begin, end) {\r\n        var relative = typeof begin === 'undefined';\n        if (relative) begin = this.offset;\n        if (typeof value === 'string' && value.length > 0)\r\n            value = value.charCodeAt(0);\r\n        if (typeof begin === 'undefined') begin = this.offset;\r\n        if (typeof end === 'undefined') end = this.limit;\r\n        if (!this.noAssert) {\r\n            if (typeof value !== 'number' || value % 1 !== 0)\n                throw TypeError(\"Illegal value: \"+value+\" (not an integer)\");\n            value |= 0;\n            if (typeof begin !== 'number' || begin % 1 !== 0)\n                throw TypeError(\"Illegal begin: Not an integer\");\n            begin >>>= 0;\n            if (typeof end !== 'number' || end % 1 !== 0)\n                throw TypeError(\"Illegal end: Not an integer\");\n            end >>>= 0;\n            if (begin < 0 || begin > end || end > this.buffer.byteLength)\n                throw RangeError(\"Illegal range: 0 <= \"+begin+\" <= \"+end+\" <= \"+this.buffer.byteLength);\n        }\r\n        if (begin >= end)\r\n            return this; // Nothing to fill\r\n        while (begin < end) this.view[begin++] = value;\r\n        if (relative) this.offset = begin;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Makes this ByteBuffer ready for a new sequence of write or relative read operations. Sets `limit = offset` and\r\n     *  `offset = 0`. Make sure always to flip a ByteBuffer when all relative read or write operations are complete.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.flip = function() {\r\n        this.limit = this.offset;\r\n        this.offset = 0;\r\n        return this;\r\n    };\r\n    /**\r\n     * Marks an offset on this ByteBuffer to be used later.\r\n     * @param {number=} offset Offset to mark. Defaults to {@link ByteBuffer#offset}.\r\n     * @returns {!ByteBuffer} this\r\n     * @throws {TypeError} If `offset` is not a valid number\r\n     * @throws {RangeError} If `offset` is out of bounds\r\n     * @see ByteBuffer#reset\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.mark = function(offset) {\r\n        offset = typeof offset === 'undefined' ? this.offset : offset;\r\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n        }\r\n        this.markedOffset = offset;\r\n        return this;\r\n    };\r\n    /**\r\n     * Sets the byte order.\r\n     * @param {boolean} littleEndian `true` for little endian byte order, `false` for big endian\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.order = function(littleEndian) {\r\n        if (!this.noAssert) {\r\n            if (typeof littleEndian !== 'boolean')\r\n                throw TypeError(\"Illegal littleEndian: Not a boolean\");\r\n        }\r\n        this.littleEndian = !!littleEndian;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Switches (to) little endian byte order.\r\n     * @param {boolean=} littleEndian Defaults to `true`, otherwise uses big endian\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.LE = function(littleEndian) {\r\n        this.littleEndian = typeof littleEndian !== 'undefined' ? !!littleEndian : true;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Switches (to) big endian byte order.\r\n     * @param {boolean=} bigEndian Defaults to `true`, otherwise uses little endian\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.BE = function(bigEndian) {\r\n        this.littleEndian = typeof bigEndian !== 'undefined' ? !bigEndian : false;\r\n        return this;\r\n    };\r\n    /**\r\n     * Prepends some data to this ByteBuffer. This will overwrite any contents before the specified offset up to the\r\n     *  prepended data's length. If there is not enough space available before the specified `offset`, the backing buffer\r\n     *  will be resized and its contents moved accordingly.\r\n     * @param {!ByteBuffer|string|!ArrayBuffer} source Data to prepend. If `source` is a ByteBuffer, its offset will be\r\n     *  modified according to the performed read operation.\r\n     * @param {(string|number)=} encoding Encoding if `data` is a string (\"base64\", \"hex\", \"binary\", defaults to \"utf8\")\r\n     * @param {number=} offset Offset to prepend at. Will use and decrease {@link ByteBuffer#offset} by the number of bytes\r\n     *  prepended if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     * @example A relative `00<01 02 03>.prepend(<04 05>)` results in `<04 05 01 02 03>, 04 05|`\r\n     * @example An absolute `00<01 02 03>.prepend(<04 05>, 2)` results in `04<05 02 03>, 04 05|`\r\n     */\r\n    ByteBufferPrototype.prepend = function(source, encoding, offset) {\r\n        if (typeof encoding === 'number' || typeof encoding !== 'string') {\r\n            offset = encoding;\r\n            encoding = undefined;\r\n        }\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n        }\r\n        if (!(source instanceof ByteBuffer))\r\n            source = ByteBuffer.wrap(source, encoding);\r\n        var len = source.limit - source.offset;\r\n        if (len <= 0) return this; // Nothing to prepend\r\n        var diff = len - offset;\r\n        if (diff > 0) { // Not enough space before offset, so resize + move\r\n            var buffer = new ArrayBuffer(this.buffer.byteLength + diff);\r\n            var view = new Uint8Array(buffer);\r\n            view.set(this.view.subarray(offset, this.buffer.byteLength), len);\r\n            this.buffer = buffer;\r\n            this.view = view;\r\n            this.offset += diff;\r\n            if (this.markedOffset >= 0) this.markedOffset += diff;\r\n            this.limit += diff;\r\n            offset += diff;\r\n        } else {\r\n            var arrayView = new Uint8Array(this.buffer);\r\n        }\r\n        this.view.set(source.view.subarray(source.offset, source.limit), offset - len);\r\n\r\n        source.offset = source.limit;\r\n        if (relative)\r\n            this.offset -= len;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Prepends this ByteBuffer to another ByteBuffer. This will overwrite any contents before the specified offset up to the\r\n     *  prepended data's length. If there is not enough space available before the specified `offset`, the backing buffer\r\n     *  will be resized and its contents moved accordingly.\r\n     * @param {!ByteBuffer} target Target ByteBuffer\r\n     * @param {number=} offset Offset to prepend at. Will use and decrease {@link ByteBuffer#offset} by the number of bytes\r\n     *  prepended if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     * @see ByteBuffer#prepend\r\n     */\r\n    ByteBufferPrototype.prependTo = function(target, offset) {\r\n        target.prepend(this, offset);\r\n        return this;\r\n    };\r\n    /**\r\n     * Prints debug information about this ByteBuffer's contents.\r\n     * @param {function(string)=} out Output function to call, defaults to console.log\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.printDebug = function(out) {\r\n        if (typeof out !== 'function') out = console.log.bind(console);\r\n        out(\r\n            this.toString()+\"\\n\"+\r\n            \"-------------------------------------------------------------------\\n\"+\r\n            this.toDebug(/* columns */ true)\r\n        );\r\n    };\r\n\r\n    /**\r\n     * Gets the number of remaining readable bytes. Contents are the bytes between {@link ByteBuffer#offset} and\r\n     *  {@link ByteBuffer#limit}, so this returns `limit - offset`.\r\n     * @returns {number} Remaining readable bytes. May be negative if `offset > limit`.\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.remaining = function() {\r\n        return this.limit - this.offset;\r\n    };\r\n    /**\r\n     * Resets this ByteBuffer's {@link ByteBuffer#offset}. If an offset has been marked through {@link ByteBuffer#mark}\r\n     *  before, `offset` will be set to {@link ByteBuffer#markedOffset}, which will then be discarded. If no offset has been\r\n     *  marked, sets `offset = 0`.\r\n     * @returns {!ByteBuffer} this\r\n     * @see ByteBuffer#mark\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.reset = function() {\r\n        if (this.markedOffset >= 0) {\r\n            this.offset = this.markedOffset;\r\n            this.markedOffset = -1;\r\n        } else {\r\n            this.offset = 0;\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Resizes this ByteBuffer to be backed by a buffer of at least the given capacity. Will do nothing if already that\r\n     *  large or larger.\r\n     * @param {number} capacity Capacity required\r\n     * @returns {!ByteBuffer} this\r\n     * @throws {TypeError} If `capacity` is not a number\r\n     * @throws {RangeError} If `capacity < 0`\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.resize = function(capacity) {\r\n        if (!this.noAssert) {\r\n            if (typeof capacity !== 'number' || capacity % 1 !== 0)\n                throw TypeError(\"Illegal capacity: \"+capacity+\" (not an integer)\");\n            capacity |= 0;\n            if (capacity < 0)\r\n                throw RangeError(\"Illegal capacity: 0 <= \"+capacity);\r\n        }\r\n        if (this.buffer.byteLength < capacity) {\r\n            var buffer = new ArrayBuffer(capacity);\r\n            var view = new Uint8Array(buffer);\r\n            view.set(this.view);\r\n            this.buffer = buffer;\r\n            this.view = view;\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Reverses this ByteBuffer's contents.\r\n     * @param {number=} begin Offset to start at, defaults to {@link ByteBuffer#offset}\r\n     * @param {number=} end Offset to end at, defaults to {@link ByteBuffer#limit}\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.reverse = function(begin, end) {\r\n        if (typeof begin === 'undefined') begin = this.offset;\r\n        if (typeof end === 'undefined') end = this.limit;\r\n        if (!this.noAssert) {\r\n            if (typeof begin !== 'number' || begin % 1 !== 0)\n                throw TypeError(\"Illegal begin: Not an integer\");\n            begin >>>= 0;\n            if (typeof end !== 'number' || end % 1 !== 0)\n                throw TypeError(\"Illegal end: Not an integer\");\n            end >>>= 0;\n            if (begin < 0 || begin > end || end > this.buffer.byteLength)\n                throw RangeError(\"Illegal range: 0 <= \"+begin+\" <= \"+end+\" <= \"+this.buffer.byteLength);\n        }\r\n        if (begin === end)\r\n            return this; // Nothing to reverse\r\n        Array.prototype.reverse.call(this.view.subarray(begin, end));\r\n        return this;\r\n    };\r\n    /**\r\n     * Skips the next `length` bytes. This will just advance\r\n     * @param {number} length Number of bytes to skip. May also be negative to move the offset back.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.skip = function(length) {\r\n        if (!this.noAssert) {\r\n            if (typeof length !== 'number' || length % 1 !== 0)\n                throw TypeError(\"Illegal length: \"+length+\" (not an integer)\");\n            length |= 0;\n        }\r\n        var offset = this.offset + length;\r\n        if (!this.noAssert) {\r\n            if (offset < 0 || offset > this.buffer.byteLength)\r\n                throw RangeError(\"Illegal length: 0 <= \"+this.offset+\" + \"+length+\" <= \"+this.buffer.byteLength);\r\n        }\r\n        this.offset = offset;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Slices this ByteBuffer by creating a cloned instance with `offset = begin` and `limit = end`.\r\n     * @param {number=} begin Begin offset, defaults to {@link ByteBuffer#offset}.\r\n     * @param {number=} end End offset, defaults to {@link ByteBuffer#limit}.\r\n     * @returns {!ByteBuffer} Clone of this ByteBuffer with slicing applied, backed by the same {@link ByteBuffer#buffer}\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.slice = function(begin, end) {\r\n        if (typeof begin === 'undefined') begin = this.offset;\r\n        if (typeof end === 'undefined') end = this.limit;\r\n        if (!this.noAssert) {\r\n            if (typeof begin !== 'number' || begin % 1 !== 0)\n                throw TypeError(\"Illegal begin: Not an integer\");\n            begin >>>= 0;\n            if (typeof end !== 'number' || end % 1 !== 0)\n                throw TypeError(\"Illegal end: Not an integer\");\n            end >>>= 0;\n            if (begin < 0 || begin > end || end > this.buffer.byteLength)\n                throw RangeError(\"Illegal range: 0 <= \"+begin+\" <= \"+end+\" <= \"+this.buffer.byteLength);\n        }\r\n        var bb = this.clone();\r\n        bb.offset = begin;\r\n        bb.limit = end;\r\n        return bb;\r\n    };\r\n    /**\r\n     * Returns a copy of the backing buffer that contains this ByteBuffer's contents. Contents are the bytes between\r\n     *  {@link ByteBuffer#offset} and {@link ByteBuffer#limit}.\r\n     * @param {boolean=} forceCopy If `true` returns a copy, otherwise returns a view referencing the same memory if\r\n     *  possible. Defaults to `false`\r\n     * @returns {!ArrayBuffer} Contents as an ArrayBuffer\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.toBuffer = function(forceCopy) {\r\n        var offset = this.offset,\r\n            limit = this.limit;\r\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: Not an integer\");\n            offset >>>= 0;\n            if (typeof limit !== 'number' || limit % 1 !== 0)\n                throw TypeError(\"Illegal limit: Not an integer\");\n            limit >>>= 0;\n            if (offset < 0 || offset > limit || limit > this.buffer.byteLength)\n                throw RangeError(\"Illegal range: 0 <= \"+offset+\" <= \"+limit+\" <= \"+this.buffer.byteLength);\n        }\r\n        // NOTE: It's not possible to have another ArrayBuffer reference the same memory as the backing buffer. This is\r\n        // possible with Uint8Array#subarray only, but we have to return an ArrayBuffer by contract. So:\r\n        if (!forceCopy && offset === 0 && limit === this.buffer.byteLength)\r\n            return this.buffer;\r\n        if (offset === limit)\r\n            return EMPTY_BUFFER;\r\n        var buffer = new ArrayBuffer(limit - offset);\r\n        new Uint8Array(buffer).set(new Uint8Array(this.buffer).subarray(offset, limit), 0);\r\n        return buffer;\r\n    };\r\n\r\n    /**\r\n     * Returns a raw buffer compacted to contain this ByteBuffer's contents. Contents are the bytes between\r\n     *  {@link ByteBuffer#offset} and {@link ByteBuffer#limit}. This is an alias of {@link ByteBuffer#toBuffer}.\r\n     * @function\r\n     * @param {boolean=} forceCopy If `true` returns a copy, otherwise returns a view referencing the same memory.\r\n     *  Defaults to `false`\r\n     * @returns {!ArrayBuffer} Contents as an ArrayBuffer\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.toArrayBuffer = ByteBufferPrototype.toBuffer;\r\n\r\n    /**\r\n     * Converts the ByteBuffer's contents to a string.\r\n     * @param {string=} encoding Output encoding. Returns an informative string representation if omitted but also allows\r\n     *  direct conversion to \"utf8\", \"hex\", \"base64\" and \"binary\" encoding. \"debug\" returns a hex representation with\r\n     *  highlighted offsets.\r\n     * @param {number=} begin Offset to begin at, defaults to {@link ByteBuffer#offset}\r\n     * @param {number=} end Offset to end at, defaults to {@link ByteBuffer#limit}\r\n     * @returns {string} String representation\r\n     * @throws {Error} If `encoding` is invalid\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.toString = function(encoding, begin, end) {\r\n        if (typeof encoding === 'undefined')\r\n            return \"ByteBufferAB(offset=\"+this.offset+\",markedOffset=\"+this.markedOffset+\",limit=\"+this.limit+\",capacity=\"+this.capacity()+\")\";\r\n        if (typeof encoding === 'number')\r\n            encoding = \"utf8\",\r\n            begin = encoding,\r\n            end = begin;\r\n        switch (encoding) {\r\n            case \"utf8\":\r\n                return this.toUTF8(begin, end);\r\n            case \"base64\":\r\n                return this.toBase64(begin, end);\r\n            case \"hex\":\r\n                return this.toHex(begin, end);\r\n            case \"binary\":\r\n                return this.toBinary(begin, end);\r\n            case \"debug\":\r\n                return this.toDebug();\r\n            case \"columns\":\r\n                return this.toColumns();\r\n            default:\r\n                throw Error(\"Unsupported encoding: \"+encoding);\r\n        }\r\n    };\r\n\r\n    // lxiv-embeddable\r\n\r\n    /**\r\n     * lxiv-embeddable (c) 2014 Daniel Wirtz <dcode@dcode.io>\r\n     * Released under the Apache License, Version 2.0\r\n     * see: https://github.com/dcodeIO/lxiv for details\r\n     */\r\n    var lxiv = function() {\r\n        \"use strict\";\r\n\r\n        /**\r\n         * lxiv namespace.\r\n         * @type {!Object.<string,*>}\r\n         * @exports lxiv\r\n         */\r\n        var lxiv = {};\r\n\r\n        /**\r\n         * Character codes for output.\r\n         * @type {!Array.<number>}\r\n         * @inner\r\n         */\r\n        var aout = [\r\n            65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\r\n            81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102,\r\n            103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118,\r\n            119, 120, 121, 122, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 43, 47\r\n        ];\r\n\r\n        /**\r\n         * Character codes for input.\r\n         * @type {!Array.<number>}\r\n         * @inner\r\n         */\r\n        var ain = [];\r\n        for (var i=0, k=aout.length; i<k; ++i)\r\n            ain[aout[i]] = i;\r\n\r\n        /**\r\n         * Encodes bytes to base64 char codes.\r\n         * @param {!function():number|null} src Bytes source as a function returning the next byte respectively `null` if\r\n         *  there are no more bytes left.\r\n         * @param {!function(number)} dst Characters destination as a function successively called with each encoded char\r\n         *  code.\r\n         */\r\n        lxiv.encode = function(src, dst) {\r\n            var b, t;\r\n            while ((b = src()) !== null) {\r\n                dst(aout[(b>>2)&0x3f]);\r\n                t = (b&0x3)<<4;\r\n                if ((b = src()) !== null) {\r\n                    t |= (b>>4)&0xf;\r\n                    dst(aout[(t|((b>>4)&0xf))&0x3f]);\r\n                    t = (b&0xf)<<2;\r\n                    if ((b = src()) !== null)\r\n                        dst(aout[(t|((b>>6)&0x3))&0x3f]),\r\n                        dst(aout[b&0x3f]);\r\n                    else\r\n                        dst(aout[t&0x3f]),\r\n                        dst(61);\r\n                } else\r\n                    dst(aout[t&0x3f]),\r\n                    dst(61),\r\n                    dst(61);\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Decodes base64 char codes to bytes.\r\n         * @param {!function():number|null} src Characters source as a function returning the next char code respectively\r\n         *  `null` if there are no more characters left.\r\n         * @param {!function(number)} dst Bytes destination as a function successively called with the next byte.\r\n         * @throws {Error} If a character code is invalid\r\n         */\r\n        lxiv.decode = function(src, dst) {\r\n            var c, t1, t2;\r\n            function fail(c) {\r\n                throw Error(\"Illegal character code: \"+c);\r\n            }\r\n            while ((c = src()) !== null) {\r\n                t1 = ain[c];\r\n                if (typeof t1 === 'undefined') fail(c);\r\n                if ((c = src()) !== null) {\r\n                    t2 = ain[c];\r\n                    if (typeof t2 === 'undefined') fail(c);\r\n                    dst((t1<<2)>>>0|(t2&0x30)>>4);\r\n                    if ((c = src()) !== null) {\r\n                        t1 = ain[c];\r\n                        if (typeof t1 === 'undefined')\r\n                            if (c === 61) break; else fail(c);\r\n                        dst(((t2&0xf)<<4)>>>0|(t1&0x3c)>>2);\r\n                        if ((c = src()) !== null) {\r\n                            t2 = ain[c];\r\n                            if (typeof t2 === 'undefined')\r\n                                if (c === 61) break; else fail(c);\r\n                            dst(((t1&0x3)<<6)>>>0|t2);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Tests if a string is valid base64.\r\n         * @param {string} str String to test\r\n         * @returns {boolean} `true` if valid, otherwise `false`\r\n         */\r\n        lxiv.test = function(str) {\r\n            return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(str);\r\n        };\r\n\r\n        return lxiv;\r\n    }();\r\n\r\n    // encodings/base64\r\n\r\n    /**\r\n     * Encodes this ByteBuffer's contents to a base64 encoded string.\r\n     * @param {number=} begin Offset to begin at, defaults to {@link ByteBuffer#offset}.\r\n     * @param {number=} end Offset to end at, defaults to {@link ByteBuffer#limit}.\r\n     * @returns {string} Base64 encoded string\r\n     * @throws {RangeError} If `begin` or `end` is out of bounds\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.toBase64 = function(begin, end) {\r\n        if (typeof begin === 'undefined')\r\n            begin = this.offset;\r\n        if (typeof end === 'undefined')\r\n            end = this.limit;\r\n        begin = begin | 0; end = end | 0;\r\n        if (begin < 0 || end > this.capacity || begin > end)\r\n            throw RangeError(\"begin, end\");\r\n        var sd; lxiv.encode(function() {\r\n            return begin < end ? this.view[begin++] : null;\r\n        }.bind(this), sd = stringDestination());\r\n        return sd();\r\n    };\r\n\r\n    /**\r\n     * Decodes a base64 encoded string to a ByteBuffer.\r\n     * @param {string} str String to decode\r\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_ENDIAN}.\r\n     * @returns {!ByteBuffer} ByteBuffer\r\n     * @expose\r\n     */\r\n    ByteBuffer.fromBase64 = function(str, littleEndian) {\r\n        if (typeof str !== 'string')\r\n            throw TypeError(\"str\");\r\n        var bb = new ByteBuffer(str.length/4*3, littleEndian),\r\n            i = 0;\r\n        lxiv.decode(stringSource(str), function(b) {\r\n            bb.view[i++] = b;\r\n        });\r\n        bb.limit = i;\r\n        return bb;\r\n    };\r\n\r\n    /**\r\n     * Encodes a binary string to base64 like `window.btoa` does.\r\n     * @param {string} str Binary string\r\n     * @returns {string} Base64 encoded string\r\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Window.btoa\r\n     * @expose\r\n     */\r\n    ByteBuffer.btoa = function(str) {\r\n        return ByteBuffer.fromBinary(str).toBase64();\r\n    };\r\n\r\n    /**\r\n     * Decodes a base64 encoded string to binary like `window.atob` does.\r\n     * @param {string} b64 Base64 encoded string\r\n     * @returns {string} Binary string\r\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Window.atob\r\n     * @expose\r\n     */\r\n    ByteBuffer.atob = function(b64) {\r\n        return ByteBuffer.fromBase64(b64).toBinary();\r\n    };\r\n\r\n    // encodings/binary\r\n\r\n    /**\r\n     * Encodes this ByteBuffer to a binary encoded string, that is using only characters 0x00-0xFF as bytes.\r\n     * @param {number=} begin Offset to begin at. Defaults to {@link ByteBuffer#offset}.\r\n     * @param {number=} end Offset to end at. Defaults to {@link ByteBuffer#limit}.\r\n     * @returns {string} Binary encoded string\r\n     * @throws {RangeError} If `offset > limit`\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.toBinary = function(begin, end) {\r\n        if (typeof begin === 'undefined')\r\n            begin = this.offset;\r\n        if (typeof end === 'undefined')\r\n            end = this.limit;\r\n        begin |= 0; end |= 0;\r\n        if (begin < 0 || end > this.capacity() || begin > end)\r\n            throw RangeError(\"begin, end\");\r\n        if (begin === end)\r\n            return \"\";\r\n        var chars = [],\r\n            parts = [];\r\n        while (begin < end) {\r\n            chars.push(this.view[begin++]);\r\n            if (chars.length >= 1024)\r\n                parts.push(String.fromCharCode.apply(String, chars)),\r\n                chars = [];\r\n        }\r\n        return parts.join('') + String.fromCharCode.apply(String, chars);\r\n    };\r\n\r\n    /**\r\n     * Decodes a binary encoded string, that is using only characters 0x00-0xFF as bytes, to a ByteBuffer.\r\n     * @param {string} str String to decode\r\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_ENDIAN}.\r\n     * @returns {!ByteBuffer} ByteBuffer\r\n     * @expose\r\n     */\r\n    ByteBuffer.fromBinary = function(str, littleEndian) {\r\n        if (typeof str !== 'string')\r\n            throw TypeError(\"str\");\r\n        var i = 0,\r\n            k = str.length,\r\n            charCode,\r\n            bb = new ByteBuffer(k, littleEndian);\r\n        while (i<k) {\r\n            charCode = str.charCodeAt(i);\r\n            if (charCode > 0xff)\r\n                throw RangeError(\"illegal char code: \"+charCode);\r\n            bb.view[i++] = charCode;\r\n        }\r\n        bb.limit = k;\r\n        return bb;\r\n    };\r\n\r\n    // encodings/debug\r\n\r\n    /**\r\n     * Encodes this ByteBuffer to a hex encoded string with marked offsets. Offset symbols are:\r\n     * * `<` : offset,\r\n     * * `'` : markedOffset,\r\n     * * `>` : limit,\r\n     * * `|` : offset and limit,\r\n     * * `[` : offset and markedOffset,\r\n     * * `]` : markedOffset and limit,\r\n     * * `!` : offset, markedOffset and limit\r\n     * @param {boolean=} columns If `true` returns two columns hex + ascii, defaults to `false`\r\n     * @returns {string|!Array.<string>} Debug string or array of lines if `asArray = true`\r\n     * @expose\r\n     * @example `>00'01 02<03` contains four bytes with `limit=0, markedOffset=1, offset=3`\r\n     * @example `00[01 02 03>` contains four bytes with `offset=markedOffset=1, limit=4`\r\n     * @example `00|01 02 03` contains four bytes with `offset=limit=1, markedOffset=-1`\r\n     * @example `|` contains zero bytes with `offset=limit=0, markedOffset=-1`\r\n     */\r\n    ByteBufferPrototype.toDebug = function(columns) {\r\n        var i = -1,\r\n            k = this.buffer.byteLength,\r\n            b,\r\n            hex = \"\",\r\n            asc = \"\",\r\n            out = \"\";\r\n        while (i<k) {\r\n            if (i !== -1) {\r\n                b = this.view[i];\r\n                if (b < 0x10) hex += \"0\"+b.toString(16).toUpperCase();\r\n                else hex += b.toString(16).toUpperCase();\r\n                if (columns)\r\n                    asc += b > 32 && b < 127 ? String.fromCharCode(b) : '.';\r\n            }\r\n            ++i;\r\n            if (columns) {\r\n                if (i > 0 && i % 16 === 0 && i !== k) {\r\n                    while (hex.length < 3*16+3) hex += \" \";\r\n                    out += hex+asc+\"\\n\";\r\n                    hex = asc = \"\";\r\n                }\r\n            }\r\n            if (i === this.offset && i === this.limit)\r\n                hex += i === this.markedOffset ? \"!\" : \"|\";\r\n            else if (i === this.offset)\r\n                hex += i === this.markedOffset ? \"[\" : \"<\";\r\n            else if (i === this.limit)\r\n                hex += i === this.markedOffset ? \"]\" : \">\";\r\n            else\r\n                hex += i === this.markedOffset ? \"'\" : (columns || (i !== 0 && i !== k) ? \" \" : \"\");\r\n        }\r\n        if (columns && hex !== \" \") {\r\n            while (hex.length < 3*16+3)\r\n                hex += \" \";\r\n            out += hex + asc + \"\\n\";\r\n        }\r\n        return columns ? out : hex;\r\n    };\r\n\r\n    /**\r\n     * Decodes a hex encoded string with marked offsets to a ByteBuffer.\r\n     * @param {string} str Debug string to decode (not be generated with `columns = true`)\r\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_ENDIAN}.\r\n     * @param {boolean=} noAssert Whether to skip assertions of offsets and values. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_NOASSERT}.\r\n     * @returns {!ByteBuffer} ByteBuffer\r\n     * @expose\r\n     * @see ByteBuffer#toDebug\r\n     */\r\n    ByteBuffer.fromDebug = function(str, littleEndian, noAssert) {\r\n        var k = str.length,\r\n            bb = new ByteBuffer(((k+1)/3)|0, littleEndian, noAssert);\r\n        var i = 0, j = 0, ch, b,\r\n            rs = false, // Require symbol next\r\n            ho = false, hm = false, hl = false, // Already has offset (ho), markedOffset (hm), limit (hl)?\r\n            fail = false;\r\n        while (i<k) {\r\n            switch (ch = str.charAt(i++)) {\r\n                case '!':\r\n                    if (!noAssert) {\r\n                        if (ho || hm || hl) {\r\n                            fail = true;\r\n                            break;\r\n                        }\r\n                        ho = hm = hl = true;\r\n                    }\r\n                    bb.offset = bb.markedOffset = bb.limit = j;\r\n                    rs = false;\r\n                    break;\r\n                case '|':\r\n                    if (!noAssert) {\r\n                        if (ho || hl) {\r\n                            fail = true;\r\n                            break;\r\n                        }\r\n                        ho = hl = true;\r\n                    }\r\n                    bb.offset = bb.limit = j;\r\n                    rs = false;\r\n                    break;\r\n                case '[':\r\n                    if (!noAssert) {\r\n                        if (ho || hm) {\r\n                            fail = true;\r\n                            break;\r\n                        }\r\n                        ho = hm = true;\r\n                    }\r\n                    bb.offset = bb.markedOffset = j;\r\n                    rs = false;\r\n                    break;\r\n                case '<':\r\n                    if (!noAssert) {\r\n                        if (ho) {\r\n                            fail = true;\r\n                            break;\r\n                        }\r\n                        ho = true;\r\n                    }\r\n                    bb.offset = j;\r\n                    rs = false;\r\n                    break;\r\n                case ']':\r\n                    if (!noAssert) {\r\n                        if (hl || hm) {\r\n                            fail = true;\r\n                            break;\r\n                        }\r\n                        hl = hm = true;\r\n                    }\r\n                    bb.limit = bb.markedOffset = j;\r\n                    rs = false;\r\n                    break;\r\n                case '>':\r\n                    if (!noAssert) {\r\n                        if (hl) {\r\n                            fail = true;\r\n                            break;\r\n                        }\r\n                        hl = true;\r\n                    }\r\n                    bb.limit = j;\r\n                    rs = false;\r\n                    break;\r\n                case \"'\":\r\n                    if (!noAssert) {\r\n                        if (hm) {\r\n                            fail = true;\r\n                            break;\r\n                        }\r\n                        hm = true;\r\n                    }\r\n                    bb.markedOffset = j;\r\n                    rs = false;\r\n                    break;\r\n                case ' ':\r\n                    rs = false;\r\n                    break;\r\n                default:\r\n                    if (!noAssert) {\r\n                        if (rs) {\r\n                            fail = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                    b = parseInt(ch+str.charAt(i++), 16);\r\n                    if (!noAssert) {\r\n                        if (isNaN(b) || b < 0 || b > 255)\r\n                            throw TypeError(\"Illegal str: Not a debug encoded string\");\r\n                    }\r\n                    bb.view[j++] = b;\r\n                    rs = true;\r\n            }\r\n            if (fail)\r\n                throw TypeError(\"Illegal str: Invalid symbol at \"+i);\r\n        }\r\n        if (!noAssert) {\r\n            if (!ho || !hl)\r\n                throw TypeError(\"Illegal str: Missing offset or limit\");\r\n            if (j<bb.buffer.byteLength)\r\n                throw TypeError(\"Illegal str: Not a debug encoded string (is it hex?) \"+j+\" < \"+k);\r\n        }\r\n        return bb;\r\n    };\r\n\r\n    // encodings/hex\r\n\r\n    /**\r\n     * Encodes this ByteBuffer's contents to a hex encoded string.\r\n     * @param {number=} begin Offset to begin at. Defaults to {@link ByteBuffer#offset}.\r\n     * @param {number=} end Offset to end at. Defaults to {@link ByteBuffer#limit}.\r\n     * @returns {string} Hex encoded string\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.toHex = function(begin, end) {\r\n        begin = typeof begin === 'undefined' ? this.offset : begin;\r\n        end = typeof end === 'undefined' ? this.limit : end;\r\n        if (!this.noAssert) {\r\n            if (typeof begin !== 'number' || begin % 1 !== 0)\n                throw TypeError(\"Illegal begin: Not an integer\");\n            begin >>>= 0;\n            if (typeof end !== 'number' || end % 1 !== 0)\n                throw TypeError(\"Illegal end: Not an integer\");\n            end >>>= 0;\n            if (begin < 0 || begin > end || end > this.buffer.byteLength)\n                throw RangeError(\"Illegal range: 0 <= \"+begin+\" <= \"+end+\" <= \"+this.buffer.byteLength);\n        }\r\n        var out = new Array(end - begin),\r\n            b;\r\n        while (begin < end) {\r\n            b = this.view[begin++];\r\n            if (b < 0x10)\r\n                out.push(\"0\", b.toString(16));\r\n            else out.push(b.toString(16));\r\n        }\r\n        return out.join('');\r\n    };\r\n\r\n    /**\r\n     * Decodes a hex encoded string to a ByteBuffer.\r\n     * @param {string} str String to decode\r\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_ENDIAN}.\r\n     * @param {boolean=} noAssert Whether to skip assertions of offsets and values. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_NOASSERT}.\r\n     * @returns {!ByteBuffer} ByteBuffer\r\n     * @expose\r\n     */\r\n    ByteBuffer.fromHex = function(str, littleEndian, noAssert) {\r\n        if (!noAssert) {\r\n            if (typeof str !== 'string')\r\n                throw TypeError(\"Illegal str: Not a string\");\r\n            if (str.length % 2 !== 0)\r\n                throw TypeError(\"Illegal str: Length not a multiple of 2\");\r\n        }\r\n        var k = str.length,\r\n            bb = new ByteBuffer((k / 2) | 0, littleEndian),\r\n            b;\r\n        for (var i=0, j=0; i<k; i+=2) {\r\n            b = parseInt(str.substring(i, i+2), 16);\r\n            if (!noAssert)\r\n                if (!isFinite(b) || b < 0 || b > 255)\r\n                    throw TypeError(\"Illegal str: Contains non-hex characters\");\r\n            bb.view[j++] = b;\r\n        }\r\n        bb.limit = j;\r\n        return bb;\r\n    };\r\n\r\n    // utfx-embeddable\r\n\r\n    /**\r\n     * utfx-embeddable (c) 2014 Daniel Wirtz <dcode@dcode.io>\r\n     * Released under the Apache License, Version 2.0\r\n     * see: https://github.com/dcodeIO/utfx for details\r\n     */\r\n    var utfx = function() {\r\n        \"use strict\";\r\n\r\n        /**\r\n         * utfx namespace.\r\n         * @inner\r\n         * @type {!Object.<string,*>}\r\n         */\r\n        var utfx = {};\r\n\r\n        /**\r\n         * Maximum valid code point.\r\n         * @type {number}\r\n         * @const\r\n         */\r\n        utfx.MAX_CODEPOINT = 0x10FFFF;\r\n\r\n        /**\r\n         * Encodes UTF8 code points to UTF8 bytes.\r\n         * @param {(!function():number|null) | number} src Code points source, either as a function returning the next code point\r\n         *  respectively `null` if there are no more code points left or a single numeric code point.\r\n         * @param {!function(number)} dst Bytes destination as a function successively called with the next byte\r\n         */\r\n        utfx.encodeUTF8 = function(src, dst) {\r\n            var cp = null;\r\n            if (typeof src === 'number')\r\n                cp = src,\r\n                src = function() { return null; };\r\n            while (cp !== null || (cp = src()) !== null) {\r\n                if (cp < 0x80)\r\n                    dst(cp&0x7F);\r\n                else if (cp < 0x800)\r\n                    dst(((cp>>6)&0x1F)|0xC0),\r\n                    dst((cp&0x3F)|0x80);\r\n                else if (cp < 0x10000)\r\n                    dst(((cp>>12)&0x0F)|0xE0),\r\n                    dst(((cp>>6)&0x3F)|0x80),\r\n                    dst((cp&0x3F)|0x80);\r\n                else\r\n                    dst(((cp>>18)&0x07)|0xF0),\r\n                    dst(((cp>>12)&0x3F)|0x80),\r\n                    dst(((cp>>6)&0x3F)|0x80),\r\n                    dst((cp&0x3F)|0x80);\r\n                cp = null;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Decodes UTF8 bytes to UTF8 code points.\r\n         * @param {!function():number|null} src Bytes source as a function returning the next byte respectively `null` if there\r\n         *  are no more bytes left.\r\n         * @param {!function(number)} dst Code points destination as a function successively called with each decoded code point.\r\n         * @throws {RangeError} If a starting byte is invalid in UTF8\r\n         * @throws {Error} If the last sequence is truncated. Has an array property `bytes` holding the\r\n         *  remaining bytes.\r\n         */\r\n        utfx.decodeUTF8 = function(src, dst) {\r\n            var a, b, c, d, fail = function(b) {\r\n                b = b.slice(0, b.indexOf(null));\r\n                var err = Error(b.toString());\r\n                err.name = \"TruncatedError\";\r\n                err['bytes'] = b;\r\n                throw err;\r\n            };\r\n            while ((a = src()) !== null) {\r\n                if ((a&0x80) === 0)\r\n                    dst(a);\r\n                else if ((a&0xE0) === 0xC0)\r\n                    ((b = src()) === null) && fail([a, b]),\r\n                    dst(((a&0x1F)<<6) | (b&0x3F));\r\n                else if ((a&0xF0) === 0xE0)\r\n                    ((b=src()) === null || (c=src()) === null) && fail([a, b, c]),\r\n                    dst(((a&0x0F)<<12) | ((b&0x3F)<<6) | (c&0x3F));\r\n                else if ((a&0xF8) === 0xF0)\r\n                    ((b=src()) === null || (c=src()) === null || (d=src()) === null) && fail([a, b, c ,d]),\r\n                    dst(((a&0x07)<<18) | ((b&0x3F)<<12) | ((c&0x3F)<<6) | (d&0x3F));\r\n                else throw RangeError(\"Illegal starting byte: \"+a);\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Converts UTF16 characters to UTF8 code points.\r\n         * @param {!function():number|null} src Characters source as a function returning the next char code respectively\r\n         *  `null` if there are no more characters left.\r\n         * @param {!function(number)} dst Code points destination as a function successively called with each converted code\r\n         *  point.\r\n         */\r\n        utfx.UTF16toUTF8 = function(src, dst) {\r\n            var c1, c2 = null;\r\n            while (true) {\r\n                if ((c1 = c2 !== null ? c2 : src()) === null)\r\n                    break;\r\n                if (c1 >= 0xD800 && c1 <= 0xDFFF) {\r\n                    if ((c2 = src()) !== null) {\r\n                        if (c2 >= 0xDC00 && c2 <= 0xDFFF) {\r\n                            dst((c1-0xD800)*0x400+c2-0xDC00+0x10000);\r\n                            c2 = null; continue;\r\n                        }\r\n                    }\r\n                }\r\n                dst(c1);\r\n            }\r\n            if (c2 !== null) dst(c2);\r\n        };\r\n\r\n        /**\r\n         * Converts UTF8 code points to UTF16 characters.\r\n         * @param {(!function():number|null) | number} src Code points source, either as a function returning the next code point\r\n         *  respectively `null` if there are no more code points left or a single numeric code point.\r\n         * @param {!function(number)} dst Characters destination as a function successively called with each converted char code.\r\n         * @throws {RangeError} If a code point is out of range\r\n         */\r\n        utfx.UTF8toUTF16 = function(src, dst) {\r\n            var cp = null;\r\n            if (typeof src === 'number')\r\n                cp = src, src = function() { return null; };\r\n            while (cp !== null || (cp = src()) !== null) {\r\n                if (cp <= 0xFFFF)\r\n                    dst(cp);\r\n                else\r\n                    cp -= 0x10000,\r\n                    dst((cp>>10)+0xD800),\r\n                    dst((cp%0x400)+0xDC00);\r\n                cp = null;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Converts and encodes UTF16 characters to UTF8 bytes.\r\n         * @param {!function():number|null} src Characters source as a function returning the next char code respectively `null`\r\n         *  if there are no more characters left.\r\n         * @param {!function(number)} dst Bytes destination as a function successively called with the next byte.\r\n         */\r\n        utfx.encodeUTF16toUTF8 = function(src, dst) {\r\n            utfx.UTF16toUTF8(src, function(cp) {\r\n                utfx.encodeUTF8(cp, dst);\r\n            });\r\n        };\r\n\r\n        /**\r\n         * Decodes and converts UTF8 bytes to UTF16 characters.\r\n         * @param {!function():number|null} src Bytes source as a function returning the next byte respectively `null` if there\r\n         *  are no more bytes left.\r\n         * @param {!function(number)} dst Characters destination as a function successively called with each converted char code.\r\n         * @throws {RangeError} If a starting byte is invalid in UTF8\r\n         * @throws {Error} If the last sequence is truncated. Has an array property `bytes` holding the remaining bytes.\r\n         */\r\n        utfx.decodeUTF8toUTF16 = function(src, dst) {\r\n            utfx.decodeUTF8(src, function(cp) {\r\n                utfx.UTF8toUTF16(cp, dst);\r\n            });\r\n        };\r\n\r\n        /**\r\n         * Calculates the byte length of an UTF8 code point.\r\n         * @param {number} cp UTF8 code point\r\n         * @returns {number} Byte length\r\n         */\r\n        utfx.calculateCodePoint = function(cp) {\r\n            return (cp < 0x80) ? 1 : (cp < 0x800) ? 2 : (cp < 0x10000) ? 3 : 4;\r\n        };\r\n\r\n        /**\r\n         * Calculates the number of UTF8 bytes required to store UTF8 code points.\r\n         * @param {(!function():number|null)} src Code points source as a function returning the next code point respectively\r\n         *  `null` if there are no more code points left.\r\n         * @returns {number} The number of UTF8 bytes required\r\n         */\r\n        utfx.calculateUTF8 = function(src) {\r\n            var cp, l=0;\r\n            while ((cp = src()) !== null)\r\n                l += (cp < 0x80) ? 1 : (cp < 0x800) ? 2 : (cp < 0x10000) ? 3 : 4;\r\n            return l;\r\n        };\r\n\r\n        /**\r\n         * Calculates the number of UTF8 code points respectively UTF8 bytes required to store UTF16 char codes.\r\n         * @param {(!function():number|null)} src Characters source as a function returning the next char code respectively\r\n         *  `null` if there are no more characters left.\r\n         * @returns {!Array.<number>} The number of UTF8 code points at index 0 and the number of UTF8 bytes required at index 1.\r\n         */\r\n        utfx.calculateUTF16asUTF8 = function(src) {\r\n            var n=0, l=0;\r\n            utfx.UTF16toUTF8(src, function(cp) {\r\n                ++n; l += (cp < 0x80) ? 1 : (cp < 0x800) ? 2 : (cp < 0x10000) ? 3 : 4;\r\n            });\r\n            return [n,l];\r\n        };\r\n\r\n        return utfx;\r\n    }();\r\n\r\n    // encodings/utf8\r\n\r\n    /**\r\n     * Encodes this ByteBuffer's contents between {@link ByteBuffer#offset} and {@link ByteBuffer#limit} to an UTF8 encoded\r\n     *  string.\r\n     * @returns {string} Hex encoded string\r\n     * @throws {RangeError} If `offset > limit`\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.toUTF8 = function(begin, end) {\r\n        if (typeof begin === 'undefined') begin = this.offset;\r\n        if (typeof end === 'undefined') end = this.limit;\r\n        if (!this.noAssert) {\r\n            if (typeof begin !== 'number' || begin % 1 !== 0)\n                throw TypeError(\"Illegal begin: Not an integer\");\n            begin >>>= 0;\n            if (typeof end !== 'number' || end % 1 !== 0)\n                throw TypeError(\"Illegal end: Not an integer\");\n            end >>>= 0;\n            if (begin < 0 || begin > end || end > this.buffer.byteLength)\n                throw RangeError(\"Illegal range: 0 <= \"+begin+\" <= \"+end+\" <= \"+this.buffer.byteLength);\n        }\r\n        var sd; try {\r\n            utfx.decodeUTF8toUTF16(function() {\r\n                return begin < end ? this.view[begin++] : null;\r\n            }.bind(this), sd = stringDestination());\r\n        } catch (e) {\r\n            if (begin !== end)\r\n                throw RangeError(\"Illegal range: Truncated data, \"+begin+\" != \"+end);\r\n        }\r\n        return sd();\r\n    };\r\n\r\n    /**\r\n     * Decodes an UTF8 encoded string to a ByteBuffer.\r\n     * @param {string} str String to decode\r\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_ENDIAN}.\r\n     * @param {boolean=} noAssert Whether to skip assertions of offsets and values. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_NOASSERT}.\r\n     * @returns {!ByteBuffer} ByteBuffer\r\n     * @expose\r\n     */\r\n    ByteBuffer.fromUTF8 = function(str, littleEndian, noAssert) {\r\n        if (!noAssert)\r\n            if (typeof str !== 'string')\r\n                throw TypeError(\"Illegal str: Not a string\");\r\n        var bb = new ByteBuffer(utfx.calculateUTF16asUTF8(stringSource(str), true)[1], littleEndian, noAssert),\r\n            i = 0;\r\n        utfx.encodeUTF16toUTF8(stringSource(str), function(b) {\r\n            bb.view[i++] = b;\r\n        });\r\n        bb.limit = i;\r\n        return bb;\r\n    };\r\n\r\n    return ByteBuffer;\r\n});\r\n","/*\r\n Copyright 2013 Daniel Wirtz <dcode@dcode.io>\r\n Copyright 2009 The Closure Library Authors. All Rights Reserved.\r\n\r\n Licensed under the Apache License, Version 2.0 (the \"License\");\r\n you may not use this file except in compliance with the License.\r\n You may obtain a copy of the License at\r\n\r\n http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n Unless required by applicable law or agreed to in writing, software\r\n distributed under the License is distributed on an \"AS-IS\" BASIS,\r\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n See the License for the specific language governing permissions and\r\n limitations under the License.\r\n */\r\n\r\n/**\r\n * @license long.js (c) 2013 Daniel Wirtz <dcode@dcode.io>\r\n * Released under the Apache License, Version 2.0\r\n * see: https://github.com/dcodeIO/long.js for details\r\n */\r\n(function(global, factory) {\r\n\r\n    /* AMD */ if (typeof define === 'function' && define[\"amd\"])\r\n        define([], factory);\r\n    /* CommonJS */ else if (typeof require === 'function' && typeof module === \"object\" && module && module[\"exports\"])\r\n        module[\"exports\"] = factory();\r\n    /* Global */ else\r\n        (global[\"dcodeIO\"] = global[\"dcodeIO\"] || {})[\"Long\"] = factory();\r\n\r\n})(this, function() {\r\n    \"use strict\";\r\n\r\n    /**\r\n     * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\r\n     *  See the from* functions below for more convenient ways of constructing Longs.\r\n     * @exports Long\r\n     * @class A Long class for representing a 64 bit two's-complement integer value.\r\n     * @param {number} low The low (signed) 32 bits of the long\r\n     * @param {number} high The high (signed) 32 bits of the long\r\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to `false` for signed\r\n     * @constructor\r\n     */\r\n    function Long(low, high, unsigned) {\r\n\r\n        /**\r\n         * The low 32 bits as a signed value.\r\n         * @type {number}\r\n         * @expose\r\n         */\r\n        this.low = low | 0;\r\n\r\n        /**\r\n         * The high 32 bits as a signed value.\r\n         * @type {number}\r\n         * @expose\r\n         */\r\n        this.high = high | 0;\r\n\r\n        /**\r\n         * Whether unsigned or not.\r\n         * @type {boolean}\r\n         * @expose\r\n         */\r\n        this.unsigned = !!unsigned;\r\n    }\r\n\r\n    // The internal representation of a long is the two given signed, 32-bit values.\r\n    // We use 32-bit pieces because these are the size of integers on which\r\n    // Javascript performs bit-operations.  For operations like addition and\r\n    // multiplication, we split each number into 16 bit pieces, which can easily be\r\n    // multiplied within Javascript's floating-point representation without overflow\r\n    // or change in sign.\r\n    //\r\n    // In the algorithms below, we frequently reduce the negative case to the\r\n    // positive case by negating the input(s) and then post-processing the result.\r\n    // Note that we must ALWAYS check specially whether those values are MIN_VALUE\r\n    // (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\r\n    // a positive number, it overflows back into a negative).  Not handling this\r\n    // case would often result in infinite recursion.\r\n    //\r\n    // Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\r\n    // methods on which they depend.\r\n\r\n    /**\r\n     * An indicator used to reliably determine if an object is a Long or not.\r\n     * @type {boolean}\r\n     * @const\r\n     * @expose\r\n     * @private\r\n     */\r\n    Long.__isLong__;\r\n\r\n    Object.defineProperty(Long.prototype, \"__isLong__\", {\r\n        value: true,\r\n        enumerable: false,\r\n        configurable: false\r\n    });\r\n\r\n    /**\r\n     * @function\r\n     * @param {*} obj Object\r\n     * @returns {boolean}\r\n     * @inner\r\n     */\r\n    function isLong(obj) {\r\n        return (obj && obj[\"__isLong__\"]) === true;\r\n    }\r\n\r\n    /**\r\n     * Tests if the specified object is a Long.\r\n     * @function\r\n     * @param {*} obj Object\r\n     * @returns {boolean}\r\n     * @expose\r\n     */\r\n    Long.isLong = isLong;\r\n\r\n    /**\r\n     * A cache of the Long representations of small integer values.\r\n     * @type {!Object}\r\n     * @inner\r\n     */\r\n    var INT_CACHE = {};\r\n\r\n    /**\r\n     * A cache of the Long representations of small unsigned integer values.\r\n     * @type {!Object}\r\n     * @inner\r\n     */\r\n    var UINT_CACHE = {};\r\n\r\n    /**\r\n     * @param {number} value\r\n     * @param {boolean=} unsigned\r\n     * @returns {!Long}\r\n     * @inner\r\n     */\r\n    function fromInt(value, unsigned) {\r\n        var obj, cachedObj, cache;\r\n        if (unsigned) {\r\n            value >>>= 0;\r\n            if (cache = (0 <= value && value < 256)) {\r\n                cachedObj = UINT_CACHE[value];\r\n                if (cachedObj)\r\n                    return cachedObj;\r\n            }\r\n            obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\r\n            if (cache)\r\n                UINT_CACHE[value] = obj;\r\n            return obj;\r\n        } else {\r\n            value |= 0;\r\n            if (cache = (-128 <= value && value < 128)) {\r\n                cachedObj = INT_CACHE[value];\r\n                if (cachedObj)\r\n                    return cachedObj;\r\n            }\r\n            obj = fromBits(value, value < 0 ? -1 : 0, false);\r\n            if (cache)\r\n                INT_CACHE[value] = obj;\r\n            return obj;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns a Long representing the given 32 bit integer value.\r\n     * @function\r\n     * @param {number} value The 32 bit integer in question\r\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to `false` for signed\r\n     * @returns {!Long} The corresponding Long value\r\n     * @expose\r\n     */\r\n    Long.fromInt = fromInt;\r\n\r\n    /**\r\n     * @param {number} value\r\n     * @param {boolean=} unsigned\r\n     * @returns {!Long}\r\n     * @inner\r\n     */\r\n    function fromNumber(value, unsigned) {\r\n        if (isNaN(value) || !isFinite(value))\r\n            return unsigned ? UZERO : ZERO;\r\n        if (unsigned) {\r\n            if (value < 0)\r\n                return UZERO;\r\n            if (value >= TWO_PWR_64_DBL)\r\n                return MAX_UNSIGNED_VALUE;\r\n        } else {\r\n            if (value <= -TWO_PWR_63_DBL)\r\n                return MIN_VALUE;\r\n            if (value + 1 >= TWO_PWR_63_DBL)\r\n                return MAX_VALUE;\r\n        }\r\n        if (value < 0)\r\n            return fromNumber(-value, unsigned).neg();\r\n        return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\r\n    }\r\n\r\n    /**\r\n     * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\r\n     * @function\r\n     * @param {number} value The number in question\r\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to `false` for signed\r\n     * @returns {!Long} The corresponding Long value\r\n     * @expose\r\n     */\r\n    Long.fromNumber = fromNumber;\r\n\r\n    /**\r\n     * @param {number} lowBits\r\n     * @param {number} highBits\r\n     * @param {boolean=} unsigned\r\n     * @returns {!Long}\r\n     * @inner\r\n     */\r\n    function fromBits(lowBits, highBits, unsigned) {\r\n        return new Long(lowBits, highBits, unsigned);\r\n    }\r\n\r\n    /**\r\n     * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\r\n     *  assumed to use 32 bits.\r\n     * @function\r\n     * @param {number} lowBits The low 32 bits\r\n     * @param {number} highBits The high 32 bits\r\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to `false` for signed\r\n     * @returns {!Long} The corresponding Long value\r\n     * @expose\r\n     */\r\n    Long.fromBits = fromBits;\r\n\r\n    /**\r\n     * @function\r\n     * @param {number} base\r\n     * @param {number} exponent\r\n     * @returns {number}\r\n     * @inner\r\n     */\r\n    var pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\r\n\r\n    /**\r\n     * @param {string} str\r\n     * @param {(boolean|number)=} unsigned\r\n     * @param {number=} radix\r\n     * @returns {!Long}\r\n     * @inner\r\n     */\r\n    function fromString(str, unsigned, radix) {\r\n        if (str.length === 0)\r\n            throw Error('empty string');\r\n        if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\r\n            return ZERO;\r\n        if (typeof unsigned === 'number') // For goog.math.long compatibility\r\n            radix = unsigned,\r\n            unsigned = false;\r\n        radix = radix || 10;\r\n        if (radix < 2 || 36 < radix)\r\n            throw RangeError('radix');\r\n\r\n        var p;\r\n        if ((p = str.indexOf('-')) > 0)\r\n            throw Error('interior hyphen');\r\n        else if (p === 0) {\r\n            return fromString(str.substring(1), unsigned, radix).neg();\r\n        }\r\n\r\n        // Do several (8) digits each time through the loop, so as to\r\n        // minimize the calls to the very expensive emulated div.\r\n        var radixToPower = fromNumber(pow_dbl(radix, 8));\r\n\r\n        var result = ZERO;\r\n        for (var i = 0; i < str.length; i += 8) {\r\n            var size = Math.min(8, str.length - i),\r\n                value = parseInt(str.substring(i, i + size), radix);\r\n            if (size < 8) {\r\n                var power = fromNumber(pow_dbl(radix, size));\r\n                result = result.mul(power).add(fromNumber(value));\r\n            } else {\r\n                result = result.mul(radixToPower);\r\n                result = result.add(fromNumber(value));\r\n            }\r\n        }\r\n        result.unsigned = unsigned;\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Returns a Long representation of the given string, written using the specified radix.\r\n     * @function\r\n     * @param {string} str The textual representation of the Long\r\n     * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to `false` for signed\r\n     * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\r\n     * @returns {!Long} The corresponding Long value\r\n     * @expose\r\n     */\r\n    Long.fromString = fromString;\r\n\r\n    /**\r\n     * @function\r\n     * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\r\n     * @returns {!Long}\r\n     * @inner\r\n     */\r\n    function fromValue(val) {\r\n        if (val /* is compatible */ instanceof Long)\r\n            return val;\r\n        if (typeof val === 'number')\r\n            return fromNumber(val);\r\n        if (typeof val === 'string')\r\n            return fromString(val);\r\n        // Throws for non-objects, converts non-instanceof Long:\r\n        return fromBits(val.low, val.high, val.unsigned);\r\n    }\r\n\r\n    /**\r\n     * Converts the specified value to a Long.\r\n     * @function\r\n     * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\r\n     * @returns {!Long}\r\n     * @expose\r\n     */\r\n    Long.fromValue = fromValue;\r\n\r\n    // NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\r\n    // no runtime penalty for these.\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_16_DBL = 1 << 16;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_24_DBL = 1 << 24;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var ZERO = fromInt(0);\r\n\r\n    /**\r\n     * Signed zero.\r\n     * @type {!Long}\r\n     * @expose\r\n     */\r\n    Long.ZERO = ZERO;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var UZERO = fromInt(0, true);\r\n\r\n    /**\r\n     * Unsigned zero.\r\n     * @type {!Long}\r\n     * @expose\r\n     */\r\n    Long.UZERO = UZERO;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var ONE = fromInt(1);\r\n\r\n    /**\r\n     * Signed one.\r\n     * @type {!Long}\r\n     * @expose\r\n     */\r\n    Long.ONE = ONE;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var UONE = fromInt(1, true);\r\n\r\n    /**\r\n     * Unsigned one.\r\n     * @type {!Long}\r\n     * @expose\r\n     */\r\n    Long.UONE = UONE;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var NEG_ONE = fromInt(-1);\r\n\r\n    /**\r\n     * Signed negative one.\r\n     * @type {!Long}\r\n     * @expose\r\n     */\r\n    Long.NEG_ONE = NEG_ONE;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var MAX_VALUE = fromBits(0xFFFFFFFF|0, 0x7FFFFFFF|0, false);\r\n\r\n    /**\r\n     * Maximum signed value.\r\n     * @type {!Long}\r\n     * @expose\r\n     */\r\n    Long.MAX_VALUE = MAX_VALUE;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF|0, 0xFFFFFFFF|0, true);\r\n\r\n    /**\r\n     * Maximum unsigned value.\r\n     * @type {!Long}\r\n     * @expose\r\n     */\r\n    Long.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var MIN_VALUE = fromBits(0, 0x80000000|0, false);\r\n\r\n    /**\r\n     * Minimum signed value.\r\n     * @type {!Long}\r\n     * @expose\r\n     */\r\n    Long.MIN_VALUE = MIN_VALUE;\r\n\r\n    /**\r\n     * @alias Long.prototype\r\n     * @inner\r\n     */\r\n    var LongPrototype = Long.prototype;\r\n\r\n    /**\r\n     * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\r\n     * @returns {number}\r\n     * @expose\r\n     */\r\n    LongPrototype.toInt = function toInt() {\r\n        return this.unsigned ? this.low >>> 0 : this.low;\r\n    };\r\n\r\n    /**\r\n     * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\r\n     * @returns {number}\r\n     * @expose\r\n     */\r\n    LongPrototype.toNumber = function toNumber() {\r\n        if (this.unsigned)\r\n            return ((this.high >>> 0) * TWO_PWR_32_DBL) + (this.low >>> 0);\r\n        return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\r\n    };\r\n\r\n    /**\r\n     * Converts the Long to a string written in the specified radix.\r\n     * @param {number=} radix Radix (2-36), defaults to 10\r\n     * @returns {string}\r\n     * @override\r\n     * @throws {RangeError} If `radix` is out of range\r\n     * @expose\r\n     */\r\n    LongPrototype.toString = function toString(radix) {\r\n        radix = radix || 10;\r\n        if (radix < 2 || 36 < radix)\r\n            throw RangeError('radix');\r\n        if (this.isZero())\r\n            return '0';\r\n        if (this.isNegative()) { // Unsigned Longs are never negative\r\n            if (this.eq(MIN_VALUE)) {\r\n                // We need to change the Long value before it can be negated, so we remove\r\n                // the bottom-most digit in this base and then recurse to do the rest.\r\n                var radixLong = fromNumber(radix),\r\n                    div = this.div(radixLong),\r\n                    rem1 = div.mul(radixLong).sub(this);\r\n                return div.toString(radix) + rem1.toInt().toString(radix);\r\n            } else\r\n                return '-' + this.neg().toString(radix);\r\n        }\r\n\r\n        // Do several (6) digits each time through the loop, so as to\r\n        // minimize the calls to the very expensive emulated div.\r\n        var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),\r\n            rem = this;\r\n        var result = '';\r\n        while (true) {\r\n            var remDiv = rem.div(radixToPower),\r\n                intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,\r\n                digits = intval.toString(radix);\r\n            rem = remDiv;\r\n            if (rem.isZero())\r\n                return digits + result;\r\n            else {\r\n                while (digits.length < 6)\r\n                    digits = '0' + digits;\r\n                result = '' + digits + result;\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Gets the high 32 bits as a signed integer.\r\n     * @returns {number} Signed high bits\r\n     * @expose\r\n     */\r\n    LongPrototype.getHighBits = function getHighBits() {\r\n        return this.high;\r\n    };\r\n\r\n    /**\r\n     * Gets the high 32 bits as an unsigned integer.\r\n     * @returns {number} Unsigned high bits\r\n     * @expose\r\n     */\r\n    LongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {\r\n        return this.high >>> 0;\r\n    };\r\n\r\n    /**\r\n     * Gets the low 32 bits as a signed integer.\r\n     * @returns {number} Signed low bits\r\n     * @expose\r\n     */\r\n    LongPrototype.getLowBits = function getLowBits() {\r\n        return this.low;\r\n    };\r\n\r\n    /**\r\n     * Gets the low 32 bits as an unsigned integer.\r\n     * @returns {number} Unsigned low bits\r\n     * @expose\r\n     */\r\n    LongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {\r\n        return this.low >>> 0;\r\n    };\r\n\r\n    /**\r\n     * Gets the number of bits needed to represent the absolute value of this Long.\r\n     * @returns {number}\r\n     * @expose\r\n     */\r\n    LongPrototype.getNumBitsAbs = function getNumBitsAbs() {\r\n        if (this.isNegative()) // Unsigned Longs are never negative\r\n            return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\r\n        var val = this.high != 0 ? this.high : this.low;\r\n        for (var bit = 31; bit > 0; bit--)\r\n            if ((val & (1 << bit)) != 0)\r\n                break;\r\n        return this.high != 0 ? bit + 33 : bit + 1;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value equals zero.\r\n     * @returns {boolean}\r\n     * @expose\r\n     */\r\n    LongPrototype.isZero = function isZero() {\r\n        return this.high === 0 && this.low === 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is negative.\r\n     * @returns {boolean}\r\n     * @expose\r\n     */\r\n    LongPrototype.isNegative = function isNegative() {\r\n        return !this.unsigned && this.high < 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is positive.\r\n     * @returns {boolean}\r\n     * @expose\r\n     */\r\n    LongPrototype.isPositive = function isPositive() {\r\n        return this.unsigned || this.high >= 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is odd.\r\n     * @returns {boolean}\r\n     * @expose\r\n     */\r\n    LongPrototype.isOdd = function isOdd() {\r\n        return (this.low & 1) === 1;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is even.\r\n     * @returns {boolean}\r\n     * @expose\r\n     */\r\n    LongPrototype.isEven = function isEven() {\r\n        return (this.low & 1) === 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value equals the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     * @expose\r\n     */\r\n    LongPrototype.equals = function equals(other) {\r\n        if (!isLong(other))\r\n            other = fromValue(other);\r\n        if (this.unsigned !== other.unsigned && (this.high >>> 31) === 1 && (other.high >>> 31) === 1)\r\n            return false;\r\n        return this.high === other.high && this.low === other.low;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     * @expose\r\n     */\r\n    LongPrototype.eq = LongPrototype.equals;\r\n\r\n    /**\r\n     * Tests if this Long's value differs from the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     * @expose\r\n     */\r\n    LongPrototype.notEquals = function notEquals(other) {\r\n        return !this.eq(/* validates */ other);\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     * @expose\r\n     */\r\n    LongPrototype.neq = LongPrototype.notEquals;\r\n\r\n    /**\r\n     * Tests if this Long's value is less than the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     * @expose\r\n     */\r\n    LongPrototype.lessThan = function lessThan(other) {\r\n        return this.comp(/* validates */ other) < 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     * @expose\r\n     */\r\n    LongPrototype.lt = LongPrototype.lessThan;\r\n\r\n    /**\r\n     * Tests if this Long's value is less than or equal the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     * @expose\r\n     */\r\n    LongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {\r\n        return this.comp(/* validates */ other) <= 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     * @expose\r\n     */\r\n    LongPrototype.lte = LongPrototype.lessThanOrEqual;\r\n\r\n    /**\r\n     * Tests if this Long's value is greater than the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     * @expose\r\n     */\r\n    LongPrototype.greaterThan = function greaterThan(other) {\r\n        return this.comp(/* validates */ other) > 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     * @expose\r\n     */\r\n    LongPrototype.gt = LongPrototype.greaterThan;\r\n\r\n    /**\r\n     * Tests if this Long's value is greater than or equal the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     * @expose\r\n     */\r\n    LongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {\r\n        return this.comp(/* validates */ other) >= 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     * @expose\r\n     */\r\n    LongPrototype.gte = LongPrototype.greaterThanOrEqual;\r\n\r\n    /**\r\n     * Compares this Long's value with the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n     *  if the given one is greater\r\n     * @expose\r\n     */\r\n    LongPrototype.compare = function compare(other) {\r\n        if (!isLong(other))\r\n            other = fromValue(other);\r\n        if (this.eq(other))\r\n            return 0;\r\n        var thisNeg = this.isNegative(),\r\n            otherNeg = other.isNegative();\r\n        if (thisNeg && !otherNeg)\r\n            return -1;\r\n        if (!thisNeg && otherNeg)\r\n            return 1;\r\n        // At this point the sign bits are the same\r\n        if (!this.unsigned)\r\n            return this.sub(other).isNegative() ? -1 : 1;\r\n        // Both are positive if at least one is unsigned\r\n        return (other.high >>> 0) > (this.high >>> 0) || (other.high === this.high && (other.low >>> 0) > (this.low >>> 0)) ? -1 : 1;\r\n    };\r\n\r\n    /**\r\n     * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n     *  if the given one is greater\r\n     * @expose\r\n     */\r\n    LongPrototype.comp = LongPrototype.compare;\r\n\r\n    /**\r\n     * Negates this Long's value.\r\n     * @returns {!Long} Negated Long\r\n     * @expose\r\n     */\r\n    LongPrototype.negate = function negate() {\r\n        if (!this.unsigned && this.eq(MIN_VALUE))\r\n            return MIN_VALUE;\r\n        return this.not().add(ONE);\r\n    };\r\n\r\n    /**\r\n     * Negates this Long's value. This is an alias of {@link Long#negate}.\r\n     * @function\r\n     * @returns {!Long} Negated Long\r\n     * @expose\r\n     */\r\n    LongPrototype.neg = LongPrototype.negate;\r\n\r\n    /**\r\n     * Returns the sum of this and the specified Long.\r\n     * @param {!Long|number|string} addend Addend\r\n     * @returns {!Long} Sum\r\n     * @expose\r\n     */\r\n    LongPrototype.add = function add(addend) {\r\n        if (!isLong(addend))\r\n            addend = fromValue(addend);\r\n\r\n        // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\r\n\r\n        var a48 = this.high >>> 16;\r\n        var a32 = this.high & 0xFFFF;\r\n        var a16 = this.low >>> 16;\r\n        var a00 = this.low & 0xFFFF;\r\n\r\n        var b48 = addend.high >>> 16;\r\n        var b32 = addend.high & 0xFFFF;\r\n        var b16 = addend.low >>> 16;\r\n        var b00 = addend.low & 0xFFFF;\r\n\r\n        var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n        c00 += a00 + b00;\r\n        c16 += c00 >>> 16;\r\n        c00 &= 0xFFFF;\r\n        c16 += a16 + b16;\r\n        c32 += c16 >>> 16;\r\n        c16 &= 0xFFFF;\r\n        c32 += a32 + b32;\r\n        c48 += c32 >>> 16;\r\n        c32 &= 0xFFFF;\r\n        c48 += a48 + b48;\r\n        c48 &= 0xFFFF;\r\n        return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns the difference of this and the specified Long.\r\n     * @param {!Long|number|string} subtrahend Subtrahend\r\n     * @returns {!Long} Difference\r\n     * @expose\r\n     */\r\n    LongPrototype.subtract = function subtract(subtrahend) {\r\n        if (!isLong(subtrahend))\r\n            subtrahend = fromValue(subtrahend);\r\n        return this.add(subtrahend.neg());\r\n    };\r\n\r\n    /**\r\n     * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\r\n     * @function\r\n     * @param {!Long|number|string} subtrahend Subtrahend\r\n     * @returns {!Long} Difference\r\n     * @expose\r\n     */\r\n    LongPrototype.sub = LongPrototype.subtract;\r\n\r\n    /**\r\n     * Returns the product of this and the specified Long.\r\n     * @param {!Long|number|string} multiplier Multiplier\r\n     * @returns {!Long} Product\r\n     * @expose\r\n     */\r\n    LongPrototype.multiply = function multiply(multiplier) {\r\n        if (this.isZero())\r\n            return ZERO;\r\n        if (!isLong(multiplier))\r\n            multiplier = fromValue(multiplier);\r\n        if (multiplier.isZero())\r\n            return ZERO;\r\n        if (this.eq(MIN_VALUE))\r\n            return multiplier.isOdd() ? MIN_VALUE : ZERO;\r\n        if (multiplier.eq(MIN_VALUE))\r\n            return this.isOdd() ? MIN_VALUE : ZERO;\r\n\r\n        if (this.isNegative()) {\r\n            if (multiplier.isNegative())\r\n                return this.neg().mul(multiplier.neg());\r\n            else\r\n                return this.neg().mul(multiplier).neg();\r\n        } else if (multiplier.isNegative())\r\n            return this.mul(multiplier.neg()).neg();\r\n\r\n        // If both longs are small, use float multiplication\r\n        if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))\r\n            return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\r\n\r\n        // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\r\n        // We can skip products that would overflow.\r\n\r\n        var a48 = this.high >>> 16;\r\n        var a32 = this.high & 0xFFFF;\r\n        var a16 = this.low >>> 16;\r\n        var a00 = this.low & 0xFFFF;\r\n\r\n        var b48 = multiplier.high >>> 16;\r\n        var b32 = multiplier.high & 0xFFFF;\r\n        var b16 = multiplier.low >>> 16;\r\n        var b00 = multiplier.low & 0xFFFF;\r\n\r\n        var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n        c00 += a00 * b00;\r\n        c16 += c00 >>> 16;\r\n        c00 &= 0xFFFF;\r\n        c16 += a16 * b00;\r\n        c32 += c16 >>> 16;\r\n        c16 &= 0xFFFF;\r\n        c16 += a00 * b16;\r\n        c32 += c16 >>> 16;\r\n        c16 &= 0xFFFF;\r\n        c32 += a32 * b00;\r\n        c48 += c32 >>> 16;\r\n        c32 &= 0xFFFF;\r\n        c32 += a16 * b16;\r\n        c48 += c32 >>> 16;\r\n        c32 &= 0xFFFF;\r\n        c32 += a00 * b32;\r\n        c48 += c32 >>> 16;\r\n        c32 &= 0xFFFF;\r\n        c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\r\n        c48 &= 0xFFFF;\r\n        return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\r\n     * @function\r\n     * @param {!Long|number|string} multiplier Multiplier\r\n     * @returns {!Long} Product\r\n     * @expose\r\n     */\r\n    LongPrototype.mul = LongPrototype.multiply;\r\n\r\n    /**\r\n     * Returns this Long divided by the specified.\r\n     * @param {!Long|number|string} divisor Divisor\r\n     * @returns {!Long} Quotient\r\n     * @expose\r\n     */\r\n    LongPrototype.divide = function divide(divisor) {\r\n        if (!isLong(divisor))\r\n            divisor = fromValue(divisor);\r\n        if (divisor.isZero())\r\n            throw Error('division by zero');\r\n        if (this.isZero())\r\n            return this.unsigned ? UZERO : ZERO;\r\n        var approx, rem, res;\r\n        if (this.eq(MIN_VALUE)) {\r\n            if (divisor.eq(ONE) || divisor.eq(NEG_ONE))\r\n                return MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\r\n            else if (divisor.eq(MIN_VALUE))\r\n                return ONE;\r\n            else {\r\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\r\n                var halfThis = this.shr(1);\r\n                approx = halfThis.div(divisor).shl(1);\r\n                if (approx.eq(ZERO)) {\r\n                    return divisor.isNegative() ? ONE : NEG_ONE;\r\n                } else {\r\n                    rem = this.sub(divisor.mul(approx));\r\n                    res = approx.add(rem.div(divisor));\r\n                    return res;\r\n                }\r\n            }\r\n        } else if (divisor.eq(MIN_VALUE))\r\n            return this.unsigned ? UZERO : ZERO;\r\n        if (this.isNegative()) {\r\n            if (divisor.isNegative())\r\n                return this.neg().div(divisor.neg());\r\n            return this.neg().div(divisor).neg();\r\n        } else if (divisor.isNegative())\r\n            return this.div(divisor.neg()).neg();\r\n\r\n        // Repeat the following until the remainder is less than other:  find a\r\n        // floating-point that approximates remainder / other *from below*, add this\r\n        // into the result, and subtract it from the remainder.  It is critical that\r\n        // the approximate value is less than or equal to the real value so that the\r\n        // remainder never becomes negative.\r\n        res = ZERO;\r\n        rem = this;\r\n        while (rem.gte(divisor)) {\r\n            // Approximate the result of division. This may be a little greater or\r\n            // smaller than the actual value.\r\n            approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\r\n\r\n            // We will tweak the approximate result by changing it in the 48-th digit or\r\n            // the smallest non-fractional digit, whichever is larger.\r\n            var log2 = Math.ceil(Math.log(approx) / Math.LN2),\r\n                delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48),\r\n\r\n            // Decrease the approximation until it is smaller than the remainder.  Note\r\n            // that if it is too large, the product overflows and is negative.\r\n                approxRes = fromNumber(approx),\r\n                approxRem = approxRes.mul(divisor);\r\n            while (approxRem.isNegative() || approxRem.gt(rem)) {\r\n                approx -= delta;\r\n                approxRes = fromNumber(approx, this.unsigned);\r\n                approxRem = approxRes.mul(divisor);\r\n            }\r\n\r\n            // We know the answer can't be zero... and actually, zero would cause\r\n            // infinite recursion since we would make no progress.\r\n            if (approxRes.isZero())\r\n                approxRes = ONE;\r\n\r\n            res = res.add(approxRes);\r\n            rem = rem.sub(approxRem);\r\n        }\r\n        return res;\r\n    };\r\n\r\n    /**\r\n     * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\r\n     * @function\r\n     * @param {!Long|number|string} divisor Divisor\r\n     * @returns {!Long} Quotient\r\n     * @expose\r\n     */\r\n    LongPrototype.div = LongPrototype.divide;\r\n\r\n    /**\r\n     * Returns this Long modulo the specified.\r\n     * @param {!Long|number|string} divisor Divisor\r\n     * @returns {!Long} Remainder\r\n     * @expose\r\n     */\r\n    LongPrototype.modulo = function modulo(divisor) {\r\n        if (!isLong(divisor))\r\n            divisor = fromValue(divisor);\r\n        return this.sub(this.div(divisor).mul(divisor));\r\n    };\r\n\r\n    /**\r\n     * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n     * @function\r\n     * @param {!Long|number|string} divisor Divisor\r\n     * @returns {!Long} Remainder\r\n     * @expose\r\n     */\r\n    LongPrototype.mod = LongPrototype.modulo;\r\n\r\n    /**\r\n     * Returns the bitwise NOT of this Long.\r\n     * @returns {!Long}\r\n     * @expose\r\n     */\r\n    LongPrototype.not = function not() {\r\n        return fromBits(~this.low, ~this.high, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns the bitwise AND of this Long and the specified.\r\n     * @param {!Long|number|string} other Other Long\r\n     * @returns {!Long}\r\n     * @expose\r\n     */\r\n    LongPrototype.and = function and(other) {\r\n        if (!isLong(other))\r\n            other = fromValue(other);\r\n        return fromBits(this.low & other.low, this.high & other.high, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns the bitwise OR of this Long and the specified.\r\n     * @param {!Long|number|string} other Other Long\r\n     * @returns {!Long}\r\n     * @expose\r\n     */\r\n    LongPrototype.or = function or(other) {\r\n        if (!isLong(other))\r\n            other = fromValue(other);\r\n        return fromBits(this.low | other.low, this.high | other.high, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns the bitwise XOR of this Long and the given one.\r\n     * @param {!Long|number|string} other Other Long\r\n     * @returns {!Long}\r\n     * @expose\r\n     */\r\n    LongPrototype.xor = function xor(other) {\r\n        if (!isLong(other))\r\n            other = fromValue(other);\r\n        return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns this Long with bits shifted to the left by the given amount.\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     * @expose\r\n     */\r\n    LongPrototype.shiftLeft = function shiftLeft(numBits) {\r\n        if (isLong(numBits))\r\n            numBits = numBits.toInt();\r\n        if ((numBits &= 63) === 0)\r\n            return this;\r\n        else if (numBits < 32)\r\n            return fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);\r\n        else\r\n            return fromBits(0, this.low << (numBits - 32), this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\r\n     * @function\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     * @expose\r\n     */\r\n    LongPrototype.shl = LongPrototype.shiftLeft;\r\n\r\n    /**\r\n     * Returns this Long with bits arithmetically shifted to the right by the given amount.\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     * @expose\r\n     */\r\n    LongPrototype.shiftRight = function shiftRight(numBits) {\r\n        if (isLong(numBits))\r\n            numBits = numBits.toInt();\r\n        if ((numBits &= 63) === 0)\r\n            return this;\r\n        else if (numBits < 32)\r\n            return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);\r\n        else\r\n            return fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\r\n     * @function\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     * @expose\r\n     */\r\n    LongPrototype.shr = LongPrototype.shiftRight;\r\n\r\n    /**\r\n     * Returns this Long with bits logically shifted to the right by the given amount.\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     * @expose\r\n     */\r\n    LongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {\r\n        if (isLong(numBits))\r\n            numBits = numBits.toInt();\r\n        numBits &= 63;\r\n        if (numBits === 0)\r\n            return this;\r\n        else {\r\n            var high = this.high;\r\n            if (numBits < 32) {\r\n                var low = this.low;\r\n                return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, this.unsigned);\r\n            } else if (numBits === 32)\r\n                return fromBits(high, 0, this.unsigned);\r\n            else\r\n                return fromBits(high >>> (numBits - 32), 0, this.unsigned);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n     * @function\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     * @expose\r\n     */\r\n    LongPrototype.shru = LongPrototype.shiftRightUnsigned;\r\n\r\n    /**\r\n     * Converts this Long to signed.\r\n     * @returns {!Long} Signed long\r\n     * @expose\r\n     */\r\n    LongPrototype.toSigned = function toSigned() {\r\n        if (!this.unsigned)\r\n            return this;\r\n        return fromBits(this.low, this.high, false);\r\n    };\r\n\r\n    /**\r\n     * Converts this Long to unsigned.\r\n     * @returns {!Long} Unsigned long\r\n     * @expose\r\n     */\r\n    LongPrototype.toUnsigned = function toUnsigned() {\r\n        if (this.unsigned)\r\n            return this;\r\n        return fromBits(this.low, this.high, true);\r\n    };\r\n\r\n    return Long;\r\n});\r\n"]}